[{"firstHeader":"class","last_chapter_rule":"","pageList":[],"title":"我的主页","author":"@LoyDgIk","version":40,"url":"hiker://empty","col_type":"icon_small_4","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\neval(fetch(\"hiker://assets/home.js\"));\n\nvar _urgent=false;\nsetResult(HikerHome.load(\"main\",_urgent));","searchFind":"","search_url":"","titleColor":"","group":"①搜索🔎","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","icon":""},{"last_chapter_rule":"","pageList":[],"title":"资源网采集.xyq","author":"香雅情","version":1,"url":"hiker://files/rules/xyq/ZYWCJ.txt","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\neval(fetch('hiker://files/rules/xyq/zywcj.js'));zywhm();","searchFind":"js:\neval(fetch('hiker://files/rules/xyq/zywcj.js'));zywsea();","search_url":"hiker://$$$?wd=**&pg=1&ac=list$$$fypage","titleColor":"","group":"①搜索🔎","detail_col_type":"movie_1","detail_find_rule":"js:\r\neval(fetch('hiker://files/rules/xyq/zywcj.js',{}));\nTWEJ();","sdetail_col_type":"movie_1","sdetail_find_rule":"js:\neval(fetch('hiker://files/rules/xyq/zywcj.js'));zywerj();","ua":"mobile","preRule":"//检测是否有规则与JS文件\nif(!fetch(\"hiker://files/rules/xyq/zywcj.js\",{})||!fetch(\"hiker://files/rules/xyq/ZYWCJ.txt\",{})){\nvar ruletxt = fetch('https://codeberg.org/lzk23559/PublicRule/raw/branch/master/ZYWCJ.txt',{});\nwriteFile(\"hiker://files/rules/xyq/ZYWCJ.txt\",ruletxt);\n\nvar rulejs = fetch('https://codeberg.org/lzk23559/PublicRule/raw/branch/master/zywcj.js',{});\nwriteFile(\"hiker://files/rules/xyq/zywcj.js\",rulejs);\n}\n\n//执行预处理\neval(fetch('hiker://files/rules/xyq/zywcj.js'));\nzywpre();","pages":"[]"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"工具","path":"utiliy","rule":"js:\nvar api = {\n    host: \"http://hiker.nokia.press/hikerule\",\n    usersUrl: \"/dev/users?order=\", //用户列表\n    ruleCountUrl: \"/dev/rulecount\", //获取规则数量\n    rulesUrl: \"/dev/get\", //用户对应的规则列表仅仅获取公开\n    rulesAllUrl: \"/dev/getall\", //开发者对应的规则列表可获取私有\n    importUrl: \"/rulelist.json?id=\", //规则详情可导入\n    infoSetUrl: \"/dev/set_info\",\n    nowConUrl: \"/sql_info/get_now_con\",\n    infoGetUrl: \"/dev/get_info?name=\",\n    settingsGetUrl: \"/dev/get_settings?name=\",\n    gupload: \"/dev/gupload\",\n    gtimeover: \"/dev/gtimeover\",\n    getbyid: \"/dev/getbyid\",\n    ruleListJson: \"/rulelist.json\",\n    auth: \"/dev/get_auth\",\n    timeover: \"/dev/timeover\",\n    share: \"/dev/share\",\n    genAuth: \"/dev/gen_auth\",\n    deleteUrl: \"/dev/delete\",\n    jsonList: \"/dev/json_list\",\n    search: \"/dev/search\",\n    new_dev: \"/dev_regist/new\",\n    new_getId: \"/dev_regist/get_id\",\n    new_confirm: \"/dev_regist/confirm\",\n    modify_pwd: \"/modify/password\",\n    modify_name: \"/modify/name\",\n    modify_ava: \"/modify/avatar\",\n    user: \"/dev/user/\",\n    get_rule_note: \"/modify/get_rule_note/\",\n    set_rule_pic: \"/modify/rule_pic/\",\n    set_rule_note: \"/modify/rule_note/\"\n}\n$.exports.range = function(m, n) {\n    return Math.floor(Math.random() * (m - n + 1) + n);\n}\n$.exports.mapColType = function(target, type, n) {\n    for (let i = 0; i < n; i++) {\n        target.push({\n            col_type: type\n        });\n    }\n}\n$.exports.getApi = function(k) {\n    return api.host + api[k];\n}\n$.exports.localRuleVer = function(localRuleList, rule) {\n    let localRule;\n    for (let i = 0; i < localRuleList.length; i++) {\n        let item = localRuleList[i];\n        let au = item.author || \"\";\n        if (item.title === rule.name && au.length > 0 && rule.author.includes(au)) {\n            localRule = item;\n            break;\n        }\n    }\n    if (localRule === void 0) {\n        return -1;\n    } else {\n        return localRule.version;\n    }\n}\n$.exports.color = function(text, color) {\n    text += \"\";\n    if (text.indexOf(\"““””\") === 0) {\n        text.replace(\"““””\", \"\");\n    }\n    return \"““””<font color='\" + color + \"'>\" + text + \"</font>\";\n}\n\nfunction htmlTag(tag, text) {\n    text += \"\";\n    if (text.indexOf(\"““””\") === 0) {\n        text.replace(\"““””\", \"\");\n    }\n    return \"““””\" + \"<\" + tag + \">\" + text + \"</\" + tag + \">\";\n\n}\n\nfunction getNowFormatDate() {\n            let date = new Date();\n            let seperator1 = \"-\";\n            let seperator2 = \":\";\n            let month = date.getMonth() + 1;\n            let strDate = date.getDate();\n            let strHours = date.getHours();\n            let strMinutes = date.getMinutes();\n            let strSeconds = date.getSeconds()+1;\n            if (month >= 1 && month <= 9) {\n                month = \"0\" + month\n            }\n            if (strDate >= 0 && strDate <= 9) {\n                strDate = \"0\" + strDate\n            }\n            if (strHours >= 0 && strHours <= 9) {\n                strHours = \"0\" + strHours\n            }\n            if (strMinutes >= 0 && strMinutes <= 9) {\n                strMinutes = \"0\" + strMinutes\n            }\n            if (strSeconds >= 0 && strSeconds <= 9) {\n                strSeconds = \"0\" + strSeconds\n            }\n            //let currentdate = date.getFullYear() + seperator1 + month + seperator1 + strDate + \" \" + strHours + seperator2 + strMinutes + seperator2 + strSeconds;\n            let currentdate = (date.getFullYear()-2020)+''+ month +''+ strDate +''+ strHours+'' + strMinutes +''+ Math.ceil(strSeconds/7);\n            return parseInt(currentdate)\n        }\n$.exports.getNowFormatDate = getNowFormatDate;\n$.exports.htmlTag = htmlTag;\n$.exports.small = function(text) {\n    return htmlTag(\"small\", text);\n}\n$.exports.getFile = function() {\n    var File = request(\"hiker://files/WarehouseUSER.json\") || \"{}\";\n    try {\n        return JSON.parse(File);\n    } catch (e) {\n        writeFile(\"hiker://files/WarehouseUSER.json\", \"{}\");\n        return {};\n    }\n}\n$.exports.getUserDate =function(){\n    var File = request(\"hiker://files/WarehouseUSERA.json\") || \"[]\";\n    try {\n        return JSON.parse(File);\n    } catch (e) {\n        writeFile(\"hiker://files/WarehouseUSERA.json\", \"[]\");\n        return [];\n    }\n}\n$.exports.existFile = function(spath, ipath, headers) {\n    let scode = request(spath);\n    if (!scode) {\n        writeFile(spath, request(ipath, headers));\n    }\n}\n\nlet host = \"http://hiker.nokia.press\";\n//let host = \"http://192.168.3.94:8079\";\nlet home = base64Decode(\"aGlrZXI6Ly9ob21l\");\nlet newApi = {\n    \"dis_new\": \"/hikerule/new_rule_discuss/\",\n    \"dis_verify\": \"/hikerule/rule_discuss/get_yzm\",\n    \"dis_get\": \"/hikerule/rule_discuss/\",\n    \"dis_set\": \"/hikerule/modify/can_discuss/\",\n    \"dis_new_user\": \"/hikerule/rule_discuss/new_user\",\n    \"dis_login\":\"/hikerule/rule_discuss/user_login\",\n    \"dis_dev_discuss\":\"/hikerule/modify/dev_can_discuss\",\n    \"dis_dev_control\":\"/hikerule/rule_discuss/remove/\",\n    \"all_rule\":\"/hikerule/get_rules\",\n    \"dis_get_reply\":\"/hikerule/get_reply_rule_discuss\",\n    \"dis_reply\":\"/hikerule/dev_new_rule_discuss/\",\n}\n\nfunction setApi(object) {\n    let target = {};\n    for (let key in object) {\n        target[key]=host+object[key]\n    }\n    return target;\n}\n\n$.exports.api = setApi(newApi);\n$.exports.api.host=host;\n$.exports.api.home=home;"},{"col_type":"movie_3","name":"开发者登录","path":"devLogin","rule":"js:\nsetPageTitle(\"开发者登录\");\nconst {\n    getApi,\n    htmlTag,\n    mapColType,\n    small,\ngetFile\n} = $.require(\"hiker://page/utiliy\");\nvar data = [];\naddListener('onClose', $.toString(()=>{\n    clearVar(\"WarehouseUsername\");\n    clearVar(\"WarehousePassword\");\n}))\ndata.push({\n    title: '账号',\n    col_type: 'input',\n    extra: {\n        defaultValue: getVar('WarehouseUsername',''),\n        type:\"number\",\n        onChange: 'putVar(\"WarehouseUsername\",input)'\n    }\n}, {\n    title: '密码',\n    col_type: 'input',\n    extra: {\n        defaultValue: getVar('WarehousePassword', ''),\n        type: \"password\",\n        onChange: 'putVar(\"WarehousePassword\",input)'\n    }\n});\n\ndata.push({\n    title:\"&nbsp;&nbsp;<a href='hiker://page/Register'>注册</a>\",\n    col_type:\"rich_text\"\n});\nmapColType(data, \"line_blank\", 1);\nlet user = getFile();\ndata.push({\n    title: htmlTag(\"b\", \"登录\"),\n    url: $().lazyRule((url, f)=> {\n        let username = getVar('WarehouseUsername', ''),\n            password = getVar('WarehousePassword', '');\n        if(username === \"\" && password ===\"\"){\n            return \"toast://账号和密码不能为空\"\n        }\n        let myUrl = url + '?qq=' + username + '&password=' + password;\n        let code_str = request(myUrl);\n        let code = JSON.parse(code_str);\n        if (code.status == 0) {\n            f.username=username;\n            f.password=password\n            writeFile('hiker://files/WarehouseUSER.json', JSON.stringify(f));\n            back();\n            return \"toast://登录成功\";\n        }else{\n            return \"toast://账号或密码错误\";\n        }\n    }, getApi(\"rulesAllUrl\"),user),\n    col_type: 'text_center_1'\n});\nsetResult(data);"},{"col_type":"icon_2_round","name":"开发者管理","path":"devManage","rule":"js:\nsetPageTitle(\"规则管理\");\n\n\naddListener('onClose', 'clearVar(\"Warehouse.back\",\"\");');\nif (getVar(\"Warehouse.back\") === \"1\") {\n    back();\n}\nconst {\n    getApi,\n    color,\n    small,\n    getFile,\n    existFile,\n    mapColType,\n    api\n} = $.require(\"hiker://page/utiliy\");\nlet {\n    dev,\n    username,\n    password\n} = MY_PARAMS;\n//existFile(\"hiker://files/rules/dzHouse/html/开发者分享.html\", \"https://erp.scwinbao.com/hikerule/rulelist.json?id=539\");\nlet ruleList = JSON.parse(request(getApi(\"rulesAllUrl\") + '?qq=' + username + '&password=' + password)).result;\nlet MOBILE_UA = 'Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Mobile Safari/537.36';\nlet infoSetUrl = getApi(\"infoSetUrl\");\nlet infoGetUrl = getApi(\"infoGetUrl\") + username;\nlet settingsGetUrl = getApi(\"settingsGetUrl\") + username;\nputVar(\"dev_set_info\", [username, password, infoSetUrl, MOBILE_UA, infoGetUrl].join(\"$$\"));\n\nlet data = [];\n\ndata.push({\n    title: '““””<big>仓库设置</big>&nbsp;&nbsp;&nbsp;<small><u>（ 个人资料 >）</u></small>',\n    desc: '““””您共有 <span style=\"color: #ff7000\">' + ruleList.length + '</span>' + \" 条规则。\\n点击规则可进行分享、删除、导入操作及查看详情\",\n    url: \"hiker://page/PersonalData#noHistory##noRecordHistory#\",\n    extra:{id:dev.id},\n    col_type: 'text_1'\n});\nmapColType(data, \"line\", 2);\ndata.push({\n    title: small(color(\"更改公告✍\", \"#34b1ff\")),\n    url: \"x5://file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/dzHouse/html/dev_info_edit.html\",\n    col_type: 'text_3'\n});\ndata.push({\n    title: small(color(\"更多分享📲\", \"#34b1ff\")),\n    //url: \"x5://file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/dzHouse/html/开发者分享.html\",\n  url: \"hiker://page/moreShare\",\n    col_type: 'text_3'\n});\ndata.push({\n    title: small(color(\"升级依赖📥\", \"#34b1ff\")),\n    url: $(\"升级会重新从仓库拉取相关的静态页面到本地\\n确认升级吗?\").confirm((host) => {\n        writeFile(\"hiker://files/rules/dzHouse/html/开发者分享.html\", request(host+'/hikerule/rulelist.json?id=539'));\n        writeFile(\"hiker://files/rules/dzHouse/html/dev_info_edit.html\", request(host+'/hikerule/rulelist.json?id=402'));\n        writeFile(\"hiker://files/rules/dzHouse/html/dev_info_get.html\", request(host+'/hikerule/rulelist.json?id=404'));\n        refreshPage(false);\n        return \"toast://已重置开发者分享,简介查看,简介编辑等静态文件\";\n    },api.host),\n    col_type: 'text_3'\n});\nlet devSetBack;\ntry {\n    devSetBack = JSON.parse(request(settingsGetUrl));\n} catch (e) {\n    devSetBack = {};\n}\n\nfunction setSettingItem(basic) {\n    let temp = {\n        title: basic.title,\n        col_type: basic.col_type,\n        url: $(basic.confirm).confirm((url, msg) => {\n            let back = request(url);\n            let ret = JSON.parse(back);\n            if (ret.status == 0) {\n                refreshPage(true);\n                return \"toast://\" + msg[0];\n            } else {\n                refreshPage(false);\n                return \"toast://\" + msg[1] + \"\\n\" + ret.detail;\n            }\n        }, basic.url, basic.msg)\n    };\n    return temp;\n}\nif (devSetBack.status == 0) {\n    let devSettings = devSetBack.result;\n    let share = {\n        col_type: \"text_3\"\n    };\n    if (devSettings.share_public) {\n        share.title = small(color(\"公开上传\", \"green\") + color(\"(私藏)\", \"#00bfff\"));\n        share.url = getApi(\"gupload\") + \"?qq=\" + username + \"&password=\" + password + \"&flag=1\";\n        share.confirm = \"是否确认私藏以后提交的规则?\";\n        share.msg = [\"已私藏\", \"私藏失败\"];\n    } else {\n        share.title = small(color(\"私密上传\", \"red\") + color(\"(公开)\", \"#adff2f\"));\n        share.url = getApi(\"gupload\") + \"?qq=\" + username + \"&password=\" + password;\n        share.confirm = \"是否确认公开以后提交的规则?\";\n        share.msg = [\"已公开\", \"公开失败\"];\n    }\n    data.push(setSettingItem(share));\n    let timeOver = {\n        col_type: \"text_3\"\n    };\n    if (devSettings.time_over) {\n        timeOver.title = small(color(\"短时秘钥\", \"green\") + color(\"(永久)\", \"#00bfff\"));\n        timeOver.url = getApi(\"gtimeover\") + \"?qq=\" + username + \"&password=\" + password + \"&flag=1\";\n        timeOver.confirm = \"是否确认以后的私藏规则分享不过期?\";\n        timeOver.msg = [\"已设为永久\", \"设为永久失败\"];\n    } else {\n        timeOver.title = small(color(\"永久秘钥\", \"red\") + color(\"(过期)\", \"#adff2f\"));\n        timeOver.url = getApi(\"gtimeover\") + \"?qq=\" + username + \"&password=\" + password;\n        timeOver.confirm = \"确认要以后分享的私藏规则自动到期?\";\n        timeOver.msg = [\"已设为过期\", \"设为过期失败\"];\n    }\n    data.push(setSettingItem(timeOver));\n    let discuss = {\n        col_type: \"text_3\"\n    };\n    if (devSettings.can_discuss) {\n        discuss.title = small(color(\"允许评论\", \"red\") + color(\"(不许)\", \"#adff2f\"));\n        discuss.url = api.dis_dev_discuss + \"?qq=\" + username + \"&password=\" + password+ \"&flag=1\";\n        discuss.confirm = \"是否确认以后上传的规则允许评论?\";\n        discuss.msg = [\"已设为不许\", \"设置失败\"];\n        \n    } else {\n        discuss.title = small(color(\"不许评论\", \"green\") + color(\"(允许)\", \"#00bfff\"));\n        discuss.url = api.dis_dev_discuss + \"?qq=\" + username + \"&password=\" + password;\n        discuss.confirm = \"是否确认以后上传的规则允许评论?\";\n        discuss.msg = [\"已设为允许\", \"设置失败\"];\n    }\n    data.push(setSettingItem(discuss));\n}\nmapColType(data, \"line\", 2);\nfor (let item of ruleList) {\n    let my_t_excode1 = '';\n    let my_t_excode2 = '';\n    if (item.state != 'public') {\n        my_t_excode1 += '㊙️';\n    } else {\n        my_t_excode1 += '';\n    }\n    data.push({\n        title: my_t_excode1 + item.name + my_t_excode2,\n        url: \"hiker://page/manageRule#noHistory##noRecordHistory#\",\n        extra: {\n            id: item.id,\n            username: username,\n            password: password\n        },\n        pic_url: item.pic,\n    })\n}\nif (ruleList.length === 0) {\n    data.push({\n        title: \"<h5 style='text-align:center'>快来上传你的第一条规则吧！</h5>\",\n        col_type: \"rich_text\"\n    });\n}\nsetResult(data);"},{"col_type":"movie_3","name":"规则详细-dev","path":"manageRule","rule":"js:\nconst {\n    getApi,\n    color,\n    small,\n    getFile,\n    existFile,\n    mapColType,\n    htmlTag,\n    api\n} = $.require(\"hiker://page/utiliy\");\nlet {\n    id,\n    username,\n    password\n} = MY_PARAMS;\nlet dataItem = JSON.parse(request(getApi(\"getbyid\") + \"?id=\" + id)).result;\nsetPageTitle(\"编辑「\" + dataItem.name + \"」\");\nlet reqByGet = \"?id=\" + dataItem.id + \"&qq=\" + username + \"&password=\" + password;\nlet ruleListJson = getApi(\"ruleListJson\") + \"?id=\";\nlet data = [];\ndata.push({\n    title: htmlTag(\"big\", \"版本\"),\n    desc: \"““””云端版本:\" + color(dataItem.ver, \"#5cff2c\") + \"\\n上次提交于: [\" + color(dataItem.last_update, \"#ff7000\") + \"]\",\n    url: $(\"<开发者>\\n\" + dataItem.author + \"\\n<名称>\\n\" + dataItem.name + \"\\n<云端版本>\\n\" + dataItem.ver + \"\\n<更新时间>\\n[\" + dataItem.last_update + \"]\").confirm(() => {}),\n    col_type: 'text_1'\n});\nlet dataType = {\n    home_rule_url: '首页云规则',\n    publish: '提交云仓库规则',\n    js_url: '网页插件规则',\n    html: '静态页面',\n    config: '主页配置'\n};\n\nlet basic = {\n    col_type: \"text_1\",\n    url: \"hiker://empty\"\n};\nlet dataTypeTips = dataType[dataItem.data_type] || '未知规则:' + dataItem.data_type;\n\nbasic.title = htmlTag(\"big\", \"类型\") + \"\\t\\t\\t\" + small(\"(id:\" + dataItem.id + \")\");\nbasic.desc = \"数据类型：\" + color(dataTypeTips, \"#cb54ff\") + \"\\n分享状态为：\" + dataItem.state;\nif ([\"html\", \"config\", \"js_url\"].includes(dataItem.data_type)) {\n    basic.desc += \"\\n““”” =>\" + small(\"点此预览\");\n    basic.url = ruleListJson + dataItem.id;\n}\nlet auth = \"\";\nif (dataItem.state == \"private\") {\n    let auth_back = JSON.parse(request(getApi(\"auth\") + reqByGet));\n    basic.title = basic.title + \"\\n\" + small(color(auth_back.result, \"grey\"));\n    auth = '&auth=' + auth_back.result;\n    basic.url = basic.url === \"hiker://empty\" ? basic.url : basic.url + auth;\n}\ndata.push(basic);\ndata.push({\n    title: htmlTag(\"big\", \"操作\"),\n    col_type: \"text_1\",\n    url: \"toast://你才是最帅的那个人！\"\n});\nlet importUrl, ruleCode, shareUrl, backCode = \"\";\nif (!dataItem.is_json) {\n    backCode = request(ruleListJson + dataItem.id + auth);\n}\nswitch (dataItem.data_type) {\n    case \"home_rule_url\":\n        ruleCode = \"海阔视界首页频道规则【\" + dataItem.name + \"】￥home_rule_url￥\" + ruleListJson + dataItem.id + auth;\n        importUrl = \"rule://\" + base64Encode(ruleCode)\n        break;\n    case 'publish':\n        ruleCode = '海阔视界规则分享，当前分享的是：' + dataItem.name + '￥publish￥' + base64Encode(backCode);\n        importUrl = 'rule://' + base64Encode(ruleCode);\n        break;\n    case 'js_url':\n        ruleCode = '海阔视界规则分享，当前分享的是：网页插件￥js_url￥' + dataItem.name + '@base64://' + base64Encode(backCode);\n        importUrl = 'rule://' + base64Encode(ruleCode);\n        break;\n    case 'html':\n        let file_tmp = dataItem.name.split('.');\n        let file_path = file_tmp.length > 1 ? file_tmp[file_tmp.length - 1] + \"/\" + dataItem.name : dataItem.name;\n        ruleCode = \"海阔视界本地文件分享￥file_url￥hiker://files/rules/dzHouse/\" + file_path + \"@\" + ruleListJson + dataItem.id + auth;\n        importUrl = 'rule://' + base64Encode(ruleCode);\n        break\n    case \"config\":\n        importUrl = $().rule(password => {\n            eval(fetch(\"hiker://assets/home.js\"));\n            HikerHome.load(\"import\", password);\n        }, backCode);\n        break;\n}\nlet my_col_type = \"text_2\";\nif (importUrl) {\n    data.push({\n        title: \"导入规则\",\n        url: importUrl,\n        col_type: my_col_type\n    });\n}\nif (ruleCode) {\n    data.push({\n        title: \"分享规则\",\n        url: \"copy://\" + ruleCode,\n        col_type: my_col_type\n    });\n}\n\nfunction setSettingItem(basic, pattern) {\n    let temp = {\n        title: basic.title,\n        col_type: basic.col_type,\n        url: $(basic.confirm).confirm((url, msg, pattern) => {\n            let backA = request(url);\n            let ret = JSON.parse(backA);\n            if (ret.status == 0) {\n                pattern ? back() : refreshPage(false);\n                return \"toast://\" + msg[0];\n            } else {\n                pattern ? back() : refreshPage(false);\n                return \"toast://\" + msg[1] + \"\\n\" + ret.detail;\n            }\n        }, basic.url, basic.msg, pattern)\n    };\n    return temp;\n}\nif (dataItem.state == 'private') {\n    data.push({\n        title: \"设为公开\",\n        url: $(getApi(\"share\") + reqByGet + \"&flag\" + \"#noLoading#\").lazyRule(() => {\n            request(input);\n            refreshPage(false);\n            return \"toast://已设为公开\";\n        }),\n        col_type: my_col_type\n    }, {\n        title: \"随机密钥\",\n        col_type: my_col_type,\n        url: $(getApi(\"genAuth\") + reqByGet + \"#noLoading#\").lazyRule(() => {\n            let back = request(input);\n            let ret = JSON.parse(back);\n            if (ret.status == 0) {\n                refreshPage(false);\n                return \"toast://已生成随机密码\\n\" + ret.result\n            } else {\n                refreshPage(true);\n                return \"toast://随机密码生成失败\"\n            }\n        })\n    });\n    let timeOver = {\n        col_type: my_col_type\n    };\n    if (dataItem.time_over) {\n        timeOver.title = small(color(\"短时密钥\", \"green\") + color(\"(→永久)\", \"red\"));\n        timeOver.url = getApi(\"timeover\") + reqByGet + \"&flag=1\";\n        timeOver.confirm = \"是否确认以后的私藏规则分享不过期?\";\n        timeOver.msg = [\"已设为永久\", \"设为永久失败\"];\n    } else {\n        timeOver.title = small(color(\"永久密钥\", \"red\") + color(\"(→短时)\", \"green\"));\n        timeOver.url = getApi(\"timeover\") + reqByGet;\n        timeOver.confirm = \"确认要以后分享的私藏规则自动到期?\";\n        timeOver.msg = [\"已设为过期\", \"设为过期失败\"];\n    }\n    data.push(setSettingItem(timeOver));\n} else if (dataItem.state == 'public') {\n    data.push({\n        title: \"设为私有\",\n        url: $(getApi(\"share\") + reqByGet + \"&flag=1#noLoading#\").lazyRule(() => {\n            request(input);\n            refreshPage(false);\n            return \"toast://已设为私有\";\n        }),\n        col_type: my_col_type\n    });\n}\ndata.push(setSettingItem({\n    title: \"删除数据\",\n    confirm: \"是否确认删除\",\n    msg: [\"已删除\", \"删除失败\"],\n    url: getApi(\"deleteUrl\") + reqByGet,\n    col_type: my_col_type\n}, true));\ndata.push({\n    title: \"设置图标\",\n    url: $(dataItem.pic_url, \"输入图标地址\").input(api => {\n        if (input === \"\") {\n            return \"toast://你在逗我链接哪?\"\n        }\n        let result = request(api + \"&rule_pic=\" + input);\n        result = JSON.parse(result);\n        if (result.status !== 0) {\n            return \"toast://\" + result.detail;\n        }\n        return \"toast://修改成功\";\n    }, getApi(\"set_rule_pic\") + dataItem.id + reqByGet),\n    col_type: my_col_type\n});\n\ndata.push({\n    title: dataItem.can_discuss ? \"禁止评论\" : \"开启评论\",\n    url: $(api.dis_set + dataItem.id + reqByGet + \"&state=\" + (dataItem.can_discuss ? \"\" : 1)).lazyRule((can_discuss) => {\n        request(input);\n        refreshPage(false);\n        return can_discuss ? \"toast://已禁止评论\" : \"toast://已开启评论\";\n    }, dataItem.can_discuss),\n    col_type: my_col_type\n});\nMY_PARAMS.name = dataItem.name;\ndata.push({\n    title: \"设置备注\",\n    url: \"hiker://page/set_rule_notes\",\n    extra: MY_PARAMS,\n    col_type: my_col_type\n});\nif (dataItem.is_json && dataItem.data_type === \"home_rule_url\" && !dataItem.is_json_list) {\n    data.push({\n        title: '进入频道',\n        url: $( /*\"#noLoading#\"*/ ).lazyRule((name,home) => {\n            let ruleList = JSON.parse(request(home));\n            let hasRule = ruleList.some(item => item.title === name);\n            if (hasRule) {\n                putVar(\"Warehouse.back\", \"1\");\n                back();\n                return home+\"s@\" + name;\n            } else {\n                return \"toast://未安装\";\n            }\n        }, dataItem.name,api.home),\n        col_type: my_col_type\n    });\n}\ndata.push({\n    col_type: \"line_blank\"\n});\ndata.push({\n    title: dataItem.good_num,\n    pic_url: \"hiker://files/icon/赞.svg\",\n    col_type: \"icon_small_3\",\n    url: \"hiker://empty\"\n});\ndata.push({\n    title: dataItem.bad_num,\n    pic_url: \"hiker://files/icon/踩.svg\",\n    col_type: \"icon_small_3\",\n    url: \"hiker://empty\"\n});\ndata.push({\n    title: \"评论\",\n    pic_url: \"hiker://files/icon/评论.svg\",\n    col_type: \"icon_small_3\",\n    url: \"hiker://page/Reply#noHistory##noRecordHistory#\",\n    extra: {\n        ruleId: dataItem.id,\n        name: dataItem.author,\n        password: password,\n        username: username\n    }\n});\nlet totalSum = dataItem.good_num + dataItem.bad_num;\n\ndata.push({\n    title: htmlTag(\"big\", \"评论(\" + totalSum + \")\") + \"\\t\\t\\t\" + small(htmlTag(\"u\", \"查看全部评论(控评) >\")),\n    col_type: \"text_1\",\n    url: \"hiker://page/Comment\",\n    extra: {\n        url: \"hiker://empty#fypage#noHistory##noRecordHistory#\",\n        id: dataItem.id,\n        totalSum: totalSum,\n        no_active: true,\n        username: username,\n        password: password\n    }\n});\n//const longestSum=120;\nlet icon = {\n    \"good\": \"👍\",\n    \"bad\": \"👎\",\n    \"reply\": \"开发者🗣\"\n}\nif (totalSum === 0) {\n    data.push({\n        title: \"<h5 style='text-align:center'>一条评论也没有，快来抢沙发吧！</h5>\",\n        col_type: \"rich_text\"\n    });\n} else {\n    let commentList = JSON.parse(request(api.dis_get + dataItem.id + \"?limit=5\")).result;\n    for (let item of commentList) {\n        let Reply = item.discuss_type===\"reply\"&&item.reply_to_name!==false&&item.reply_to_id!==false?\"‘‘回复@\"+item.reply_to_name+\" #\"+item.discuss_id+\"’’\\n\":\"\";\n        data.push({\n            title: item.name + \"&nbsp;&nbsp;<font color='gray'><small>#\" + item.id + \"</small><font>\",\n            col_type: \"avatar\",\n            url: \"hiker://page/Reply\",\n            extra:{\n                ruleId: dataItem.id,\n                name: item.name,\n                password: password,\n                username: username,\n                replyId:item.id\n            },\n            pic_url: item.avatar_url\n        });\n        data.push({\n            title: item.discuss_text,\n            desc: Reply+item.create_date + \"·\" + icon[item.discuss_type],\n            col_type: \"text_1\",\n            url: \"hiker://page/info\",\n            extra: {\n                name: item.name,\n                type: \"long_text\",\n                text: item.discuss_text\n            },\n            pic_url: item.avatar_url\n        });\n    }\n}\ndata.push({\n    col_type: \"line_blank\"\n});\nsetResult(data);"},{"col_type":"icon_2_round","name":"规则列表","path":"rules","rule":"js:\naddListener('onClose', 'clearVar(\"Warehouse.back\",\"\");clearVar(\"Warehouse.filter\",\"\");clearVar(\"Warehouse.type\",\"\");');\n\nif (getVar(\"Warehouse.back\") === \"1\") {\n    back(false);\n}\n\nconst {\n    getApi,\n    api,\n    color,\n    small,\n    localRuleVer,\n    htmlTag\n} = $.require(\"hiker://page/utiliy\");\nconst { mergeSort } = $.require(\"hiker://page/sort\");\nlet {\n    avatarUrl,\n    qq\n} = MY_PARAMS;\nlet dataType = getVar(\"Warehouse.type\",\"\");\nlet backCode = JSON.parse(request(getApi(\"rulesUrl\") + \"?name=\" + qq+\"&data_type=\"+dataType));\nlet devName = backCode.dev_name;\nputVar(\"Warehouse.filter\", devName);\nlet ruleList = backCode.result;\nlet subUrl = getApi(\"jsonList\") + \"?name=\" + qq;\nlet hasSub = hasHomeSub(subUrl);\nlet devInfo = \"这个人很懒,什么都没写哦~\";\nlet tmpJson = JSON.parse(request(getApi(\"infoGetUrl\") + qq));\nif (tmpJson.status == 0) {\n    devInfo = tmpJson.result || devInfo;\n}\nlet subFlag = hasSub ? '🆗' : '📡';\nlet data = [];\n\ndata.push({\n    title: \"““””\" + devName + \"\\n\\n\" + small(htmlTag(\"u\", \"点击查看完整公告\")),\n    desc: small(devInfo),\n    url: 'hiker://page/info',\n    extra: {\n        text: devInfo,\n        name: devName,\n        type:\"rich_text\"\n    },\n    pic_url: avatarUrl,\n    col_type: 'movie_1_vertical_pic'\n});\ndata.push({\n    title: \"<big>订阅管理</big>&nbsp;&nbsp;<small>(当前\" + (hasSub ? \"已订阅\" : \"未订阅\") + \")</small>\",\n    col_type: \"rich_text\"\n});\n\nlet sub_code = '海阔视界合集规则订阅￥home_sub￥' + devName + \"合集@@\" + subUrl;\nlet rulesCode = '海阔视界合集规则￥home_rule_url￥' + subUrl;\ndata.push({\n    title: '““””<span style=\"color: #ff7000\">一键订阅</span>',\n    desc: '订阅““””<span style=\"color: #5cff2c\">' + devName + '</span>的所有单规则，合集需单独订阅',\n    url: sub_code,\n    col_type: 'text_3'\n});\ndata.push({\n    title: '““””<span style=\"color: #ff7000\">导入全部</span>',\n    url: rulesCode,\n    col_type: 'text_3'\n});\ndata.push({\n    title: '““””<span style=\"color: #ff7000\">导入轻合集</span>',\n    url: $().lazyRule((devName,subUrl)=>{\n        const {genRule}=$.require(\"hiker://page/genApi\");\n    let import_rule=genRule(\"轻合集.\"+devName,subUrl);\n    //copy(import_rule);\n    let ruleCode=parsePaste(import_rule.split(\"\\n\")[0]);\n    //return \"hiker://empty\"\n    importUrl = 'rule://' + base64Encode(ruleCode);\n    return importUrl\n    },devName,subUrl),\n    col_type: 'text_3'\n});\ndata.push({\n    title: \"<small>提示：开发者单独分享的合集文件只能单独导入。</small>\",\n    col_type: \"rich_text\"\n});\ndata.push({\n    title: \"<big>规则列表</big>&nbsp;&nbsp;<small>(共\" + ruleList.length + \"条)</small>\",\n    col_type: \"rich_text\"\n});\nlet dataTypeList = {\n    \"\":\"全部\",\n    \"home_rule_url\": '小程序',\n    //\"publish\": '提交云仓库规则',\n    \"js_url\": '网页插件',\n    \"html\": '静态页面',\n    \"config\": '主题'\n};\nfor(let key in dataTypeList){\n    data.push({\n        title:dataType===key?\"““\"+dataTypeList[key]+\"””\":dataTypeList[key],\n        url:$(\"#noLoading#\").lazyRule((key)=>{\n            putVar(\"Warehouse.type\",key);\n            refreshPage(false);\n            return \"hiker://empty\";\n        },key),\n        col_type:\"scroll_button\"\n    });\n}\nif (ruleList.length > 20) {\n    data.push({\n        title: \"搜索\",\n        url: $.toString(name => \"hiker://search?s=\" + input + \"&rule=\" + name, MY_RULE.title),\n        col_type: \"input\",\n        desc: \"搜索当前开发者的规则\"\n    });\n}\nlet homeList = JSON.parse(request(api.home));\nlet mRuleList = [];\nfor (var item of ruleList) {\n    var name = item.name;\n    if (item.is_tap) {\n        let location = JSON.parse(request(getApi(\"ruleListJson\") + \"?id=\" + item.id));\n        item.id = location.id;\n        item.name = location.name;\n        item.author = location.author;\n        item.data_type = location.data_type;\n        item.ver = location.ver\n    }\n    item.version = item.ver;\n    let label = \"\",\n        lver = -2;\n    if (item.is_json && item.data_type === \"home_rule_url\") {\n        lver = localRuleVer(homeList, item);\n        if (lver === -1) {\n            label = \"🆕\";\n        } else if (lver < item.ver) {\n            label = \"🆙\";\n        }\n    }\n    mRuleList.push({\n        title: label + name,\n        url: \"hiker://page/ruleDetail#noHistory##noRecordHistory#\",\n        extra: {\n            lver: lver,\n            id: item.id\n        },\n        pic_url: item.pic,\n    });\n}\n/* 归并排序 Start */\nmRuleList = mergeSort(mRuleList);\n/* 归并排序 End */\ndata.push.apply(data, mRuleList) \nsetResult(data);\n"},{"col_type":"movie_3","name":"规则详细-user","path":"ruleDetail","rule":"js:\nconst {\n    getApi,\n    color,\n    small,\n    htmlTag,\n    api\n} = $.require(\"hiker://page/utiliy\");\nlet {\n    id,\n    lver\n} = MY_PARAMS;\nlet dataItem = JSON.parse(request(getApi(\"getbyid\") + \"?id=\" + id)).result;\nsetPageTitle(\"「\" + dataItem.name + \"」\")\nlet ruleListJson = getApi(\"ruleListJson\") + \"?id=\";\nlet data = [];\nvar hasSub = false;\n\nif (dataItem.is_json_list) {\n    hasSub = hasHomeSub(ruleListJson + dataItem.id);\n} else if (!dataItem.is_json_list && dataItem.data_type == 'home_rule_url') {\n    hasSub = hasHomeSub(ruleListJson + dataItem.id + '&debug=true');\n}\n\ndata.push({\n    title: htmlTag(\"big\", \"版本\"),\n    desc: \"““””开发者：\" + color(dataItem.author, \"#228BE6\") + \"\\n云端版本：\" + color(dataItem.ver, \"#5cff2c\") + \"\\t\\t本地版本：\" + color(lver, \"#5cff2c\") + \"\\n更新于: [\" + color(dataItem.last_update, \"#ff7000\") + \"]\",\n    url: $(\"<开发者>\\n\" + dataItem.author + \"\\n<名称>\\n\" + dataItem.name + \"\\n<云端版本>\\n\" + dataItem.ver + \"\\n<本地版本>\\n\" + lver + \"\\n<更新时间>\\n[\" + dataItem.last_update + \"]\").confirm(() => {}),\n    col_type: 'text_1'\n});\nlet dataType = {\n    home_rule_url: '首页云规则',\n    publish: '提交云仓库规则',\n    js_url: '网页插件规则',\n    html: '静态页面',\n    config: '主页配置'\n};\n\nlet basic = {\n    col_type: \"text_1\",\n    url: \"hiker://empty\"\n};\nlet dataTypeTips = dataType[dataItem.data_type] || '未知规则：' + dataItem.data_type;\n\nlet safe_tip=dataItem.is_safe?\"安全\":\"危险\";\nlet not_safe_note=dataItem.not_safe_note;\nbasic.title = htmlTag(\"big\", \"类型\") + \"\\t\\t\\t\" + small(\"(id:\" + dataItem.id + \")\")+\"\\t\\t\\t\" + small(\"(风险检测:\" +safe_tip+\")\");\nbasic.desc = \"数据类型：\" + color(dataTypeTips, \"#cb54ff\") + \"\\n分享状态为：\" + dataItem.state;\nif ([\"html\", \"config\", \"js_url\"].includes(dataItem.data_type)) {\n    basic.desc += \"\\n““”” =>\" + small(\"点此预览\");\n    basic.url = ruleListJson + dataItem.id;\n}\n\ndata.push(basic);\nlet hasSubs = \"\";\nif (hasSub) {\n    hasSubs = \"\\t\\t\\t\" + small(\"已订阅\")\n}\n\nlet notes = request(getApi(\"get_rule_note\") + id);\nnotes = JSON.parse(notes).result;\n\nif (notes !== false) {\n    data.push({\n        title: htmlTag(\"big\", \"备注\") + \"\\t\\t\\t\" + small(htmlTag(\"u\", \"查看完整公告 >\")),\n        desc: notes,\n        col_type: \"text_1\",\n        url: \"hiker://page/info\",\n        extra: {\n            text: notes,\n            name: dataItem.name,\n            type: \"long_text\"\n        }\n    });\n}\ndata.push({\n    title: htmlTag(\"big\", \"操作\") + hasSubs,\n    col_type: \"text_1\",\n    url: \"toast://你才是最帅的那个人！\"\n});\nlet importUrl, ruleCode, shareUrl, backCode = \"\";\nif (!dataItem.is_json) {\n    backCode = request(ruleListJson + dataItem.id);\n}\nswitch (dataItem.data_type) {\n    case \"home_rule_url\":\n        ruleCode = \"海阔视界首页频道规则【\" + dataItem.name + \"】￥home_rule_url￥\" + ruleListJson + dataItem.id;\n        importUrl = \"rule://\" + base64Encode(ruleCode)\n        break;\n    case 'publish':\n        ruleCode = '海阔视界规则分享，当前分享的是：' + dataItem.name + '￥publish￥' + base64Encode(backCode);\n        importUrl = 'rule://' + base64Encode(ruleCode);\n        break;\n    case 'js_url':\n        ruleCode = '海阔视界规则分享，当前分享的是：网页插件￥js_url￥' + dataItem.name + '@base64://' + base64Encode(backCode);\n        importUrl = 'rule://' + base64Encode(ruleCode);\n        break;\n    case 'html':\n        let file_tmp = dataItem.name.split('.');\n        let file_path = file_tmp.length > 1 ? file_tmp[file_tmp.length - 1] + \"/\" + dataItem.name : dataItem.name;\n        ruleCode = \"海阔视界本地文件分享￥file_url￥hiker://files/rules/dzHouse/\" + file_path + \"@\" + ruleListJson + dataItem.id;\n        importUrl = 'rule://' + base64Encode(ruleCode);\n        break\n    case \"config\":\n        importUrl = $().rule(password => {\n            eval(fetch(\"hiker://assets/home.js\"));\n            HikerHome.load(\"import\", password);\n        }, backCode);\n        break;\n}\nlet my_col_type = \"text_2\";\nif (importUrl) {\n    data.push({\n        title: \"导入规则\",\n        url: importUrl,\n        col_type: my_col_type\n    });\n}\nif (ruleCode) {\n    data.push({\n        title: \"分享口令\",\n        url: \"copy://\" + ruleCode,\n        col_type: my_col_type\n    });\n}\n\nif (importUrl) {\n    if (dataItem.is_json_list && !hasSub) {\n        let sub_rule_code = '海阔视界合集规则订阅￥home_sub￥' + dataItem.name + \"@@\" + ruleListJson + dataItem.id;\n        let sub_url = 'rule://' + base64Encode(sub_rule_code);\n        data.push({\n            title: '订阅合集',\n            url: sub_url,\n            col_type: my_col_type\n        });\n        data.push({\n    title: '““””<span style=\"color: #ff7000\">导入轻合集</span>',\n    url: $().lazyRule((dataItem,subUrl)=>{\n        const {genRule}=$.require(\"hiker://page/genApi\");\n    let import_rule=genRule(dataItem.name+\".\"+dataItem.author,subUrl);\n    //copy(import_rule);\n    let ruleCode=parsePaste(import_rule.split(\"\\n\")[0]);\n    //return \"hiker://empty\"\n    importUrl = 'rule://' + base64Encode(ruleCode);\n    return importUrl\n    },dataItem,ruleListJson + dataItem.id),\n    col_type: my_col_type\n});\ndata.push({\n    title: \"<small>提示：开发者单独分享的合集文件只能单独导入。</small>\",\n    col_type: \"rich_text\"\n});\n    } else if (!dataItem.is_json_list && !hasSub && dataItem.data_type == 'home_rule_url') {\n        let sub_rule_code = '海阔视界单规则订阅￥home_sub￥' + dataItem.name + \"@@\" + ruleListJson + dataItem.id + '&debug=true';\n        let sub_url = 'rule://' + base64Encode(sub_rule_code);\n        data.push({\n            title: '订阅规则',\n            url: sub_url,\n            col_type: my_col_type\n        })\n    }\n}\nif (dataItem.is_json && dataItem.data_type === \"home_rule_url\" && !dataItem.is_json_list) {\n    data.push({\n        title: '进入频道',\n        url: $( /*\"#noLoading#\"*/ ).lazyRule((name,home) => {\n            let ruleList = JSON.parse(request(home));\n            let hasRule = ruleList.some(item => item.title === name);\n            if (hasRule) {\n                putVar(\"Warehouse.back\", \"1\");\n                back();\n                return home+\"s@\" + name;\n            } else {\n                return \"toast://未安装\";\n            }\n        }, dataItem.name,api.home),\n        col_type: my_col_type\n    })\n}\ndata.push({\n    col_type: \"line_blank\"\n});\ndata.push({\n    title: dataItem.good_num,\n    pic_url: \"hiker://files/icon/赞.svg\",\n    col_type: \"icon_small_3\",\n    url: \"hiker://page/MakeAcomment#noHistory##noRecordHistory#\",\n    extra: {\n        id: dataItem.id,\n        name: dataItem.name\n    }\n});\ndata.push({\n    title: dataItem.bad_num,\n    pic_url: \"hiker://files/icon/踩.svg\",\n    col_type: \"icon_small_3\",\n    url: \"hiker://page/MakeAcomment#noHistory##noRecordHistory#\",\n    extra: {\n        id: dataItem.id,\n        name: dataItem.name,\n        defaultType:\"bad\"\n    }\n});\ndata.push({\n    title: \"评论\",\n    pic_url: \"hiker://files/icon/评论.svg\",\n    col_type: \"icon_small_3\",\n    url: \"hiker://page/MakeAcomment#noHistory##noRecordHistory#\",\n    extra: {\n        id: dataItem.id,\n        name: dataItem.name\n    }\n});\nlet totalSum = dataItem.good_num + dataItem.bad_num;\n\ndata.push({\n    title: htmlTag(\"big\", \"评论(\" + totalSum + \")\") + \"\\t\\t\\t\" + small(htmlTag(\"u\", \"查看全部评论 >\")),\n    col_type: \"text_1\",\n    url: \"hiker://page/Comment\",\n    extra: {\n        url: \"hiker://empty#fypage#noHistory##noRecordHistory#\",\n        id: dataItem.id,\n        totalSum: totalSum,\n        no_active: false\n    }\n});\n//const longestSum=120;\nlet icon = {\n    \"good\": \"👍\",\n    \"bad\": \"👎\",\n    \"reply\":\"开发者🗣\"\n}\nif (totalSum === 0) {\n    data.push({\n        title: \"<h5 style='text-align:center'>一条评论也没有，快来抢沙发吧！</h5>\",\n        col_type: \"rich_text\"\n    });\n} else {\n    let commentList = JSON.parse(request(api.dis_get + dataItem.id + \"?limit=5\")).result;\n    for (let item of commentList) {\n        let Reply = item.discuss_type===\"reply\"&&item.reply_to_name!==false&&item.reply_to_id!==false?\"‘‘回复@\"+item.reply_to_name+\" #\"+item.discuss_id+\"’’\\n\":\"\";\n        data.push({\n            title: item.name + \"&nbsp;&nbsp;<font color='gray'><small>#\" + item.id + \"</small><font>\",\n            col_type: \"avatar\",\n            url: \"toast://\" + item.qq,\n            pic_url: item.avatar_url\n        });\n        data.push({\n            title: item.discuss_text,\n            desc: Reply+item.create_date + \"·\" + icon[item.discuss_type],\n            col_type: \"text_1\",\n            url: \"hiker://page/info\",\n            extra:{\n                name:item.name,\n                type:\"long_text\",\n                text:item.discuss_text\n            },\n            pic_url: item.avatar_url\n        });\n    }\n    data.push({\n        col_type: \"line_blank\"\n    });\n}\n\nsetResult(data);"},{"col_type":"rich_text","name":"查看","path":"info","rule":"js:\nsetPageTitle(\"查看「\"+MY_PARAMS.name+\"」\")\nsetResult([{\n    title: MY_PARAMS.text,\n    col_type:MY_PARAMS.type\n}]);"},{"col_type":"movie_3","name":"开发者注册","path":"Register","rule":"js:\nsetPageTitle(\"开发者注册\");\nconst {\n    getApi,\n    htmlTag,\n    mapColType,\n    small\n} = $.require(\"hiker://page/utiliy\");\nvar data = [];\naddListener('onClose', $.toString(() => {\n    clearVar(\"Warehouse.Password\");\n    clearVar(\"Warehouse.Username\");\n    clearVar(\"Warehouse.Description\");\n    clearVar(\"Warehouse.UserAddress\");\n}));\naddListener('onRefresh', $.toString(()=>{\n    putVar(\"Warehouse.Wait\", \"\");\n}));\ndata.push({\n    title: '账号',\n    desc: \"请输入账号(必填)\",\n    col_type: 'input',\n    extra: {\n        defaultValue: getVar('Warehouse.Username', ''),\n        type: \"number\",\n        onChange: 'putVar(\"Warehouse.Username\",input)'\n    }\n}, {\n    title: '密码',\n    desc: \"请输入密码(必填)\",\n    col_type: 'input',\n    extra: {\n        defaultValue: getVar('Warehouse.Password', ''),\n        type: \"password\",\n        onChange: 'putVar(\"Warehouse.Password\",input)'\n    }\n});\nmapColType(data, \"line_blank\", 1);\ndata.push({\n    title: '昵称',\n    desc: \"请输入昵称(必填)\",\n    col_type: 'input',\n    extra: {\n        defaultValue: getVar('Warehouse.UserAddress', ''),\n        onChange: 'putVar(\"Warehouse.UserAddress\",input)'\n    }\n}, {\n    title: '描述',\n    desc: \"说说为什么要注册吧\\n(可以增加通过概率,选填)\",\n    col_type: 'input',\n    extra: {\n        defaultValue: getVar('Warehouse.Description', ''),\n        type: \"textarea\",\n        onChange: 'putVar(\"Warehouse.Description\",input)'\n    }\n})\n\nmapColType(data, \"line_blank\", 1);\n\ndata.push({\n    title: htmlTag(\"b\", \"注册\"),\n    url: $(getApi(\"new_dev\")+\"#noLoading#\").lazyRule((getId, confirm) => {\n        let username = getVar('Warehouse.Username', \"\"),\n            password = getVar('Warehouse.Password', \"\"),\n            description = getVar('Warehouse.Description', \"\"),\n            name = getVar(\"Warehouse.UserAddress\", \"\");\n        if ([username, password, name].includes(\"\")) {\n            return \"toast://账号,密码和昵称不能为空\";\n        }\n        showLoading(\"正在提交申请表\");\n        let result = request(input, {\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"params\": {\n                    \"reason\": description,\n                    \"name\": name,\n                    \"password\": password,\n                    \"qq\": username\n                }\n            }),\n            method: 'post'\n        });\n        result = JSON.parse(result).result;\n        hideLoading();\n        if (result.status !== 0) {\n            return \"toast://\" + result.detail;\n        }\n        let idresult = JSON.parse(request(getId + \"?qq=\" + username));\n        if (idresult.status !== 0) {\n            return \"toast://\" + idresult.detail;\n        }\n        \n        return $(\"\", \"输入邮箱验证码\\n\" + result.detail).input((confirm, id, account) => {\n            showLoading(\"请耐心等待\");\n            try {\n                let result = request(confirm, {\n                    headers: {\n                        'content-type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        \"params\": {\n                            \"regist_id\": id,\n                            \"yzm\": input\n                        }\n                    }),\n                    method: 'POST'\n                });\n                result = JSON.parse(result).result;\n                if (result.status !== 0) {\n                    hideLoading();\n                    return \"toast://\" + result.detail;\n                } else {\n                    putVar(\"WarehouseUsername\", account[0]);\n                    putVar(\"WarehousePassword\", account[1]);\n                    hideLoading();\n                    back();\n                    return \"toast://成功提交注册注册\\n\"+result.detail;\n                }\n            } catch (e) {\n                hideLoading();\n                return \"toast://出错了呐\";\n            }\n        }, confirm, idresult.result, [username, password]);\n    }, getApi(\"new_getId\"), getApi(\"new_confirm\")),\n    col_type: 'text_center_1'\n});\nsetResult(data);"},{"col_type":"text_1","name":"个人资料","path":"PersonalData","rule":"js:\nsetPageTitle(\"个人资料\");\nvar data=[];\nconst {\n    getApi,\n    getFile,\n    api\n} = $.require(\"hiker://page/utiliy\");\n\ndata.push({\n    col_type:\"line_blank\"\n});\n\nlet {username,password} = getFile();\nlet dev = JSON.parse(request(getApi(\"user\")+MY_PARAMS.id)).result;\ndata.push({\n    title:\"头像\",\n    desc:dev.avatar,\n    url:\"hiker://page/modify_PersonalData#noHistory##noRecordHistory#\",\n    extra:{\n        dev:dev,\n        username:username,\n        password:password,\n        Pattern:0\n    },\n    col_type:\"text_1\"\n});\n\n\ndata.push({\n    title:\"昵称\",\n    desc:dev.name,\n    url:\"hiker://page/modify_PersonalData#noHistory##noRecordHistory#\",\n    extra:{\n        dev:dev,\n        username:username,\n        password:password,\n        Pattern:1\n    },\n    col_type:\"text_1\"\n});\n\ndata.push({\n    title:\"密码\",\n    url:\"hiker://page/modify_PersonalData#noHistory##noRecordHistory#\",\n    extra:{\n        dev:dev,\n        username:username,\n        password:password,\n        Pattern:2\n    },\n    col_type:\"text_1\"\n});\ndata.push({\n    col_type:\"line_blank\"\n});\ndata.push({\n    title:\"账号：\"+username,\n    url:\"copy://\"+username,\n    col_type:\"text_1\"\n});\ndata.push({\n    title:\"UID：\"+dev.id,\n    url:\"copy://\"+dev.id,\n    col_type:\"text_1\"\n});\ndata.push({\n    col_type:\"line_blank\"\n});\ndata.push({\n    title:\"提交云仓库规则\",\n    url:$(\"#noLoading#\").lazyRule((host)=>{\n        let code=request(host+\"/hikerule/rulelist.json?id=145\");\n        let word=\"￥publish￥\"+base64Encode(code);\n        return \"rule://\"+base64Encode(word);\n    },api.host),\n    col_type:\"text_1\"\n});\ndata.push({\n    title:\"同步提交云仓库账号密码\",\n    url:\"rule://\"+base64Encode(\"￥publish_account￥\"+username+\"@\"+password),\n    col_type:\"text_1\"\n});\ndata.push({\n    col_type:\"line_blank\"\n});\ndata.push({\n    title:\"你一共发布了「\"+dev.rule_num+\"」条规则\",\n    url:\"hiker://empty\",\n    col_type:\"text_1\"\n});\ndata.push({\n    col_type:\"line_blank\"\n});\nlet user = getFile();\ndata.push({\n    title:\"注销登录\",\n    url:$(\"确认注销登录?\").confirm(f => {\n        f.username=\"\";\n        f.password=\"\";\n        writeFile('hiker://files/WarehouseUSER.json', JSON.stringify(f));\n        putVar(\"Warehouse.back\",\"1\");\n        back();\n        return \"toast://已注销\";\n    },user),\n    col_type:\"text_center_1\"\n});\nsetResult(data);"},{"col_type":"movie_3","name":"更改个人资料","path":"modify_PersonalData","rule":"js:\nconst {\n    getApi,\n    color,\n    small,\n    getFile,\n    htmlTag\n} = $.require(\"hiker://page/utiliy\");\nlet {\n    dev,\n    username,\n    password,\n    Pattern\n} = MY_PARAMS;\nvar data = [];\nlet path = \"?qq=\" + username + \"&password=\" + password;\naddListener('onClose', $.toString(() => {\n    clearVar(\"Warehouse.m.petName\");\n    clearVar(\"Warehouse.m.avatar\");\n    clearVar(\"Warehouse.m.Password.c\");\n    clearVar(\"Warehouse.m.Password.x\");\n    clearVar(\"Warehouse.m.Password.y\");\n}));\nfunction m_petName() {\n    data.push({\n        col_type: \"line_blank\"\n    });\n    data.push({\n        col_type: 'input',\n        desc: \"请输入新昵称\",\n        extra: {\n            titleVisible: false,\n            defaultValue: getVar('Warehouse.m.petName', '')||dev.name,\n            onChange: 'putVar(\"Warehouse.m.petName\",input)'\n        }\n    });\n    data.push({\n        col_type: \"line_blank\"\n    });\n    data.push({\n        title: \"保存\",\n        url: $(getApi(\"modify_name\") + path).lazyRule(() => {\n            let newPetName = getVar('Warehouse.m.petName', '');\n            if (newPetName == \"\") {\n                return \"toast://你还什么都没填啊!\";\n            }\n            let result = request(input + \"&name=\" + encodeURIComponent(newPetName));\n            result = JSON.parse(result);\n            if (result.status === 0) {\n                back();\n                return \"toast://修改成功\";\n            } else {\n                return \"toast://\" + result.detail;\n            }\n        }),\n        col_type: 'text_center_1'\n    });\n}\n\nfunction m_avatar() {\n    data.push({\n        col_type: \"line_blank\"\n    });\n    data.push({\n        col_type: 'input',\n        desc: \"请输入新的头像链接\",\n        extra: {\n            titleVisible: false,\n            defaultValue: getVar('Warehouse.m.avatar', '') || dev.avatar,\n            onChange: 'putVar(\"Warehouse.m.avatar\",input)'\n        }\n    });\n    data.push({\n        col_type: \"line_blank\"\n    });\n    data.push({\n        title: \"保存\",\n        url: $(getApi(\"modify_ava\") + path).lazyRule(() => {\n            let newAvatar = getVar('Warehouse.m.avatar', '');\n            \n            let result = request(input + \"&avatar_url=\" + encodeURIComponent(newAvatar));\n            result = JSON.parse(result);\n            if (result.status === 0) {\n                back();\n                return \"toast://修改成功\";\n            } else {\n                return \"toast://\" + result.detail;\n            }\n        }),\n        col_type: 'text_center_1'\n    });\n}\n\nfunction m_pwd() {\n    data.push({\n        col_type: \"line_blank\"\n    });\n    data.push({\n        title:\"原密码\",\n        col_type: 'input',\n        desc: \"请输入原密码\",\n        extra: {\n            type:\"password\",\n            defaultValue: getVar('Warehouse.m.Password.y', ''),\n            onChange: 'putVar(\"Warehouse.m.Password.y\",input)'\n        }\n    });\n    data.push({\n        col_type: \"line_blank\"\n    });\n    data.push({\n        title:\"新密码\",\n        col_type: 'input',\n        desc: \"请输入新密码\",\n        extra: {\n            type:\"password\",\n            defaultValue: getVar('Warehouse.m.Password.x', ''),\n            onChange: 'putVar(\"Warehouse.m.Password.x\",input)'\n        }\n    });\n    data.push({\n        title:\"重复新密码\",\n        col_type: 'input',\n        desc: \"请重复新密码\",\n        extra: {\n            type:\"password\",\n            titleVisible: false,\n            defaultValue: getVar('Warehouse.m.Password.c', ''),\n            onChange: 'putVar(\"Warehouse.m.Password.c\",input)'\n        }\n    });\n    data.push({\n        col_type: \"line_blank\"\n    });\n    data.push({\n        title: \"保存\",\n        url: $(getApi(\"modify_pwd\")+path).lazyRule((password,username) => {\n            let old_password = getVar('Warehouse.m.Password.y', '');\n            let new_password = getVar('Warehouse.m.Password.x', '');\n            let new_password_again = getVar('Warehouse.m.Password.c', '');\n            if (old_password!==password) {\n                return \"toast://原密码错误\";\n            }\n            if(new_password===\"\"){\n                return \"toast://请输入新密码\";\n            }\n            if(new_password!==new_password_again){\n                return \"toast://两次密码不同\"\n            }\n            let result = request(input + \"&new_password=\" + new_password+\"&new_password_re=\"+new_password_again);\n            result = JSON.parse(result);\n            if (result.status === 0) {\n                writeFile(\"hiker://files/WarehouseUSER.json\",JSON.stringify({\n                    username:username,\n                    password:new_password\n                }));\n                back();\n                return \"toast://修改成功\";\n            } else {\n                return \"toast://\" + result.detail;\n            }\n        },password,username),\n        col_type: 'text_center_1'\n    });\n}\n\nswitch (Pattern) {\n    case 0:\n        setPageTitle(\"修改头像\");\n        m_avatar();\n        break;\n    case 1:\n        setPageTitle(\"修改昵称\");\n        m_petName();\n        break;\n    case 2:\n        setPageTitle(\"修改密码\");\n        m_pwd();\n        break;\n}\nsetResult(data);"},{"col_type":"movie_3","name":"编辑规则备注","path":"set_rule_notes","rule":"js:\nlet data = [];\nconst {\n    getApi\n} = $.require(\"hiker://page/utiliy\");\nlet {\n    id,\n    username,\n    password,\n    name\n} = MY_PARAMS;\nsetPageTitle(\"备注「\"+name+\"」\");\naddListener('onClose',\"clearVar('Warehouse.rule.notes', '')\");\nlet notes=request(getApi(\"get_rule_note\")+id);\nnotes=JSON.parse(notes).result;\ndata.push({\n    desc: \"规则备注......\",\n    col_type: 'input',\n    extra: {\n        titleVisible: false,\n        defaultValue: getVar('Warehouse.rule.notes', '')||notes||\"\",\n        type: \"textarea\",\n        height:-1,\n        onChange: 'putVar(\"Warehouse.rule.notes\",input)'\n    }\n});\n\ndata.push({\n    title: \"保存\",\n    col_type: \"text_center_1\",\n    url: $(getApi(\"set_rule_note\") + id).lazyRule((username, password) => {\n        let notes = getVar('Warehouse.rule.notes', '');\n        let result = request(input, {\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"params\": {\n                    \"qq\": username,\n                    \"password\": password,\n                    \"note\":notes\n                }\n            }),\n            method: 'POST'\n        });\n        result = JSON.parse(result).result;\n        if (result.status !== 0) {\n            return \"toast://\" + result.detail;\n        }\n        back(false);\n        return \"toast://修改成功\";\n    }, username, password)\n});\nsetResult(data);"},{"col_type":"line","name":"评论列表","path":"Comment","rule":"js:\nsetPageTitle(\"评论列表\");\nconst {\n    api\n} = $.require(\"hiker://page/utiliy\");\nlet data = [];\nlet {\n    totalSum,\n    id,\n    no_active,\n    username,\n    password\n} = MY_PARAMS;\nlet page = parseInt(MY_URL.split(\"#\")[1]);\nlet discuss_type = getVar(\"Warehouse.comment.discuss_type\", \"\");\nif (page === 1) {\n    data.push({\n        col_type: \"line_blank\"\n    });\n    addListener('onClose', $.toString(() => {\n        putVar(\"Warehouse.comment.discuss_type\", \"\");\n    }));\n    data.push({\n        title: \"全部\" + (discuss_type === \"\" ? \"◉\" : \"○\"),\n        url: $(\"#noLoading#\").lazyRule(() => {\n            putVar(\"Warehouse.comment.discuss_type\", \"\");\n            refreshPage();\n            return \"hiker://empty\";\n        }),\n        col_type: 'text_4'\n\n    });\n    data.push({\n        title: \"👍赞\" + (discuss_type === \"good\" ? \"◉\" : \"○\"),\n        url: $(\"#noLoading#\").lazyRule(() => {\n            putVar(\"Warehouse.comment.discuss_type\", \"good\");\n            refreshPage();\n            return \"hiker://empty\";\n        }),\n        col_type: 'text_4'\n\n    });\n    data.push({\n        title: \"👎踩\" + (discuss_type === \"bad\" ? \"◉\" : \"○\"),\n        url: $(\"#noLoading#\").lazyRule(() => {\n            putVar(\"Warehouse.comment.discuss_type\", \"bad\");\n            refreshPage();\n            return \"hiker://empty\";\n        }),\n        col_type: 'text_4'\n    });\n    data.push({\n        title: \"回复\" + (discuss_type === \"reply\" ? \"◉\" : \"○\"),\n        url: $(\"#noLoading#\").lazyRule(() => {\n            putVar(\"Warehouse.comment.discuss_type\", \"reply\");\n            refreshPage();\n            return \"hiker://empty\";\n        }),\n        col_type: 'text_4'\n    });\n}\n\n\nlet icon = {\n    \"good\": \"👍\",\n    \"bad\": \"👎\",\n    \"reply\":\"开发者🗣\"\n}\nlet control=(pid,active)=>void 0;\nif(no_active){\n    control=function(pid,active){\n        data.push({\n            title:active?\"隐藏评论\":\"展示评论\",\n            url:$(api.dis_dev_control+pid+\"?qq=\" + username + \"&password=\" + password+\"#noLoading#\").lazyRule(()=>{\n                let result=JSON.parse(request(input));\n                refreshPage(false)\n                return \"toast://\"+result.detail;\n            }),\n            col_type:\"text_2\"\n        });\n        data.push({\n            title:\"删除评论\",\n            url:$(\"确认删除该评论?\").confirm((input)=>{\n                let result=JSON.parse(request(input));\n                refreshPage(false)\n                return \"toast://\"+result.detail;\n            },api.dis_dev_control+pid+\"?qq=\" + username + \"&password=\" + password+\"&delete=1\"),\n            col_type:\"text_2\"\n        });\n        data.push({\n            col_type:\"line\"\n        });\n        data.push({\n            col_type:\"line\"\n        });\n    }\n}\nif (totalSum === 0) {\n    data.push({\n        title: \"<h5 style='text-align:center'>一条评论也没有，快来抢沙发吧！</h5>\",\n        col_type: \"rich_text\"\n    });\n} else {\n    let commentList = JSON.parse(request(api.dis_get + id + \"?limit=5&page=\" + page + \"&no_active=\" + no_active + \"&discuss_type=\" + discuss_type)).result;\n    for (let item of commentList) {\n        let Reply = item.discuss_type===\"reply\"&&item.reply_to_name!==false&&item.reply_to_id!==false?\"‘‘回复@\"+item.reply_to_name+\" #\"+item.discuss_id+\"’’\\n\":\"\";\n        data.push({\n            title: item.name + \"&nbsp;&nbsp;<font color='gray'><small>#\" + item.id + \"</small><font>\",\n            col_type: \"avatar\",\n            url: no_active?\"hiker://page/Reply\":\"toast://\" + item.qq,\n            extra:{\n                ruleId: id,\n                name: item.name,\n                password: password,\n                username: username,\n                replyId:item.id\n            },\n            pic_url: item.avatar_url\n        });\n        data.push({\n            title: item.discuss_text,\n            desc: Reply+item.create_date + \"·\" + icon[item.discuss_type],\n            col_type: \"text_1\",\n            url: \"hiker://page/info\",\n            extra:{\n                name:item.name,\n                type:\"long_text\",\n                text:item.discuss_text\n            },\n            pic_url: item.avatar_url\n        });\n        control(item.id,item.active);\n    }\n    if (commentList.length === 0) {\n        data.push({\n            col_type: \"line_blank\"\n        });\n    }\n}\n\nsetResult(data)"},{"col_type":"movie_3","name":"发表评论","path":"MakeAcomment","rule":"js:\nlet data = [];\nconst {\n    api,\n    getFile\n} = $.require(\"hiker://page/utiliy\");\nlet {\n    id,\n    name,\n    defaultType\n} = MY_PARAMS;\nlet user=getFile().user||[\"\",\"\"];\n\nsetPageTitle(\"评论(\" + name + \")\");\naddListener('onClose', $.toString(() => {\n    clearVar(\"Warehouse.comment.type\");\n    clearVar(\"Warehouse.comment.text\");\n    clearVar(\"Warehouse.comment.qq\");\n    refreshPage(false);\n}));\nlet type = getVar(\"Warehouse.comment.type\") || defaultType||\"good\";\ndata.push({\n    desc: \"评论......\",\n    col_type: 'input',\n    extra: {\n        titleVisible: false,\n        defaultValue: getVar('Warehouse.comment.text', ''),\n        type: \"textarea\",\n        height:7,\n        onChange: 'putVar(\"Warehouse.comment.text\",input)'\n    }\n});\ndata.push({\n    title:\"账号：\"+(user[0]||\"\"),\n    desc:\"验证码：\"+(user[1]||\"\"),\n    url:\"hiker://page/Userregistration\",\n    col_type: 'text_1',\n    \n});\n\ndata.push({\n    title:  (type === \"good\" ? \"◉\" : \"○\")+\" 👍\",\n    url: $(\"#noLoading#\").lazyRule(() => {\n        putVar(\"Warehouse.comment.type\", \"good\");\n        refreshPage();\n        return \"hiker://empty\";\n    }),\n    col_type: 'text_2'\n\n});\ndata.push({\n    title:  (type === \"bad\" ? \"◉\" : \"○\")+\" 👎\",\n    url: $(\"#noLoading#\").lazyRule(() => {\n        putVar(\"Warehouse.comment.type\", \"bad\");\n        refreshPage();\n        return \"hiker://empty\";\n    }),\n    col_type: 'text_2'\n});\n\ndata.push({\n    title: \"提交\",\n    col_type: \"text_center_1\",\n    url: $(api.dis_new + id).lazyRule((Account) => {\n        let text = getVar('Warehouse.comment.text', '');\n        let [qq,auth_code] = Account;\n        let type = getVar('Warehouse.comment.type') || 'good';\n        qq=qq||\"\";\n        auth_code=auth_code||\"\";\n        if(qq==\"\"||auth_code==\"\"){\n            return \"toast://未登录账号\";\n        }\n        if(text==\"\"){\n            return \"toast://你还什么都没写啊\";\n        }\n        function r(p) {\n            let result = request(input, {\n                headers: {\n                    'content-type': 'application/json'\n                },\n                body: JSON.stringify(p),\n                method: 'POST'\n            });\n            return JSON.parse(result).result;\n        }\n        let p = {\n            \"params\": {\n                \"discuss_text\": text,\n                \"qq\": qq,\n                \"discuss_type\": type,\n                \"auth_code\": auth_code\n            }\n        }\n        let result = r(p);\n        if(result.status===0){\n            back(false);\n        }\n        return \"toast://\"+result.detail;\n\n    },user)\n});\n\nsetResult(data);"},{"col_type":"movie_3","name":"伪用户注册","path":"Userregistration","rule":"js:\nconst {\n    api,\n    getFile,\n    getUserDate\n} = $.require(\"hiker://page/utiliy\");\nlet data = [];\ndata.push({\n    col_type: \"line_blank\"\n});\nsetPageTitle(\"用户列表管理\");\naddListener('onClose', $.toString(() => {\n    clearVar(\"Warehouse.m.qq\");\n    clearVar(\"Warehouse.m.yzm\");\n}));\nlet user = getFile();\nlet userName = user.user || [\"\"];\nuserName = userName[0];\ndata.push({\n    title: \"““””<big>(添加/验证)账号</big>\",\n    col_type: \"text_1\",\n    url: \"hiker://empty\"\n});\n\ndata.push({\n    title: \"获取\",\n    col_type: 'input',\n    desc: \"请输入qq\",\n    url: $.toString((a, b) => {\n        let qq = input;\n        if (qq == \"\") {\n            return \"toast://你还什么都没填啊!\";\n        }\n        showLoading(\"获取中...\")\n        return $(\"#noLoading#\").lazyRule((qq, a, b) => {\n        try {\n            let result = request(a, {\n                headers: {\n                    'content-type': 'application/json'\n                },\n                body: JSON.stringify({\n                    \"params\": {\n                        \"qq\": qq\n                    }\n                }),\n                method: 'POST'\n            });\n            result = JSON.parse(result).result;\n            if (result.status === 0) {\n                hideLoading();\n                return \"toast://\" + result.detail;\n            } else {\n                let result2 = JSON.parse(request(b + \"?qq=\" + qq));\n                hideLoading();\n                return \"toast://\" + result2.detail;\n            }\n        } catch (e) {\n            hideLoading();\n            throw e;\n        }\n        }, qq, a, b);\n\n    }, api.dis_new_user, api.dis_verify),\n    extra: {\n        type: \"number\",\n        defaultValue: getVar('Warehouse.m.qq', '') || userName,\n        onChange: 'putVar(\"Warehouse.m.qq\",input)'\n    }\n});\n\ndata.push({\n    col_type: 'input',\n    desc: \"请输入验证码\",\n    extra: {\n        titleVisible: false,\n        defaultValue: getVar('Warehouse.m.yzm', ''),\n        onChange: 'putVar(\"Warehouse.m.yzm\",input)'\n    }\n});\ndata.push({\n    col_type: 'rich_text',\n    title: \"<small>提示：1.每天只能获取5次验证码.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.<s>验证码有效期持续一周左右</s>(暂时不会，忘记验证码可通过QQ号获取)</small>\"\n});\n\nlet userList = getUserDate();\ndata.push({\n    title: \"验证/登录\",\n    url: $(\"确定保存，验证码填错，无法评论哦\").confirm((f, l, login) => {\n        let qq = getVar('Warehouse.m.qq', '');\n        let yzm = getVar('Warehouse.m.yzm', '');\n        if (qq == \"\" || yzm == \"\") {\n            return \"toast://qq或验证码为空\";\n        }\n        let result = request(login, {\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"params\": {\n                    \"qq\": qq,\n                    \"auth_code\": yzm\n                }\n            }),\n            method: 'POST'\n        });\n        result = JSON.parse(result).result;\n        if (result.status === 0) {\n            f.user = [qq, yzm];\n            writeFile(\"hiker://files/WarehouseUSER.json\", JSON.stringify(f));\n            let index = l.findIndex(item => item[0] === qq);\n            if (index > -1) {\n                l.splice(index, 1, [qq, yzm]);\n            } else if (l.length < 6) {\n                l.push([qq, yzm]);\n            } else {\n                l.splice(0, 1);\n                l.push([qq, yzm]);\n            }\n            writeFile(\"hiker://files/WarehouseUSERA.json\", JSON.stringify(l));\n            back();\n            return \"toast://验证成功\";\n        }\n        return \"toast://\" + result.detail;\n    }, user, userList, api.dis_login),\n    col_type: 'text_center_1'\n});\ndata.push({\n    col_type: \"line_blank\"\n});\ndata.push({\n    title: \"““””<big>账号列表</big>\\t\\t\\t<small>(保留5条记录)</small>\",\n    col_type: \"text_1\",\n    url: \"hiker://empty\"\n});\nuserList.reverse();\n\nfor (let item of userList) {\n    data.push({\n        title: \"账号：\" + item[0] + (userName === item[0] ? \"\\t\\t\\t““[当前账号]””\" : \"\"),\n        desc: \"验证码：\" + item[1],\n        url: $(\"是否切换为该[\" + item[0] + \"]账号\").confirm((f, item) => {\n            f.user = item;\n            writeFile(\"hiker://files/WarehouseUSER.json\", JSON.stringify(f));\n            back();\n            return \"toast://切换成功\";\n        }, user, item),\n        col_type: \"text_1\"\n    });\n}\ndata.push({\n    col_type: \"line_blank\"\n});\ndata.push({\n    title: \"退出账号\",\n    url: $(\"确认退出登录状态\").confirm((f) => {\n        f.user = [];\n        writeFile(\"hiker://files/WarehouseUSER.json\", JSON.stringify(f));\n        back();\n        return \"toast://退出成功\";\n    }, user),\n    col_type: 'text_center_1'\n});\nsetResult(data);"},{"col_type":"movie_3","name":"列表排序算法","path":"sort","rule":"js:\n/* 规则列表排序 [ UP、NEW、无更新 ] 顺序 */\n/* 归并排序 Start */\nfunction mergeSort(arr) {\n    var len = arr.length;\n    if (len < 2) {\n        return arr;\n    }\n    var middle = Math.floor(len / 2),\n        left = arr.slice(0, middle),\n        right = arr.slice(middle);\n    return merge(mergeSort(left), mergeSort(right));\n}\nfunction merge(left, right) {\n    var result = [];\n    var isThisVersionList = [];\n\n    while (left.length > 0 && right.length > 0) {\n        if (left[0].title.includes(\"🆙\")) {\n            result.push(left.shift());\n        } else if (right[0].title.includes(\"🆙\")) {\n            result.push(right.shift());\n        } else if (left[0].title.includes(\"🆕\")) {\n            result.push(left.shift());\n        } else if (right[0].title.includes(\"🆕\")) {\n            result.push(right.shift());\n        } else {\n            isThisVersionList.push(left.shift());\n            isThisVersionList.push(right.shift());\n        }\n    }\n\n    while (isThisVersionList.length) result.push(isThisVersionList.shift());\n\n    while (left.length)\n        result.push(left.shift());\n\n    while (right.length)\n        result.push(right.shift());\n\n    return result;\n}\n$.exports.mergeSort = mergeSort;\n/* 归并排序 End */"},{"col_type":"icon_2_round","name":"全部公开规则","path":"AllPublicRule","rule":"js:\nconst {\n    api,\n    localRuleVer,\n    getApi\n} = $.require(\"hiker://page/utiliy\");\nconst {\n    mergeSort\n} = $.require(\"hiker://page/sort\");\nlet dataType = getVar(\"Warehouse.type\", \"\");\nlet order = getVar(\"Warehouse.order\", \"0\");\nlet sort = getVar(\"Warehouse.sort\", \"0\");\nlet page = MY_URL.split(\"#\")[1] || 1;\nlet ruleList = JSON.parse(request(api.all_rule + \"?data_type=\" + dataType + \"&page=\" + page + \"&limit=20&order=\" + order + \"&sort=\" + sort)).result;\naddListener('onClose', $.toString(() => {\n    clearVar(\"Warehouse.type\");\n    clearVar(\"Warehouse.order\");\n    clearVar(\"Warehouse.sort\");\n    clearVar(\"Warehouse.back\");\n}));\nlet data = [];\nif (getVar(\"Warehouse.back\") === \"1\") {\n    back();\n}\nfunction tab(arr, type, contrast) {\n    for (let item of arr) {\n        data.push({\n            title: item[1] === contrast ? \"““\" + item[0] + \"””\" : item[0],\n            url: $(\"#noLoading#\").lazyRule((key, type) => {\n                putVar(type, key);\n                refreshPage(false);\n                return \"hiker://empty\";\n            }, item[1], type),\n            col_type: \"scroll_button\"\n        });\n    }\n    data.push({\n        col_type: \"blank_block\"\n    });\n}\nif (page === \"1\") {\n    tab([\n        [\"全部\", \"\"],\n        [\"小程序\", \"home_rule_url\"],\n        [\"提交云仓库规则\", \"publish\"],\n        [\"网页插件\", \"js_url\"],\n        [\"静态页面\", \"html\"],\n        [\"主题\", \"config\"]\n    ], \"Warehouse.type\", dataType);\n    tab([\n        [\"时间\", \"0\"],\n        [\"ID\", \"1\"],\n        [\"好评度\", \"2\"],\n        [\"差评度\", \"3\"],\n        [\"回复数\", \"4\"]\n    ], \"Warehouse.order\", order);\n    tab([\n        [\"倒序\", \"0\"],\n        [\"正序\", \"1\"]\n    ], \"Warehouse.sort\", sort);\n    data.push({\n        title: \"搜索\",\n        url: $.toString(name => \"hiker://search?s=\" + input + \"&rule=\" + name, MY_RULE.title),\n        col_type: \"input\",\n        desc: \"搜索全部规则\"\n    });\n}\n\nlet homeList = JSON.parse(request(api.home));\nlet mRuleList = [];\nfor (var item of ruleList) {\n    var name = item.name;\n    if (item.is_tap) {\n        let location = JSON.parse(request(getApi(\"ruleListJson\") + \"?id=\" + item.id));\n        item.id = location.id;\n        item.name = location.name;\n        item.author = location.author;\n        item.data_type = location.data_type;\n        item.ver = location.ver\n    }\n    item.version = item.ver;\n    let label = \"\",\n        lver = -2;\n    if (item.is_json && item.data_type === \"home_rule_url\") {\n        lver = localRuleVer(homeList, item);\n        if (lver === -1) {\n            label = \"🆕\";\n        } else if (lver < item.ver) {\n            label = \"🆙\";\n        }\n    }\n    mRuleList.push({\n        title: label + name,\n        url: \"hiker://page/ruleDetail#noHistory##noRecordHistory#\",\n        extra: {\n            lver: lver,\n            id: item.id\n        },\n        pic_url: item.pic,\n    })\n}\n/* 归并排序 Start */\n//mRuleList = mergeSort(mRuleList);\n/* 归并排序 End */\ndata.push.apply(data, mRuleList)\nsetResult(data);"},{"col_type":"movie_3","name":"回复","path":"Reply","rule":"js:\nlet data = [];\nconst {\n    api\n} = $.require(\"hiker://page/utiliy\");\nlet {\n    replyId,\n    ruleId,\n    name,\n    password,\n    username\n} = MY_PARAMS;\n\n\nsetPageTitle(\"回复(\" + name + \")\");\naddListener('onClose', $.toString(() => {\n    clearVar(\"Warehouse.comment.text\");\n    refreshPage(false);\n}));\n\ndata.push({\n    desc: \"回复......\",\n    col_type: 'input',\n    extra: {\n        titleVisible: false,\n        defaultValue: getVar('Warehouse.comment.text', ''),\n        type: \"textarea\",\n        height:7,\n        onChange: 'putVar(\"Warehouse.comment.text\",input)'\n    }\n});\n\n\ndata.push({\n    title: \"提交\",\n    col_type: \"text_center_1\",\n    url: $(api.dis_reply + ruleId).lazyRule((password, username, ruleId) => {\n        let text = getVar('Warehouse.comment.text', '');\n        if (password == \"\" || username == \"\") {\n            return \"toast://未登录账号\";\n        }\n        if (text == \"\") {\n            return \"toast://你还什么都没写啊\";\n        }\n        let result = request(input, {\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"params\": {\n                    \"discuss_text\": text,\n                    \"qq\": username,\n                    \"password\": password,\n                    \"discuss_id\": ruleId\n                }\n            }),\n            method: 'POST'\n        });\n        result = JSON.parse(result).result;\n        if (result.status === 0) {\n            back(false);\n        }\n        return \"toast://\" + result.detail;\n\n    }, password, username, replyId)\n});\n\nsetResult(data);"},{"col_type":"movie_3","name":"我的回复","path":"MyReply","rule":"js:\nconst {\n    api\n} = $.require(\"hiker://page/utiliy\");\nlet {\n    auth_code,\n    qq\n} = MY_PARAMS;\nlet page = parseInt(MY_URL.split(\"#\")[1]);\nlet data=[];\nlet commentList = JSON.parse(request(api.dis_get_reply + \"?limit=5&page=\" + page + \"&qq=\" + qq + \"&auth_code=\" + auth_code)).result;\nif (commentList.length === 0) {\n    data.push({\n        title: \"<h5 style='text-align:center'>别拉了一条也不剩了</h5>\",\n        col_type: \"rich_text\"\n    });\n} else {\n    for (let item of commentList) {\n        data.push({\n            title: item.name + \"&nbsp;&nbsp;<font color='gray'><small>#\" + item.id + \"</small><font>\",\n            col_type: \"avatar\",\n            url: \"hiker://page/ruleDetail#noHistory##noRecordHistory#\",\n            extra: {\n                lver: \"回复进入不支持查看\",\n                id: item.rule_id[0]\n            },\n            pic_url: item.avatar_url\n        });\n        data.push({\n            title: item.discuss_text,\n            desc: item.create_date + \"·\"+item.rule_id[1]+\"·\"+\"开发者🗣\",\n            col_type: \"text_1\",\n            url: \"hiker://page/info\",\n            extra:{\n                name:item.name,\n                type:\"long_text\",\n                text:item.discuss_text\n            },\n            pic_url: item.avatar_url\n        });\n    }\n    \n}\nsetResult(data);\n"},{"col_type":"movie_3","name":"更多分享","path":"moreShare","rule":"js:\n    addListener('onClose', $.toString(()=>{\n        clearVar(\"house.upload_code\");\n    }));\nconst {color,small,api, getFile} = $.require(\"hiker://page/utiliy\");\nlet houseFile = getFile||false;\nlet put_url = api.host+'/hikerule/dev/put';\nif(!houseFile){\n    setItem('is_house_vip', 'false');\n}\nlet house_data = houseFile();\n// log(house_data.username+'-'+house_data.password);\nvar canup = house_data.username.length >= 6 && house_data.password.length > 2;\nlog('可以上传?'+canup);\nlet d = [];\nlet file_type = [{name:'静态文件',value:'html'},{name:'网页插件',value:'js_url'},{name:'主页配置',value:'config'}]; //上传类型\nlet file_redirect = [{name:'本地',value:'false'},{name:'直链302',value:'true'}]; //是否重定向\nlet file_ua = [{name:'电脑',value:'pc'},{name:'手机',value:'mobile'}];\nlet file_type_title = file_type.map((item) => {\n    let name = getItem('house.file_type','静态文件');\n    if(item.name===name){\n        return '👉'+item.name;\n    }else{\n        return item.name;\n    }\n});\nlet file_redirect_title = file_redirect.map((item) => {\n    let name = getItem('house.file_redirect','本地');\n    if(item.name===name){\n        return '👉'+item.name;\n    }else{\n        return item.name;\n    }\n});\nlet file_ua_title = file_ua.map((item) => {\n    let name = getItem('house.file_ua','电脑');\n    if(item.name===name){\n        return '👉'+item.name;\n    }else{\n        return item.name;\n    }\n});\nd.push({col_type: 'x5_webview_single', extra: {js: 'console.log(\"我加载了\")'}});\nd.push({\n    title: '获取',\n    desc: \"文件路径,支持hiker,file,http,主题\",\n    extra: {\n        onChange: \"putVar('house.web_url',input)\",\n        titleVisible: true,\n        defaultValue:getVar('house.web_url')\n    },\n    url:$.toString(() => {\n        let input = getVar('house.web_url','');\n        if(input.length<2){\n            return 'toast://链接不可以为空'\n        } else if(/^hiker:|^file:|^http:|^https:/.test(input)){\n            log('正常链接');\n            let ua = getItem('house.file_ua')==='电脑'?'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36':'Mozilla/5.0 (Linux; Android 9; MI 6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Mobile Safari/537.36';\n            let web_url_arr = input.split(';');\n            let web_url = web_url_arr[0];\n            let headers = {\n                'Referer':'https://blog.csdn.net',\n                'User-Agent':ua,\n                'Accept':'application/json, text/javascript, */*; q=0.01',\n                'Accept-Language':'zh-CN',\n            };\n            if(web_url_arr.length>=3&&web_url_arr[2].length>2){ //设置编码\n                headers['content-type'] = 'charset='+web_url_arr[2].toUpperCase();\n            }\n            let params = {headers:headers,withHeaders:false,redirect:false};\n            if(web_url_arr.length>=2&&web_url_arr[1].length>2){ // 设置请求方法\n                params['method'] = web_url_arr[1].toUpperCase();\n            }\n            log('开始获取源码');\n            try {\n                /*\n                requestAsync(web_url,params,function (key,code) {\n                    let back_code = code;\n                    if(back_code.length>20){\n                        putVar('house.upload_code',back_code);\n                        refreshPage(true);\n                        return 'toast://源码已获取,并部分插入到文本区域'\n                    }else{\n                        return 'toast://错误，本次获取到空文本，疑似你没有此文件!';\n                    }\n                });\n                */\n                let back_code = getItem('house.file_ua')==='电脑'?fetch(web_url,params):request(web_url,params);\n                if(back_code.length>20){\n                    putVar('house.upload_code',back_code);\n                    refreshPage(true);\n                    return 'toast://源码已获取,并部分插入到文本区域'\n                }else{\n                    return 'toast://错误，本次获取到空文本，疑似你没有此文件!';\n                }\n            }catch (e) {\n                log(e.message);\n                return 'toast://发生了错误:\\n'+e.message;\n            }\n        }else if(/主题￥|元素￥/.test(input)){\n            log('主题链接');\n            let web_url_arr = input.split('￥');\n            let web_url = web_url_arr[web_url_arr.length-1];\n            let back_code = parsePaste(web_url);\n            if(back_code.length>20) {\n                putVar('house.upload_code',back_code);\n                refreshPage(true);\n                return 'toast://源码已获取,并部分插入到文本区域'\n            }else{\n                return 'toast://错误，本次获取返回为:\\n'+back_code;\n            }\n        }else{\n            return 'toast://非法链接:\\n'+getVar('house.web_url');\n        }\n    }),\n    col_type: \"input\"\n});\n\nd.push({\n    title:'上传类型',\n    desc:'上传文件的类型,当前为:'+color(getItem('house.file_type','静态文件'),'#ff7000'),\n    col_type:'text_1',\n    url:$(file_type_title,2).select(() => {\n        setItem('house.file_type',input.replace('👉',''));\n        refreshPage(true);\n        return 'toast://你选择了:'+input;\n    })\n});\n\nd.push({\n    title:'文件定位',\n    desc:'文件是否属于重定向,当前为:'+color(getItem('house.file_redirect','本地'),'#ff7000'),\n    col_type:'text_1',\n    url:$(file_redirect_title,2).select(() => {\n        setItem('house.file_redirect',input.replace('👉',''));\n        refreshPage(true);\n        return 'toast://你选择了:'+input;\n    })\n});\n\nd.push({\n    title:'设备UA',\n    desc:'发起网页请求头标识,当前为:'+color(getItem('house.file_ua','电脑'),'#ff7000'),\n    col_type:'text_1',\n    url:$(file_ua_title,2).select(() => {\n        setItem('house.file_ua',input.replace('👉',''));\n        refreshPage(true);\n        return 'toast://你选择了:'+input;\n    })\n});\nfunction compare(name) {\n    return function(item) {\n        return item.name === name;\n    }\n}\nd.push({\n    title:'🗄️环境',\n    col_type:'flex_button',\n    url:$().lazyRule((file_type,compare)=>{\n        log('查看环境变量');\n        try {\n            let up_code = getVar('house.upload_code','');\n            let ftype =  file_type.filter(compare(getItem('house.file_type','静态文件')))[0].value;\n            let redirect = getItem('house.file_redirect','本地')!=='本地';\n            let code = !redirect?up_code:input;\n            let env = {\n                web_url:getVar('house.web_url',''),\n                device:getItem('house.file_ua','电脑'),\n                ftype:ftype||\"\",\n                redirect:redirect,\n                code:code.substring(0,40)||\"\",\n            }\n            log(env);\n            return 'toast://'+JSON.stringify(env);\n            // alert(JSON.stringify(env));\n        }catch (e) {\n            return 'toast://'+e.message;\n            // alert(e.message);\n        }\n    },file_type,compare)\n});\n\nd.push({\n    title:'📃教程',\n    col_type:'flex_button',\n    url:$().x5Rule(()=>{\n        let msg = '欢迎使用开发者更多分享工具\\n1.输入网址为本地文件路径,hiker://或者file://开头\\n2.点击网址输入栏后面的按钮\\n3.看文本预览区是否正确\\n4.点击上传按钮提交到仓库';\n        alert(msg);\n    })\n});\n\nd.push({\n    title:'🗑️清空',\n    col_type:'flex_button',\n    url:$().lazyRule(()=>{\n        clearVar('house.upload_code');\n        refreshPage(true);\n        return 'toast://已清除预览区域内容'\n    })\n});\n\nd.push({\n    title:'📲示例',\n    col_type:'flex_button',\n    url:$().lazyRule(()=>{\n        let demo_code = getItem('house.demo','0');\n        if(demo_code=='0'){\n            putVar('house.web_url','hiker://files/rules/dzHouse/html/资源网书签.html');\n            demo_code = parseInt(demo_code)+1;\n            setItem('house.demo',demo_code+'');\n        }else{\n            putVar('house.web_url','file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/dzHouse/html/资源网书签.html');\n            setItem('house.demo','0');\n        }\n        refreshPage(true);\n        return 'toast://已设置示例地址'\n    })\n});\n\nd.push({\n    title:'📤上传',\n    col_type:'flex_button',\n    url:$().lazyRule((canup,house_data,put_url,file_type) =>{\n        function compare(name) {\n            return function(item) {\n                return item.name === name;\n            }\n        }\n        const {getNowFormatDate}=$.require(\"hiker://page/utiliy\");\n        let up_code = getVar('house.upload_code','');\n        if(up_code.length < 2){\n            return 'toast://源码区无内容，请先访问一个静态页面'\n        }\n        if(!canup){\n            return 'toast://你不是开发者，没有提交到仓库的权利!'\n        }\n        let input = getVar('house.web_url','');\n        let web_url = input.split(';')[0];\n        let fileName = '';\n        if(/^hiker:|^file:|^http:|^https:/.test(web_url)){\n            fileName = web_url.split('/')[web_url.split('/').length-1];\n        }else if(/主题￥|元素￥/.test(input)){\n            let bkarr = up_code.split('￥');\n            if(bkarr.length<3){\n                return 'toast://云剪贴板内容有误'\n            }\n            switch (bkarr[1]) {\n                case 'my_home_theme':\n                    fileName = up_code.split('「')[1].split('」')[0];\n                    break;\n                case 'my_home_single':\n                    fileName = up_code.split('「')[1].split('」')[0];\n                    break;\n                case 'js_url':\n                    fileName = up_code.split('￥')[2].split('@')[0];\n                    break;\n            }\n        }else{\n            return 'toast://错误，网页链接无内容!';\n        }\n        let ua = getItem('house.file_ua')==='电脑'?'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36':'Mozilla/5.0 (Linux; Android 9; MI 6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Mobile Safari/537.36';\n        let headers = {\n            'Referer':'https://blog.csdn.net',\n            \"content-type\": \"application/json\",\n            'User-Agent':ua,\n            'Accept':'application/json, text/javascript, */*; q=0.01',\n            'Accept-Language':'zh-CN',\n        };\n        let ftype =  file_type.filter(compare(getItem('house.file_type','静态文件')))[0].value;\n        let redirect = getItem('house.file_redirect','本地')!=='本地';\n        if(redirect&&!web_url.startsWith('http')){\n            return 'toast://直链302重定向网址链接必须http开头';\n        }\n        let code = !redirect?up_code:web_url;\n        let data = {\"params\":\n                {\"data\": {rule_name: fileName, \"rule_type\": '更多分享', \"version\":getNowFormatDate(),\"rule_value\": code,\n                        data_type:ftype, is_redirect:redirect,deviceUa:getItem('house.file_ua'),\n                    },\n                    \"name\": house_data.username,\n                    \"password\": house_data.password}\n        };\n        let upparams = {headers:headers,body:JSON.stringify(data),withHeaders:false,redirect:false,method:'POST'};\n        let backmsg = getItem('house.file_ua')==='电脑'?fetch(put_url,upparams):request(put_url,upparams);\n        try{\n            let result = JSON.parse(backmsg).result;\n            let detail = result.detail;\n            return 'toast://'+detail;\n        }catch (e) {\n            log(e.message);\n            return 'toast://发生了错误\\n'+e.message;\n        }\n    },canup,house_data,put_url,file_type)\n});\n\nd.push({\n    title:'长文本预览区域',\n    col_type:'text_1',\n    url:'hiker://empty',\n    extra: {textSize: 11,lineVisible:false}\n});\n\nd.push({\n    title:getVar('house.upload_code','').substring(0,10240),\n    col_type:'long_text',\n    extra: {textSize: 11}\n});\nsetPageTitle(\"更多分享\");\nsetResult(d);"},{"col_type":"movie_3","name":"轻合集生成接口","path":"genApi","rule":"js:\nfunction genRule(name,url){\n    const {getNowFormatDate}=$.require(\"hiker://page/utiliy?rule=道长仓库Pro\");\n    String.prototype.replaceAll = function(old,new_str){\n    return this.split(old).join(new_str);\n};\n    let muban = \"http://hiker.nokia.press/hikerule/rulelist.json?id=1690\";\nlet muban_word={name:\"@轻合集\",url:\"@地址\",ver:\"@版本\"};\nlet muban_code = fetch(muban);\n            muban_code=muban_code.replaceAll(muban_word.name,name).replaceAll(muban_word.ver,getNowFormatDate()).replaceAll(muban_word.url,url);\nlet import_code=\"海阔视界规则分享，当前分享的是：小程序，无根树，花正清，不断荤腥不戒淫￥home_rule_v2￥base64://@\"+name+\"@\"+base64Encode(muban_code);\n            var url = sharePaste(import_code);\n            let import_rule= url+\"\\n\\n小程序：\"+name;\n   return import_rule;    \n}\n$.exports.genRule=genRule;"},{"col_type":"movie_3","name":"全局解析免嗅","path":"globalParse","rule":"js:\nfunction lazyParse(playUrl,ms,tm){\n    let tm = parseInt(tm)||3000;\n    //log(\"访问超时:\"+tm);\n    log(\"尝试道长仓库x5免嗅:\"+playUrl);\n    clearVar(\"_x5jxUrl\");\n    let refer=playUrl.split(\"//\")[0]+\"//\"+playUrl.split(\"//\")[1].split(\"/\")[0];\n    let bad=$(\"网络不佳或者疑似对方网站挂了，你要查看其网页吗？\").confirm((playUrl)=>{\n             log(\"网站看起来挂了:\"+playUrl);\n            return playUrl\n        },playUrl);\n    try{\n        var back=request(playUrl,{headers: {\"Referer\": refer},timeout:tm});\n        if(!back){\n            return bad\n        }\n    }catch(e){\n        log(e.message);\n        return bad\n    }\n    try {\n         back=JSON.parse(back);\n         if(!back.url){\n             log(back);\n         }\n        return back.url\n    }catch (e) {\n        // log(\"非json错误:\"+e.message);\n        let ms = parseInt(ms)||5000;\n        //log(\"ms:\"+ms);\n        //log(\"ms/250:\"+(ms/250));\n        let max_count=(ms/250);\n        showLoading('嗅探中，若失败就重装x5...');\n        let _x5 = $.toString((playUrl,max_count) => {\n            if(typeof(request)=='undefined'||!request){\n                eval(fba.getInternalJs());\n            }\n\n            fba.putVar(\"_x5jxUrl\",playUrl);\n            //let _x5jxUrl = playUrl;\n            if(window.count == null){\n                window.count=1;\n            }\n            window.count++;\n            //fba.log('count:'+window.count+',max_count:'+max_count);\n            if( window.count >= max_count){\n                fba.log(\"超过\"+max_count*250+\"毫秒未获取到资源地址，跳到源网页\");\n                return fba.getVar(\"_x5jxUrl\");\n                //return _x5jxUrl\n            }\n            function muteMe(elem) {\n                try {\n                    elem.pause();\n                }\n                catch (e) {\n                }\n            }\n            var videos = document.querySelectorAll(\"video\"), audios = document.querySelectorAll(\"audio\"), v2 = document.querySelectorAll(\"embed\"), v3 = document.querySelectorAll(\"#player\");\n            try {\n                [].forEach.call(videos, function (video) {\n                    muteMe(video);\n                });\n            } catch (e) {}\n            try {\n                [].forEach.call(audios, function (audio) {\n                    muteMe(audio);\n                });\n            } catch (e) {}\n            try {\n                [].forEach.call(v2, function (v) {\n                    muteMe(v);\n                });\n            } catch (e) {}\n            try {\n                [].forEach.call(v3, function (v) {\n                    muteMe(v);\n                });\n            } catch (e) {}\n            var urls = _getUrls();\n            let exceptWords = '.js$|.css$|.ts$|.html$|.htm$|.php$|.gif$|.jpg$|.jpeg$|.png$|.ico$|.svg$|.txt$'.split('|').map(it=>'\\\\'+it).join('|');\n            var exceptKeys = new RegExp(exceptWords);\n            let replaceWords = 'playm3u8|m3u8\\.tv'.split('|').map(it=>it).join('|');\n            var replaceKeys = new RegExp(replaceWords,'g');\n            let videoWords = \".mp4$|.m3u8$|.flv$|.avi$|.3gp$|.mpeg$|.wmv$|.mov$|rmvb|.dat$|qqBFdownload|mime=video%2F|mime_type=video_\".split('|').map((it)=>{\n                if(it.startsWith(\".\")){\n                    return '\\\\'+it\n                }else{\n                    return it\n                }\n            }).join(\"|\");\n            var videoKeys = new RegExp(videoWords);\n            for (var i in urls) {\n                if ((videoKeys.test(urls[i])||videoKeys.test(urls[i].replace(replaceKeys,\"\").split(\"?\")[0]) )&& !exceptKeys.test(urls[i].split(\"?\")[0])) {\n                    return urls[i]+\"#isVideo=true#\";\n                }\n            }\n        },playUrl,max_count);\n        let x5Url = 'x5Rule://'+playUrl+ '@' +_x5;\n        return x5Url\n    }\n}\nfunction comParse(parStr){\n    return $.toString((parStr)=>{\n    let t=parStr.split(\";\");\n    let d=[];\nlet list=pdfa(getResCode(),t[0]);\n//log(list);\nfor(let i in list){\n    d.push({\n        title:pdfh(list[i],t[1]),\n        pic_url:pd(list[i],t[2]),\n        desc:pdfh(list[i],t[3]),\n        url:$(pd(list[i],t[4])).lazyRule(()=>{\n            const {lazyParse} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\n            return lazyParse(input)\n        })\n    })\n}\nsetResult(d)\n},parStr)\n}\n$.exports.comParse=comParse;\n$.exports.lazyParse=lazyParse;"},{"name":"任务仓库接口","path":"taskCall","rule":"js:\nString.prototype.strip = function () { return this.replace(/(^\\s*)|(\\s*$)/g, \"\"); };\nfunction task_req(task_api,task) { // 通用发送仓库post调用任务请求\n    const {getFile} = $.require(\"hiker://page/utiliy?rule=道长仓库Pro\");\n    let houseFile = getFile||false;\n    if(!houseFile){\n        setItem('is_house_vip', 'false');\n    }\n    let house_data = houseFile();\n    let result = request(task_api, {\n        headers: {\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n            \"params\": {\n                \"data\": {\n                    \"type\": task.mode||'run',\n                    \"func\": task.func||'',\n                    \"params\": task.params||[]\n                },\n                \"auth\": {\n                    \"name\": house_data.username||\"\",\n                    \"password\": house_data.password||\"\"\n                }\n            }\n        }),\n        method: 'POST'\n    });\n    return JSON.parse(result).result;\n}\n\nfunction task_upload(task){ // 通用任务发布新增及修改功能\n    const {api,getFile} = $.require(\"hiker://page/utiliy?rule=道长仓库Pro\");\n    let houseFile = getFile||false;\n    if(!houseFile){\n        setItem('is_house_vip', 'false');\n    }\n    let api_url = api.host+'/hikerule/task/add';\n    let house_data = houseFile();\n    let result = request(api_url, {\n        headers: {\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n            \"params\": {\n                \"data\": {\n                    \"name\": task.name,\n                    \"pycode\": task.pycode,\n                    \"note\": task.note,\n                    \"test_code\": task.test_code,\n                },\n                \"auth\": {\n                    \"name\": house_data.username||\"\",\n                    \"password\": house_data.password||\"\"\n                }\n            }\n        }),\n        method: 'POST'\n    });\n    return JSON.parse(result).result;\n}\n\nfunction task_call(id,func,params){\n    const {api} = $.require(\"hiker://page/utiliy?rule=道长仓库Pro\");\n    let task_api = api.host+'/hikerule/task/run/'+id;\n    let task = {\n        mode:'call',\n        func:func,\n        params:params||[]\n    };\n    return task_req(task_api,task);\n}\n\nfunction task_rename(id,new_task_name){\n    const {api,getFile} = $.require(\"hiker://page/utiliy?rule=道长仓库Pro\");\n    let houseFile = getFile||false;\n    if(!houseFile){\n        setItem('is_house_vip', 'false');\n    }\n    let house_data = houseFile();\n    let task_api = api.host+'/hikerule/task/rename/'+id;\n    task_api = task_api+'?name='+house_data.username+'&password='+house_data.password+'&task_name='+new_task_name;\n    try {\n        let result = JSON.parse(fetch(task_api,{}));\n        if(result.status==0){\n            return  result.detail\n        }else{\n            return result.result+''+result.detail\n        }\n    }catch (e) {\n        log(e.message);\n        return ''+e.message\n    }\n}\n\nfunction task_change_state(id){\n    const {api,getFile} = $.require(\"hiker://page/utiliy?rule=道长仓库Pro\");\n    let houseFile = getFile||false;\n    if(!houseFile){\n        setItem('is_house_vip', 'false');\n    }\n    let house_data = houseFile();\n    let task_api = api.host+'/hikerule/task/change_state/'+id;\n    task_api = task_api+'?name='+house_data.username+'&password='+house_data.password;\n    try {\n        let result = JSON.parse(fetch(task_api,{}));\n        if(result.status==0){\n            return  result.detail\n        }else{\n            return result.result+''+result.detail\n        }\n    }catch (e) {\n        log(e.message);\n        return ''+e.message\n    }\n}\n\nfunction task_run(id){\n    const {api} = $.require(\"hiker://page/utiliy?rule=道长仓库Pro\");\n    let task_api = api.host+'/hikerule/task/run/'+id;\n    let task = {};\n    return task_req(task_api,task);\n}\n\n$.exports.taskCall = task_call;\n$.exports.taskRun = task_run;\n$.exports.taskReq = task_req;\n$.exports.taskUpload = task_upload;\n$.exports.taskRename = task_rename;\n$.exports.taskChangeState = task_change_state;"}],"title":"道长仓库Pro","author":"@LoyDgIk","version":63,"url":"hiker://empty","col_type":"icon_2_round","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nconst {\n    getApi,\n    color,\n    small,\n    getFile,\n    htmlTag,\n    api\n} = $.require(\"hiker://page/utiliy\");\n\n\nlet classA = getVar(\"Warehouse.class\", \"0\");\nlet listUrl = getApi(\"usersUrl\") + classA,\n    myUrl = getApi(\"rulesAllUrl\");\nputVar(\"Warehouse.filter\", \"\");\nlet userList = JSON.parse(request(listUrl)).result,\nnowCon = 0,\n    ruleCount = JSON.parse(request(getApi(\"ruleCountUrl\"))).result;\nlet data = [];\nlet classTab = [\n    [\"上次活跃\", \"0\"],\n    [\"规则数\", \"1\"],\n    [\"注册时间\", \"-1\"]\n]\nfor (let item of classTab) {\n    data.push({\n        title: item[1] === classA ? \"““\" + item[0] + \"””\" : item[0],\n        url: $(\"#noLoading#\").lazyRule((key) => {\n            putVar(\"Warehouse.class\", key);\n            refreshPage(false);\n            return \"hiker://empty\";\n        }, item[1]),\n        col_type: \"scroll_button\"\n    });\n}\ndata.push({\n    title: \"全部规则\",\n    url: \"hiker://page/AllPublicRule?url=hiker://empty#fypage#noHistory##noRecordHistory#\",\n    col_type: \"scroll_button\"\n});\naddListener('onClose', $.toString(() => {\n    clearVar(\"Warehouse.class\");\n}));\nlet {\n    username,\n    password,\n    user\n} = getFile();\n\nlet is_login = false;\nif (username !== void 0 && password !== void 0) {\n    myUrl += '?qq=' + username + '&password=' + password;\n    let code_str = request(myUrl);\n    let code = JSON.parse(code_str);\n    if (code.status == 0) {\n        is_login = true;\n    }\n}\nif (is_login) {\n    nowCon = JSON.parse(request(getApi(\"nowConUrl\"))).result;\n    let devData = userList.find(item => item.qq === username);\n    data.push({\n        title: '<strong><span style=\"color: #ff7000\">' + devData.name + '</span></strong>&nbsp;&nbsp;&nbsp;&nbsp;<small><u>规则管理 ></u></small>',\n        pic_url: devData.avatar,\n        col_type: \"avatar\",\n        url: \"hiker://page/devManage#noHistory##noRecordHistory#\",\n        extra: {\n            username: username,\n            password: password,\n            dev: devData\n        }\n    });\n    data.push({\n        col_type: 'text_1',\n        title: small(\"现有 \" + color(userList.length, \"#ff7000\") + \" 名开发者，\" + color(ruleCount[0], \"#ff7000\") + \" 条公开规则，\" + color(ruleCount[1], \"#ff7000\") + \" 条集芳阁规则。在线:\"+color(nowCon, \"#ff7000\")),\n        url: \"toast://喵喵喵?\",\n    });\n\n} else {\n    data.push({\n        title: small(color(\"开发者登录\", \"#00BFFF\")),\n        col_type: 'text_center_1',\n        desc: small(\"现有\" + color(userList.length, \"#ff7000\") + \"名开发者，\" + color(ruleCount[0], \"#ff7000\") + \"条公开规则，\" + color(0, \"#ff7000\") + \"条集芳阁规则。\"),\n        url: \"hiker://page/devLogin\"\n    });\n}\nif (Array.isArray(user) && user.length === 2) {\n    let userlogin = request(api.dis_login, {\n        headers: {\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n            \"params\": {\n                \"qq\": user[0],\n                \"auth_code\": user[1]\n            }\n        }),\n        method: 'POST'\n    });\n    userlogin = JSON.parse(userlogin).result;\n    if (userlogin.status === 0) {\n        userlogin = userlogin.result\n        data.push({\n            title: userlogin.name + \"&nbsp;&nbsp;\" + userlogin.qq + \"&nbsp;&nbsp;&nbsp;&nbsp;<small><u>更换账号 ></u></small>\",\n            col_type: 'avatar',\n            pic_url: userlogin.avatar_url,\n            url: \"hiker://page/Userregistration\"\n        });\n        data.splice(3,0,{\n            title: userlogin.has_reply?\"🆕回复\":\"🔔回复\",\n            url: \"hiker://page/MyReply?url=hiker://empty#fypage#noHistory##noRecordHistory#\",\n            col_type: \"scroll_button\",\n            extra:{\n                auth_code:user[1],\n                qq:user[0]\n            }\n        });\n    } else {\n        data.push({\n            title: userlogin.detail,\n            col_type: 'text_center_1',\n            desc: \"““””<small><u>重新获取验证码 ></u></small>\",\n            url: \"hiker://page/Userregistration\"\n        });\n    }\n} else {\n    data.push({\n        title: \"评论登录/注册\",\n        col_type: 'text_center_1',\n        desc: \"\",\n        url: \"hiker://page/Userregistration\"\n    });\n}\nfor (var item of userList) {\n    data.push({\n        title: item.name + \"(\" + item.rule_num + \")\",\n        desc: item.id + ':' + item.nick_name,\n        pic_url: item.avatar,\n        url: \"hiker://page/rules#noHistory#\",\n        extra: {\n            avatarUrl: item.avatar,\n            qq: item.qq\n        }\n    });\n}\n\ndata.push({\n    col_type: 'long_text'\n});\nsetResult(data);\nlet img = [\n    [\n        \"hiker://files/icon/赞.svg\", \"https://bafybeiaeetwbc3thoy22y5zd7al6rndeqbrbwhszqb6oitnf7a5zvsz5pe.ipfs.cf-ipfs.com/\"\n    ],\n    [\n        \"hiker://files/icon/踩.svg\", \"https://bafybeiehxynphaafe4mukacs7we4d6lrb35kppdiffjv4vwnsq22nfqnl4.ipfs.cf-ipfs.com/\"\n    ],\n    [\n        \"hiker://files/icon/评论.svg\", \"https://bafybeifhxi5rdnxq5xly7r4qdbwico2343smelxdqoytalguctgc2ojsdy.ipfs.cf-ipfs.com/\"\n    ]\n]\nfor (let item of img) {\n    if (!fileExist(item[0])) {\n        writeFile(item[0], request(item[1]));\n    }\n}","searchFind":"js:\nvar d = [];\nconst {\n    api,\n    getApi,\n    localRuleVer    \n} = $.require(\"hiker://page/utiliy\");\nvar html = request(getApi(\"search\") + \"?key=\" + MY_URL.replace(\"hiker://empty#\", \"\")); // 获取源码\nvar rule_list = JSON.parse(html).result;\nlet filter = getVar(\"Warehouse.filter\", \"\");\nif (filter !== \"\") {\n    rule_list = rule_list.filter(item => item.author === filter);\n}\nif (rule_list.length === 0) {\n    d.push({\n        title: '共搜索到' + rule_list.length + \"条记录\",\n        desc: '详情请找道长,qq 434857005',\n        url: \"hiker://empty\",\n        col_type: 'text_center_1'\n    });\n}\nlet homeList = JSON.parse(request(api.home));\n\nfor (let item of rule_list) {\n    //let lver=localRuleVer(homeList, item);\n    let label = \"\",\n        lver = -2;\n    if (item.data_type === \"home_rule_url\") {\n        lver = localRuleVer(homeList, item);\n        if (lver === -1) {\n            label = \"🆕\";\n        } else if (lver < item.ver) {\n            label = \"🆙\";\n        }\n    }\n    d.push({\n        title: label+item.name,\n        desc: item.type,\n        content: item.author/*+\"\\n本地版本:\"+lver+\"\\t\\t云端版本:\"+item.ver*/+ '\\n更新于:' + item.last_update,\n        url: \"hiker://page/ruleDetail#noHistory##noRecordHistory#\",\n        extra: {\n            lver: lver,\n            id: item.id\n        },\n        pic_url: item.pic_url\n    });\n\n}\n\nsetResult(d);","search_url":"hiker://empty#**","titleColor":"","group":"①搜索🔎","detail_col_type":"text_1","detail_find_rule":"","sdetail_col_type":"text_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"工具\",\"path\":\"utiliy\",\"rule\":\"js:\\nvar api = {\\n    host: \\\"http://hiker.nokia.press/hikerule\\\",\\n    usersUrl: \\\"/dev/users?order=\\\", //用户列表\\n    ruleCountUrl: \\\"/dev/rulecount\\\", //获取规则数量\\n    rulesUrl: \\\"/dev/get\\\", //用户对应的规则列表仅仅获取公开\\n    rulesAllUrl: \\\"/dev/getall\\\", //开发者对应的规则列表可获取私有\\n    importUrl: \\\"/rulelist.json?id=\\\", //规则详情可导入\\n    infoSetUrl: \\\"/dev/set_info\\\",\\n    nowConUrl: \\\"/sql_info/get_now_con\\\",\\n    infoGetUrl: \\\"/dev/get_info?name=\\\",\\n    settingsGetUrl: \\\"/dev/get_settings?name=\\\",\\n    gupload: \\\"/dev/gupload\\\",\\n    gtimeover: \\\"/dev/gtimeover\\\",\\n    getbyid: \\\"/dev/getbyid\\\",\\n    ruleListJson: \\\"/rulelist.json\\\",\\n    auth: \\\"/dev/get_auth\\\",\\n    timeover: \\\"/dev/timeover\\\",\\n    share: \\\"/dev/share\\\",\\n    genAuth: \\\"/dev/gen_auth\\\",\\n    deleteUrl: \\\"/dev/delete\\\",\\n    jsonList: \\\"/dev/json_list\\\",\\n    search: \\\"/dev/search\\\",\\n    new_dev: \\\"/dev_regist/new\\\",\\n    new_getId: \\\"/dev_regist/get_id\\\",\\n    new_confirm: \\\"/dev_regist/confirm\\\",\\n    modify_pwd: \\\"/modify/password\\\",\\n    modify_name: \\\"/modify/name\\\",\\n    modify_ava: \\\"/modify/avatar\\\",\\n    user: \\\"/dev/user/\\\",\\n    get_rule_note: \\\"/modify/get_rule_note/\\\",\\n    set_rule_pic: \\\"/modify/rule_pic/\\\",\\n    set_rule_note: \\\"/modify/rule_note/\\\"\\n}\\n$.exports.range = function(m, n) {\\n    return Math.floor(Math.random() * (m - n + 1) + n);\\n}\\n$.exports.mapColType = function(target, type, n) {\\n    for (let i = 0; i < n; i++) {\\n        target.push({\\n            col_type: type\\n        });\\n    }\\n}\\n$.exports.getApi = function(k) {\\n    return api.host + api[k];\\n}\\n$.exports.localRuleVer = function(localRuleList, rule) {\\n    let localRule;\\n    for (let i = 0; i < localRuleList.length; i++) {\\n        let item = localRuleList[i];\\n        let au = item.author || \\\"\\\";\\n        if (item.title === rule.name && au.length > 0 && rule.author.includes(au)) {\\n            localRule = item;\\n            break;\\n        }\\n    }\\n    if (localRule === void 0) {\\n        return -1;\\n    } else {\\n        return localRule.version;\\n    }\\n}\\n$.exports.color = function(text, color) {\\n    text += \\\"\\\";\\n    if (text.indexOf(\\\"““””\\\") === 0) {\\n        text.replace(\\\"““””\\\", \\\"\\\");\\n    }\\n    return \\\"““””<font color='\\\" + color + \\\"'>\\\" + text + \\\"</font>\\\";\\n}\\n\\nfunction htmlTag(tag, text) {\\n    text += \\\"\\\";\\n    if (text.indexOf(\\\"““””\\\") === 0) {\\n        text.replace(\\\"““””\\\", \\\"\\\");\\n    }\\n    return \\\"““””\\\" + \\\"<\\\" + tag + \\\">\\\" + text + \\\"</\\\" + tag + \\\">\\\";\\n\\n}\\n\\nfunction getNowFormatDate() {\\n            let date = new Date();\\n            let seperator1 = \\\"-\\\";\\n            let seperator2 = \\\":\\\";\\n            let month = date.getMonth() + 1;\\n            let strDate = date.getDate();\\n            let strHours = date.getHours();\\n            let strMinutes = date.getMinutes();\\n            let strSeconds = date.getSeconds()+1;\\n            if (month >= 1 && month <= 9) {\\n                month = \\\"0\\\" + month\\n            }\\n            if (strDate >= 0 && strDate <= 9) {\\n                strDate = \\\"0\\\" + strDate\\n            }\\n            if (strHours >= 0 && strHours <= 9) {\\n                strHours = \\\"0\\\" + strHours\\n            }\\n            if (strMinutes >= 0 && strMinutes <= 9) {\\n                strMinutes = \\\"0\\\" + strMinutes\\n            }\\n            if (strSeconds >= 0 && strSeconds <= 9) {\\n                strSeconds = \\\"0\\\" + strSeconds\\n            }\\n            //let currentdate = date.getFullYear() + seperator1 + month + seperator1 + strDate + \\\" \\\" + strHours + seperator2 + strMinutes + seperator2 + strSeconds;\\n            let currentdate = (date.getFullYear()-2020)+''+ month +''+ strDate +''+ strHours+'' + strMinutes +''+ Math.ceil(strSeconds/7);\\n            return parseInt(currentdate)\\n        }\\n$.exports.getNowFormatDate = getNowFormatDate;\\n$.exports.htmlTag = htmlTag;\\n$.exports.small = function(text) {\\n    return htmlTag(\\\"small\\\", text);\\n}\\n$.exports.getFile = function() {\\n    var File = request(\\\"hiker://files/WarehouseUSER.json\\\") || \\\"{}\\\";\\n    try {\\n        return JSON.parse(File);\\n    } catch (e) {\\n        writeFile(\\\"hiker://files/WarehouseUSER.json\\\", \\\"{}\\\");\\n        return {};\\n    }\\n}\\n$.exports.getUserDate =function(){\\n    var File = request(\\\"hiker://files/WarehouseUSERA.json\\\") || \\\"[]\\\";\\n    try {\\n        return JSON.parse(File);\\n    } catch (e) {\\n        writeFile(\\\"hiker://files/WarehouseUSERA.json\\\", \\\"[]\\\");\\n        return [];\\n    }\\n}\\n$.exports.existFile = function(spath, ipath, headers) {\\n    let scode = request(spath);\\n    if (!scode) {\\n        writeFile(spath, request(ipath, headers));\\n    }\\n}\\n\\nlet host = \\\"http://hiker.nokia.press\\\";\\n//let host = \\\"http://192.168.3.94:8079\\\";\\nlet home = base64Decode(\\\"aGlrZXI6Ly9ob21l\\\");\\nlet newApi = {\\n    \\\"dis_new\\\": \\\"/hikerule/new_rule_discuss/\\\",\\n    \\\"dis_verify\\\": \\\"/hikerule/rule_discuss/get_yzm\\\",\\n    \\\"dis_get\\\": \\\"/hikerule/rule_discuss/\\\",\\n    \\\"dis_set\\\": \\\"/hikerule/modify/can_discuss/\\\",\\n    \\\"dis_new_user\\\": \\\"/hikerule/rule_discuss/new_user\\\",\\n    \\\"dis_login\\\":\\\"/hikerule/rule_discuss/user_login\\\",\\n    \\\"dis_dev_discuss\\\":\\\"/hikerule/modify/dev_can_discuss\\\",\\n    \\\"dis_dev_control\\\":\\\"/hikerule/rule_discuss/remove/\\\",\\n    \\\"all_rule\\\":\\\"/hikerule/get_rules\\\",\\n    \\\"dis_get_reply\\\":\\\"/hikerule/get_reply_rule_discuss\\\",\\n    \\\"dis_reply\\\":\\\"/hikerule/dev_new_rule_discuss/\\\",\\n}\\n\\nfunction setApi(object) {\\n    let target = {};\\n    for (let key in object) {\\n        target[key]=host+object[key]\\n    }\\n    return target;\\n}\\n\\n$.exports.api = setApi(newApi);\\n$.exports.api.host=host;\\n$.exports.api.home=home;\"},{\"col_type\":\"movie_3\",\"name\":\"开发者登录\",\"path\":\"devLogin\",\"rule\":\"js:\\nsetPageTitle(\\\"开发者登录\\\");\\nconst {\\n    getApi,\\n    htmlTag,\\n    mapColType,\\n    small,\\ngetFile\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nvar data = [];\\naddListener('onClose', $.toString(()=>{\\n    clearVar(\\\"WarehouseUsername\\\");\\n    clearVar(\\\"WarehousePassword\\\");\\n}))\\ndata.push({\\n    title: '账号',\\n    col_type: 'input',\\n    extra: {\\n        defaultValue: getVar('WarehouseUsername',''),\\n        type:\\\"number\\\",\\n        onChange: 'putVar(\\\"WarehouseUsername\\\",input)'\\n    }\\n}, {\\n    title: '密码',\\n    col_type: 'input',\\n    extra: {\\n        defaultValue: getVar('WarehousePassword', ''),\\n        type: \\\"password\\\",\\n        onChange: 'putVar(\\\"WarehousePassword\\\",input)'\\n    }\\n});\\n\\ndata.push({\\n    title:\\\"&nbsp;&nbsp;<a href='hiker://page/Register'>注册</a>\\\",\\n    col_type:\\\"rich_text\\\"\\n});\\nmapColType(data, \\\"line_blank\\\", 1);\\nlet user = getFile();\\ndata.push({\\n    title: htmlTag(\\\"b\\\", \\\"登录\\\"),\\n    url: $().lazyRule((url, f)=> {\\n        let username = getVar('WarehouseUsername', ''),\\n            password = getVar('WarehousePassword', '');\\n        if(username === \\\"\\\" && password ===\\\"\\\"){\\n            return \\\"toast://账号和密码不能为空\\\"\\n        }\\n        let myUrl = url + '?qq=' + username + '&password=' + password;\\n        let code_str = request(myUrl);\\n        let code = JSON.parse(code_str);\\n        if (code.status == 0) {\\n            f.username=username;\\n            f.password=password\\n            writeFile('hiker://files/WarehouseUSER.json', JSON.stringify(f));\\n            back();\\n            return \\\"toast://登录成功\\\";\\n        }else{\\n            return \\\"toast://账号或密码错误\\\";\\n        }\\n    }, getApi(\\\"rulesAllUrl\\\"),user),\\n    col_type: 'text_center_1'\\n});\\nsetResult(data);\"},{\"col_type\":\"icon_2_round\",\"name\":\"开发者管理\",\"path\":\"devManage\",\"rule\":\"js:\\nsetPageTitle(\\\"规则管理\\\");\\n\\n\\naddListener('onClose', 'clearVar(\\\"Warehouse.back\\\",\\\"\\\");');\\nif (getVar(\\\"Warehouse.back\\\") === \\\"1\\\") {\\n    back();\\n}\\nconst {\\n    getApi,\\n    color,\\n    small,\\n    getFile,\\n    existFile,\\n    mapColType,\\n    api\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    dev,\\n    username,\\n    password\\n} = MY_PARAMS;\\n//existFile(\\\"hiker://files/rules/dzHouse/html/开发者分享.html\\\", \\\"https://erp.scwinbao.com/hikerule/rulelist.json?id=539\\\");\\nlet ruleList = JSON.parse(request(getApi(\\\"rulesAllUrl\\\") + '?qq=' + username + '&password=' + password)).result;\\nlet MOBILE_UA = 'Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Mobile Safari/537.36';\\nlet infoSetUrl = getApi(\\\"infoSetUrl\\\");\\nlet infoGetUrl = getApi(\\\"infoGetUrl\\\") + username;\\nlet settingsGetUrl = getApi(\\\"settingsGetUrl\\\") + username;\\nputVar(\\\"dev_set_info\\\", [username, password, infoSetUrl, MOBILE_UA, infoGetUrl].join(\\\"$$\\\"));\\n\\nlet data = [];\\n\\ndata.push({\\n    title: '““””<big>仓库设置</big>&nbsp;&nbsp;&nbsp;<small><u>（ 个人资料 >）</u></small>',\\n    desc: '““””您共有 <span style=\\\"color: #ff7000\\\">' + ruleList.length + '</span>' + \\\" 条规则。\\\\n点击规则可进行分享、删除、导入操作及查看详情\\\",\\n    url: \\\"hiker://page/PersonalData#noHistory##noRecordHistory#\\\",\\n    extra:{id:dev.id},\\n    col_type: 'text_1'\\n});\\nmapColType(data, \\\"line\\\", 2);\\ndata.push({\\n    title: small(color(\\\"更改公告✍\\\", \\\"#34b1ff\\\")),\\n    url: \\\"x5://file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/dzHouse/html/dev_info_edit.html\\\",\\n    col_type: 'text_3'\\n});\\ndata.push({\\n    title: small(color(\\\"更多分享📲\\\", \\\"#34b1ff\\\")),\\n    //url: \\\"x5://file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/dzHouse/html/开发者分享.html\\\",\\n  url: \\\"hiker://page/moreShare\\\",\\n    col_type: 'text_3'\\n});\\ndata.push({\\n    title: small(color(\\\"升级依赖📥\\\", \\\"#34b1ff\\\")),\\n    url: $(\\\"升级会重新从仓库拉取相关的静态页面到本地\\\\n确认升级吗?\\\").confirm((host) => {\\n        writeFile(\\\"hiker://files/rules/dzHouse/html/开发者分享.html\\\", request(host+'/hikerule/rulelist.json?id=539'));\\n        writeFile(\\\"hiker://files/rules/dzHouse/html/dev_info_edit.html\\\", request(host+'/hikerule/rulelist.json?id=402'));\\n        writeFile(\\\"hiker://files/rules/dzHouse/html/dev_info_get.html\\\", request(host+'/hikerule/rulelist.json?id=404'));\\n        refreshPage(false);\\n        return \\\"toast://已重置开发者分享,简介查看,简介编辑等静态文件\\\";\\n    },api.host),\\n    col_type: 'text_3'\\n});\\nlet devSetBack;\\ntry {\\n    devSetBack = JSON.parse(request(settingsGetUrl));\\n} catch (e) {\\n    devSetBack = {};\\n}\\n\\nfunction setSettingItem(basic) {\\n    let temp = {\\n        title: basic.title,\\n        col_type: basic.col_type,\\n        url: $(basic.confirm).confirm((url, msg) => {\\n            let back = request(url);\\n            let ret = JSON.parse(back);\\n            if (ret.status == 0) {\\n                refreshPage(true);\\n                return \\\"toast://\\\" + msg[0];\\n            } else {\\n                refreshPage(false);\\n                return \\\"toast://\\\" + msg[1] + \\\"\\\\n\\\" + ret.detail;\\n            }\\n        }, basic.url, basic.msg)\\n    };\\n    return temp;\\n}\\nif (devSetBack.status == 0) {\\n    let devSettings = devSetBack.result;\\n    let share = {\\n        col_type: \\\"text_3\\\"\\n    };\\n    if (devSettings.share_public) {\\n        share.title = small(color(\\\"公开上传\\\", \\\"green\\\") + color(\\\"(私藏)\\\", \\\"#00bfff\\\"));\\n        share.url = getApi(\\\"gupload\\\") + \\\"?qq=\\\" + username + \\\"&password=\\\" + password + \\\"&flag=1\\\";\\n        share.confirm = \\\"是否确认私藏以后提交的规则?\\\";\\n        share.msg = [\\\"已私藏\\\", \\\"私藏失败\\\"];\\n    } else {\\n        share.title = small(color(\\\"私密上传\\\", \\\"red\\\") + color(\\\"(公开)\\\", \\\"#adff2f\\\"));\\n        share.url = getApi(\\\"gupload\\\") + \\\"?qq=\\\" + username + \\\"&password=\\\" + password;\\n        share.confirm = \\\"是否确认公开以后提交的规则?\\\";\\n        share.msg = [\\\"已公开\\\", \\\"公开失败\\\"];\\n    }\\n    data.push(setSettingItem(share));\\n    let timeOver = {\\n        col_type: \\\"text_3\\\"\\n    };\\n    if (devSettings.time_over) {\\n        timeOver.title = small(color(\\\"短时秘钥\\\", \\\"green\\\") + color(\\\"(永久)\\\", \\\"#00bfff\\\"));\\n        timeOver.url = getApi(\\\"gtimeover\\\") + \\\"?qq=\\\" + username + \\\"&password=\\\" + password + \\\"&flag=1\\\";\\n        timeOver.confirm = \\\"是否确认以后的私藏规则分享不过期?\\\";\\n        timeOver.msg = [\\\"已设为永久\\\", \\\"设为永久失败\\\"];\\n    } else {\\n        timeOver.title = small(color(\\\"永久秘钥\\\", \\\"red\\\") + color(\\\"(过期)\\\", \\\"#adff2f\\\"));\\n        timeOver.url = getApi(\\\"gtimeover\\\") + \\\"?qq=\\\" + username + \\\"&password=\\\" + password;\\n        timeOver.confirm = \\\"确认要以后分享的私藏规则自动到期?\\\";\\n        timeOver.msg = [\\\"已设为过期\\\", \\\"设为过期失败\\\"];\\n    }\\n    data.push(setSettingItem(timeOver));\\n    let discuss = {\\n        col_type: \\\"text_3\\\"\\n    };\\n    if (devSettings.can_discuss) {\\n        discuss.title = small(color(\\\"允许评论\\\", \\\"red\\\") + color(\\\"(不许)\\\", \\\"#adff2f\\\"));\\n        discuss.url = api.dis_dev_discuss + \\\"?qq=\\\" + username + \\\"&password=\\\" + password+ \\\"&flag=1\\\";\\n        discuss.confirm = \\\"是否确认以后上传的规则允许评论?\\\";\\n        discuss.msg = [\\\"已设为不许\\\", \\\"设置失败\\\"];\\n        \\n    } else {\\n        discuss.title = small(color(\\\"不许评论\\\", \\\"green\\\") + color(\\\"(允许)\\\", \\\"#00bfff\\\"));\\n        discuss.url = api.dis_dev_discuss + \\\"?qq=\\\" + username + \\\"&password=\\\" + password;\\n        discuss.confirm = \\\"是否确认以后上传的规则允许评论?\\\";\\n        discuss.msg = [\\\"已设为允许\\\", \\\"设置失败\\\"];\\n    }\\n    data.push(setSettingItem(discuss));\\n}\\nmapColType(data, \\\"line\\\", 2);\\nfor (let item of ruleList) {\\n    let my_t_excode1 = '';\\n    let my_t_excode2 = '';\\n    if (item.state != 'public') {\\n        my_t_excode1 += '㊙️';\\n    } else {\\n        my_t_excode1 += '';\\n    }\\n    data.push({\\n        title: my_t_excode1 + item.name + my_t_excode2,\\n        url: \\\"hiker://page/manageRule#noHistory##noRecordHistory#\\\",\\n        extra: {\\n            id: item.id,\\n            username: username,\\n            password: password\\n        },\\n        pic_url: item.pic,\\n    })\\n}\\nif (ruleList.length === 0) {\\n    data.push({\\n        title: \\\"<h5 style='text-align:center'>快来上传你的第一条规则吧！</h5>\\\",\\n        col_type: \\\"rich_text\\\"\\n    });\\n}\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"规则详细-dev\",\"path\":\"manageRule\",\"rule\":\"js:\\nconst {\\n    getApi,\\n    color,\\n    small,\\n    getFile,\\n    existFile,\\n    mapColType,\\n    htmlTag,\\n    api\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    id,\\n    username,\\n    password\\n} = MY_PARAMS;\\nlet dataItem = JSON.parse(request(getApi(\\\"getbyid\\\") + \\\"?id=\\\" + id)).result;\\nsetPageTitle(\\\"编辑「\\\" + dataItem.name + \\\"」\\\");\\nlet reqByGet = \\\"?id=\\\" + dataItem.id + \\\"&qq=\\\" + username + \\\"&password=\\\" + password;\\nlet ruleListJson = getApi(\\\"ruleListJson\\\") + \\\"?id=\\\";\\nlet data = [];\\ndata.push({\\n    title: htmlTag(\\\"big\\\", \\\"版本\\\"),\\n    desc: \\\"““””云端版本:\\\" + color(dataItem.ver, \\\"#5cff2c\\\") + \\\"\\\\n上次提交于: [\\\" + color(dataItem.last_update, \\\"#ff7000\\\") + \\\"]\\\",\\n    url: $(\\\"<开发者>\\\\n\\\" + dataItem.author + \\\"\\\\n<名称>\\\\n\\\" + dataItem.name + \\\"\\\\n<云端版本>\\\\n\\\" + dataItem.ver + \\\"\\\\n<更新时间>\\\\n[\\\" + dataItem.last_update + \\\"]\\\").confirm(() => {}),\\n    col_type: 'text_1'\\n});\\nlet dataType = {\\n    home_rule_url: '首页云规则',\\n    publish: '提交云仓库规则',\\n    js_url: '网页插件规则',\\n    html: '静态页面',\\n    config: '主页配置'\\n};\\n\\nlet basic = {\\n    col_type: \\\"text_1\\\",\\n    url: \\\"hiker://empty\\\"\\n};\\nlet dataTypeTips = dataType[dataItem.data_type] || '未知规则:' + dataItem.data_type;\\n\\nbasic.title = htmlTag(\\\"big\\\", \\\"类型\\\") + \\\"\\\\t\\\\t\\\\t\\\" + small(\\\"(id:\\\" + dataItem.id + \\\")\\\");\\nbasic.desc = \\\"数据类型：\\\" + color(dataTypeTips, \\\"#cb54ff\\\") + \\\"\\\\n分享状态为：\\\" + dataItem.state;\\nif ([\\\"html\\\", \\\"config\\\", \\\"js_url\\\"].includes(dataItem.data_type)) {\\n    basic.desc += \\\"\\\\n““”” =>\\\" + small(\\\"点此预览\\\");\\n    basic.url = ruleListJson + dataItem.id;\\n}\\nlet auth = \\\"\\\";\\nif (dataItem.state == \\\"private\\\") {\\n    let auth_back = JSON.parse(request(getApi(\\\"auth\\\") + reqByGet));\\n    basic.title = basic.title + \\\"\\\\n\\\" + small(color(auth_back.result, \\\"grey\\\"));\\n    auth = '&auth=' + auth_back.result;\\n    basic.url = basic.url === \\\"hiker://empty\\\" ? basic.url : basic.url + auth;\\n}\\ndata.push(basic);\\ndata.push({\\n    title: htmlTag(\\\"big\\\", \\\"操作\\\"),\\n    col_type: \\\"text_1\\\",\\n    url: \\\"toast://你才是最帅的那个人！\\\"\\n});\\nlet importUrl, ruleCode, shareUrl, backCode = \\\"\\\";\\nif (!dataItem.is_json) {\\n    backCode = request(ruleListJson + dataItem.id + auth);\\n}\\nswitch (dataItem.data_type) {\\n    case \\\"home_rule_url\\\":\\n        ruleCode = \\\"海阔视界首页频道规则【\\\" + dataItem.name + \\\"】￥home_rule_url￥\\\" + ruleListJson + dataItem.id + auth;\\n        importUrl = \\\"rule://\\\" + base64Encode(ruleCode)\\n        break;\\n    case 'publish':\\n        ruleCode = '海阔视界规则分享，当前分享的是：' + dataItem.name + '￥publish￥' + base64Encode(backCode);\\n        importUrl = 'rule://' + base64Encode(ruleCode);\\n        break;\\n    case 'js_url':\\n        ruleCode = '海阔视界规则分享，当前分享的是：网页插件￥js_url￥' + dataItem.name + '@base64://' + base64Encode(backCode);\\n        importUrl = 'rule://' + base64Encode(ruleCode);\\n        break;\\n    case 'html':\\n        let file_tmp = dataItem.name.split('.');\\n        let file_path = file_tmp.length > 1 ? file_tmp[file_tmp.length - 1] + \\\"/\\\" + dataItem.name : dataItem.name;\\n        ruleCode = \\\"海阔视界本地文件分享￥file_url￥hiker://files/rules/dzHouse/\\\" + file_path + \\\"@\\\" + ruleListJson + dataItem.id + auth;\\n        importUrl = 'rule://' + base64Encode(ruleCode);\\n        break\\n    case \\\"config\\\":\\n        importUrl = $().rule(password => {\\n            eval(fetch(\\\"hiker://assets/home.js\\\"));\\n            HikerHome.load(\\\"import\\\", password);\\n        }, backCode);\\n        break;\\n}\\nlet my_col_type = \\\"text_2\\\";\\nif (importUrl) {\\n    data.push({\\n        title: \\\"导入规则\\\",\\n        url: importUrl,\\n        col_type: my_col_type\\n    });\\n}\\nif (ruleCode) {\\n    data.push({\\n        title: \\\"分享规则\\\",\\n        url: \\\"copy://\\\" + ruleCode,\\n        col_type: my_col_type\\n    });\\n}\\n\\nfunction setSettingItem(basic, pattern) {\\n    let temp = {\\n        title: basic.title,\\n        col_type: basic.col_type,\\n        url: $(basic.confirm).confirm((url, msg, pattern) => {\\n            let backA = request(url);\\n            let ret = JSON.parse(backA);\\n            if (ret.status == 0) {\\n                pattern ? back() : refreshPage(false);\\n                return \\\"toast://\\\" + msg[0];\\n            } else {\\n                pattern ? back() : refreshPage(false);\\n                return \\\"toast://\\\" + msg[1] + \\\"\\\\n\\\" + ret.detail;\\n            }\\n        }, basic.url, basic.msg, pattern)\\n    };\\n    return temp;\\n}\\nif (dataItem.state == 'private') {\\n    data.push({\\n        title: \\\"设为公开\\\",\\n        url: $(getApi(\\\"share\\\") + reqByGet + \\\"&flag\\\" + \\\"#noLoading#\\\").lazyRule(() => {\\n            request(input);\\n            refreshPage(false);\\n            return \\\"toast://已设为公开\\\";\\n        }),\\n        col_type: my_col_type\\n    }, {\\n        title: \\\"随机密钥\\\",\\n        col_type: my_col_type,\\n        url: $(getApi(\\\"genAuth\\\") + reqByGet + \\\"#noLoading#\\\").lazyRule(() => {\\n            let back = request(input);\\n            let ret = JSON.parse(back);\\n            if (ret.status == 0) {\\n                refreshPage(false);\\n                return \\\"toast://已生成随机密码\\\\n\\\" + ret.result\\n            } else {\\n                refreshPage(true);\\n                return \\\"toast://随机密码生成失败\\\"\\n            }\\n        })\\n    });\\n    let timeOver = {\\n        col_type: my_col_type\\n    };\\n    if (dataItem.time_over) {\\n        timeOver.title = small(color(\\\"短时密钥\\\", \\\"green\\\") + color(\\\"(→永久)\\\", \\\"red\\\"));\\n        timeOver.url = getApi(\\\"timeover\\\") + reqByGet + \\\"&flag=1\\\";\\n        timeOver.confirm = \\\"是否确认以后的私藏规则分享不过期?\\\";\\n        timeOver.msg = [\\\"已设为永久\\\", \\\"设为永久失败\\\"];\\n    } else {\\n        timeOver.title = small(color(\\\"永久密钥\\\", \\\"red\\\") + color(\\\"(→短时)\\\", \\\"green\\\"));\\n        timeOver.url = getApi(\\\"timeover\\\") + reqByGet;\\n        timeOver.confirm = \\\"确认要以后分享的私藏规则自动到期?\\\";\\n        timeOver.msg = [\\\"已设为过期\\\", \\\"设为过期失败\\\"];\\n    }\\n    data.push(setSettingItem(timeOver));\\n} else if (dataItem.state == 'public') {\\n    data.push({\\n        title: \\\"设为私有\\\",\\n        url: $(getApi(\\\"share\\\") + reqByGet + \\\"&flag=1#noLoading#\\\").lazyRule(() => {\\n            request(input);\\n            refreshPage(false);\\n            return \\\"toast://已设为私有\\\";\\n        }),\\n        col_type: my_col_type\\n    });\\n}\\ndata.push(setSettingItem({\\n    title: \\\"删除数据\\\",\\n    confirm: \\\"是否确认删除\\\",\\n    msg: [\\\"已删除\\\", \\\"删除失败\\\"],\\n    url: getApi(\\\"deleteUrl\\\") + reqByGet,\\n    col_type: my_col_type\\n}, true));\\ndata.push({\\n    title: \\\"设置图标\\\",\\n    url: $(dataItem.pic_url, \\\"输入图标地址\\\").input(api => {\\n        if (input === \\\"\\\") {\\n            return \\\"toast://你在逗我链接哪?\\\"\\n        }\\n        let result = request(api + \\\"&rule_pic=\\\" + input);\\n        result = JSON.parse(result);\\n        if (result.status !== 0) {\\n            return \\\"toast://\\\" + result.detail;\\n        }\\n        return \\\"toast://修改成功\\\";\\n    }, getApi(\\\"set_rule_pic\\\") + dataItem.id + reqByGet),\\n    col_type: my_col_type\\n});\\n\\ndata.push({\\n    title: dataItem.can_discuss ? \\\"禁止评论\\\" : \\\"开启评论\\\",\\n    url: $(api.dis_set + dataItem.id + reqByGet + \\\"&state=\\\" + (dataItem.can_discuss ? \\\"\\\" : 1)).lazyRule((can_discuss) => {\\n        request(input);\\n        refreshPage(false);\\n        return can_discuss ? \\\"toast://已禁止评论\\\" : \\\"toast://已开启评论\\\";\\n    }, dataItem.can_discuss),\\n    col_type: my_col_type\\n});\\nMY_PARAMS.name = dataItem.name;\\ndata.push({\\n    title: \\\"设置备注\\\",\\n    url: \\\"hiker://page/set_rule_notes\\\",\\n    extra: MY_PARAMS,\\n    col_type: my_col_type\\n});\\nif (dataItem.is_json && dataItem.data_type === \\\"home_rule_url\\\" && !dataItem.is_json_list) {\\n    data.push({\\n        title: '进入频道',\\n        url: $( /*\\\"#noLoading#\\\"*/ ).lazyRule((name,home) => {\\n            let ruleList = JSON.parse(request(home));\\n            let hasRule = ruleList.some(item => item.title === name);\\n            if (hasRule) {\\n                putVar(\\\"Warehouse.back\\\", \\\"1\\\");\\n                back();\\n                return home+\\\"s@\\\" + name;\\n            } else {\\n                return \\\"toast://未安装\\\";\\n            }\\n        }, dataItem.name,api.home),\\n        col_type: my_col_type\\n    });\\n}\\ndata.push({\\n    col_type: \\\"line_blank\\\"\\n});\\ndata.push({\\n    title: dataItem.good_num,\\n    pic_url: \\\"hiker://files/icon/赞.svg\\\",\\n    col_type: \\\"icon_small_3\\\",\\n    url: \\\"hiker://empty\\\"\\n});\\ndata.push({\\n    title: dataItem.bad_num,\\n    pic_url: \\\"hiker://files/icon/踩.svg\\\",\\n    col_type: \\\"icon_small_3\\\",\\n    url: \\\"hiker://empty\\\"\\n});\\ndata.push({\\n    title: \\\"评论\\\",\\n    pic_url: \\\"hiker://files/icon/评论.svg\\\",\\n    col_type: \\\"icon_small_3\\\",\\n    url: \\\"hiker://page/Reply#noHistory##noRecordHistory#\\\",\\n    extra: {\\n        ruleId: dataItem.id,\\n        name: dataItem.author,\\n        password: password,\\n        username: username\\n    }\\n});\\nlet totalSum = dataItem.good_num + dataItem.bad_num;\\n\\ndata.push({\\n    title: htmlTag(\\\"big\\\", \\\"评论(\\\" + totalSum + \\\")\\\") + \\\"\\\\t\\\\t\\\\t\\\" + small(htmlTag(\\\"u\\\", \\\"查看全部评论(控评) >\\\")),\\n    col_type: \\\"text_1\\\",\\n    url: \\\"hiker://page/Comment\\\",\\n    extra: {\\n        url: \\\"hiker://empty#fypage#noHistory##noRecordHistory#\\\",\\n        id: dataItem.id,\\n        totalSum: totalSum,\\n        no_active: true,\\n        username: username,\\n        password: password\\n    }\\n});\\n//const longestSum=120;\\nlet icon = {\\n    \\\"good\\\": \\\"👍\\\",\\n    \\\"bad\\\": \\\"👎\\\",\\n    \\\"reply\\\": \\\"开发者🗣\\\"\\n}\\nif (totalSum === 0) {\\n    data.push({\\n        title: \\\"<h5 style='text-align:center'>一条评论也没有，快来抢沙发吧！</h5>\\\",\\n        col_type: \\\"rich_text\\\"\\n    });\\n} else {\\n    let commentList = JSON.parse(request(api.dis_get + dataItem.id + \\\"?limit=5\\\")).result;\\n    for (let item of commentList) {\\n        let Reply = item.discuss_type===\\\"reply\\\"&&item.reply_to_name!==false&&item.reply_to_id!==false?\\\"‘‘回复@\\\"+item.reply_to_name+\\\" #\\\"+item.discuss_id+\\\"’’\\\\n\\\":\\\"\\\";\\n        data.push({\\n            title: item.name + \\\"&nbsp;&nbsp;<font color='gray'><small>#\\\" + item.id + \\\"</small><font>\\\",\\n            col_type: \\\"avatar\\\",\\n            url: \\\"hiker://page/Reply\\\",\\n            extra:{\\n                ruleId: dataItem.id,\\n                name: item.name,\\n                password: password,\\n                username: username,\\n                replyId:item.id\\n            },\\n            pic_url: item.avatar_url\\n        });\\n        data.push({\\n            title: item.discuss_text,\\n            desc: Reply+item.create_date + \\\"·\\\" + icon[item.discuss_type],\\n            col_type: \\\"text_1\\\",\\n            url: \\\"hiker://page/info\\\",\\n            extra: {\\n                name: item.name,\\n                type: \\\"long_text\\\",\\n                text: item.discuss_text\\n            },\\n            pic_url: item.avatar_url\\n        });\\n    }\\n}\\ndata.push({\\n    col_type: \\\"line_blank\\\"\\n});\\nsetResult(data);\"},{\"col_type\":\"icon_2_round\",\"name\":\"规则列表\",\"path\":\"rules\",\"rule\":\"js:\\naddListener('onClose', 'clearVar(\\\"Warehouse.back\\\",\\\"\\\");clearVar(\\\"Warehouse.filter\\\",\\\"\\\");clearVar(\\\"Warehouse.type\\\",\\\"\\\");');\\n\\nif (getVar(\\\"Warehouse.back\\\") === \\\"1\\\") {\\n    back(false);\\n}\\n\\nconst {\\n    getApi,\\n    api,\\n    color,\\n    small,\\n    localRuleVer,\\n    htmlTag\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nconst { mergeSort } = $.require(\\\"hiker://page/sort\\\");\\nlet {\\n    avatarUrl,\\n    qq\\n} = MY_PARAMS;\\nlet dataType = getVar(\\\"Warehouse.type\\\",\\\"\\\");\\nlet backCode = JSON.parse(request(getApi(\\\"rulesUrl\\\") + \\\"?name=\\\" + qq+\\\"&data_type=\\\"+dataType));\\nlet devName = backCode.dev_name;\\nputVar(\\\"Warehouse.filter\\\", devName);\\nlet ruleList = backCode.result;\\nlet subUrl = getApi(\\\"jsonList\\\") + \\\"?name=\\\" + qq;\\nlet hasSub = hasHomeSub(subUrl);\\nlet devInfo = \\\"这个人很懒,什么都没写哦~\\\";\\nlet tmpJson = JSON.parse(request(getApi(\\\"infoGetUrl\\\") + qq));\\nif (tmpJson.status == 0) {\\n    devInfo = tmpJson.result || devInfo;\\n}\\nlet subFlag = hasSub ? '🆗' : '📡';\\nlet data = [];\\n\\ndata.push({\\n    title: \\\"““””\\\" + devName + \\\"\\\\n\\\\n\\\" + small(htmlTag(\\\"u\\\", \\\"点击查看完整公告\\\")),\\n    desc: small(devInfo),\\n    url: 'hiker://page/info',\\n    extra: {\\n        text: devInfo,\\n        name: devName,\\n        type:\\\"rich_text\\\"\\n    },\\n    pic_url: avatarUrl,\\n    col_type: 'movie_1_vertical_pic'\\n});\\ndata.push({\\n    title: \\\"<big>订阅管理</big>&nbsp;&nbsp;<small>(当前\\\" + (hasSub ? \\\"已订阅\\\" : \\\"未订阅\\\") + \\\")</small>\\\",\\n    col_type: \\\"rich_text\\\"\\n});\\n\\nlet sub_code = '海阔视界合集规则订阅￥home_sub￥' + devName + \\\"合集@@\\\" + subUrl;\\nlet rulesCode = '海阔视界合集规则￥home_rule_url￥' + subUrl;\\ndata.push({\\n    title: '““””<span style=\\\"color: #ff7000\\\">一键订阅</span>',\\n    desc: '订阅““””<span style=\\\"color: #5cff2c\\\">' + devName + '</span>的所有单规则，合集需单独订阅',\\n    url: sub_code,\\n    col_type: 'text_3'\\n});\\ndata.push({\\n    title: '““””<span style=\\\"color: #ff7000\\\">导入全部</span>',\\n    url: rulesCode,\\n    col_type: 'text_3'\\n});\\ndata.push({\\n    title: '““””<span style=\\\"color: #ff7000\\\">导入轻合集</span>',\\n    url: $().lazyRule((devName,subUrl)=>{\\n        const {genRule}=$.require(\\\"hiker://page/genApi\\\");\\n    let import_rule=genRule(\\\"轻合集.\\\"+devName,subUrl);\\n    //copy(import_rule);\\n    let ruleCode=parsePaste(import_rule.split(\\\"\\\\n\\\")[0]);\\n    //return \\\"hiker://empty\\\"\\n    importUrl = 'rule://' + base64Encode(ruleCode);\\n    return importUrl\\n    },devName,subUrl),\\n    col_type: 'text_3'\\n});\\ndata.push({\\n    title: \\\"<small>提示：开发者单独分享的合集文件只能单独导入。</small>\\\",\\n    col_type: \\\"rich_text\\\"\\n});\\ndata.push({\\n    title: \\\"<big>规则列表</big>&nbsp;&nbsp;<small>(共\\\" + ruleList.length + \\\"条)</small>\\\",\\n    col_type: \\\"rich_text\\\"\\n});\\nlet dataTypeList = {\\n    \\\"\\\":\\\"全部\\\",\\n    \\\"home_rule_url\\\": '小程序',\\n    //\\\"publish\\\": '提交云仓库规则',\\n    \\\"js_url\\\": '网页插件',\\n    \\\"html\\\": '静态页面',\\n    \\\"config\\\": '主题'\\n};\\nfor(let key in dataTypeList){\\n    data.push({\\n        title:dataType===key?\\\"““\\\"+dataTypeList[key]+\\\"””\\\":dataTypeList[key],\\n        url:$(\\\"#noLoading#\\\").lazyRule((key)=>{\\n            putVar(\\\"Warehouse.type\\\",key);\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n        },key),\\n        col_type:\\\"scroll_button\\\"\\n    });\\n}\\nif (ruleList.length > 20) {\\n    data.push({\\n        title: \\\"搜索\\\",\\n        url: $.toString(name => \\\"hiker://search?s=\\\" + input + \\\"&rule=\\\" + name, MY_RULE.title),\\n        col_type: \\\"input\\\",\\n        desc: \\\"搜索当前开发者的规则\\\"\\n    });\\n}\\nlet homeList = JSON.parse(request(api.home));\\nlet mRuleList = [];\\nfor (var item of ruleList) {\\n    var name = item.name;\\n    if (item.is_tap) {\\n        let location = JSON.parse(request(getApi(\\\"ruleListJson\\\") + \\\"?id=\\\" + item.id));\\n        item.id = location.id;\\n        item.name = location.name;\\n        item.author = location.author;\\n        item.data_type = location.data_type;\\n        item.ver = location.ver\\n    }\\n    item.version = item.ver;\\n    let label = \\\"\\\",\\n        lver = -2;\\n    if (item.is_json && item.data_type === \\\"home_rule_url\\\") {\\n        lver = localRuleVer(homeList, item);\\n        if (lver === -1) {\\n            label = \\\"🆕\\\";\\n        } else if (lver < item.ver) {\\n            label = \\\"🆙\\\";\\n        }\\n    }\\n    mRuleList.push({\\n        title: label + name,\\n        url: \\\"hiker://page/ruleDetail#noHistory##noRecordHistory#\\\",\\n        extra: {\\n            lver: lver,\\n            id: item.id\\n        },\\n        pic_url: item.pic,\\n    });\\n}\\n/* 归并排序 Start */\\nmRuleList = mergeSort(mRuleList);\\n/* 归并排序 End */\\ndata.push.apply(data, mRuleList) \\nsetResult(data);\\n\"},{\"col_type\":\"movie_3\",\"name\":\"规则详细-user\",\"path\":\"ruleDetail\",\"rule\":\"js:\\nconst {\\n    getApi,\\n    color,\\n    small,\\n    htmlTag,\\n    api\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    id,\\n    lver\\n} = MY_PARAMS;\\nlet dataItem = JSON.parse(request(getApi(\\\"getbyid\\\") + \\\"?id=\\\" + id)).result;\\nsetPageTitle(\\\"「\\\" + dataItem.name + \\\"」\\\")\\nlet ruleListJson = getApi(\\\"ruleListJson\\\") + \\\"?id=\\\";\\nlet data = [];\\nvar hasSub = false;\\n\\nif (dataItem.is_json_list) {\\n    hasSub = hasHomeSub(ruleListJson + dataItem.id);\\n} else if (!dataItem.is_json_list && dataItem.data_type == 'home_rule_url') {\\n    hasSub = hasHomeSub(ruleListJson + dataItem.id + '&debug=true');\\n}\\n\\ndata.push({\\n    title: htmlTag(\\\"big\\\", \\\"版本\\\"),\\n    desc: \\\"““””开发者：\\\" + color(dataItem.author, \\\"#228BE6\\\") + \\\"\\\\n云端版本：\\\" + color(dataItem.ver, \\\"#5cff2c\\\") + \\\"\\\\t\\\\t本地版本：\\\" + color(lver, \\\"#5cff2c\\\") + \\\"\\\\n更新于: [\\\" + color(dataItem.last_update, \\\"#ff7000\\\") + \\\"]\\\",\\n    url: $(\\\"<开发者>\\\\n\\\" + dataItem.author + \\\"\\\\n<名称>\\\\n\\\" + dataItem.name + \\\"\\\\n<云端版本>\\\\n\\\" + dataItem.ver + \\\"\\\\n<本地版本>\\\\n\\\" + lver + \\\"\\\\n<更新时间>\\\\n[\\\" + dataItem.last_update + \\\"]\\\").confirm(() => {}),\\n    col_type: 'text_1'\\n});\\nlet dataType = {\\n    home_rule_url: '首页云规则',\\n    publish: '提交云仓库规则',\\n    js_url: '网页插件规则',\\n    html: '静态页面',\\n    config: '主页配置'\\n};\\n\\nlet basic = {\\n    col_type: \\\"text_1\\\",\\n    url: \\\"hiker://empty\\\"\\n};\\nlet dataTypeTips = dataType[dataItem.data_type] || '未知规则：' + dataItem.data_type;\\n\\nlet safe_tip=dataItem.is_safe?\\\"安全\\\":\\\"危险\\\";\\nlet not_safe_note=dataItem.not_safe_note;\\nbasic.title = htmlTag(\\\"big\\\", \\\"类型\\\") + \\\"\\\\t\\\\t\\\\t\\\" + small(\\\"(id:\\\" + dataItem.id + \\\")\\\")+\\\"\\\\t\\\\t\\\\t\\\" + small(\\\"(风险检测:\\\" +safe_tip+\\\")\\\");\\nbasic.desc = \\\"数据类型：\\\" + color(dataTypeTips, \\\"#cb54ff\\\") + \\\"\\\\n分享状态为：\\\" + dataItem.state;\\nif ([\\\"html\\\", \\\"config\\\", \\\"js_url\\\"].includes(dataItem.data_type)) {\\n    basic.desc += \\\"\\\\n““”” =>\\\" + small(\\\"点此预览\\\");\\n    basic.url = ruleListJson + dataItem.id;\\n}\\n\\ndata.push(basic);\\nlet hasSubs = \\\"\\\";\\nif (hasSub) {\\n    hasSubs = \\\"\\\\t\\\\t\\\\t\\\" + small(\\\"已订阅\\\")\\n}\\n\\nlet notes = request(getApi(\\\"get_rule_note\\\") + id);\\nnotes = JSON.parse(notes).result;\\n\\nif (notes !== false) {\\n    data.push({\\n        title: htmlTag(\\\"big\\\", \\\"备注\\\") + \\\"\\\\t\\\\t\\\\t\\\" + small(htmlTag(\\\"u\\\", \\\"查看完整公告 >\\\")),\\n        desc: notes,\\n        col_type: \\\"text_1\\\",\\n        url: \\\"hiker://page/info\\\",\\n        extra: {\\n            text: notes,\\n            name: dataItem.name,\\n            type: \\\"long_text\\\"\\n        }\\n    });\\n}\\ndata.push({\\n    title: htmlTag(\\\"big\\\", \\\"操作\\\") + hasSubs,\\n    col_type: \\\"text_1\\\",\\n    url: \\\"toast://你才是最帅的那个人！\\\"\\n});\\nlet importUrl, ruleCode, shareUrl, backCode = \\\"\\\";\\nif (!dataItem.is_json) {\\n    backCode = request(ruleListJson + dataItem.id);\\n}\\nswitch (dataItem.data_type) {\\n    case \\\"home_rule_url\\\":\\n        ruleCode = \\\"海阔视界首页频道规则【\\\" + dataItem.name + \\\"】￥home_rule_url￥\\\" + ruleListJson + dataItem.id;\\n        importUrl = \\\"rule://\\\" + base64Encode(ruleCode)\\n        break;\\n    case 'publish':\\n        ruleCode = '海阔视界规则分享，当前分享的是：' + dataItem.name + '￥publish￥' + base64Encode(backCode);\\n        importUrl = 'rule://' + base64Encode(ruleCode);\\n        break;\\n    case 'js_url':\\n        ruleCode = '海阔视界规则分享，当前分享的是：网页插件￥js_url￥' + dataItem.name + '@base64://' + base64Encode(backCode);\\n        importUrl = 'rule://' + base64Encode(ruleCode);\\n        break;\\n    case 'html':\\n        let file_tmp = dataItem.name.split('.');\\n        let file_path = file_tmp.length > 1 ? file_tmp[file_tmp.length - 1] + \\\"/\\\" + dataItem.name : dataItem.name;\\n        ruleCode = \\\"海阔视界本地文件分享￥file_url￥hiker://files/rules/dzHouse/\\\" + file_path + \\\"@\\\" + ruleListJson + dataItem.id;\\n        importUrl = 'rule://' + base64Encode(ruleCode);\\n        break\\n    case \\\"config\\\":\\n        importUrl = $().rule(password => {\\n            eval(fetch(\\\"hiker://assets/home.js\\\"));\\n            HikerHome.load(\\\"import\\\", password);\\n        }, backCode);\\n        break;\\n}\\nlet my_col_type = \\\"text_2\\\";\\nif (importUrl) {\\n    data.push({\\n        title: \\\"导入规则\\\",\\n        url: importUrl,\\n        col_type: my_col_type\\n    });\\n}\\nif (ruleCode) {\\n    data.push({\\n        title: \\\"分享口令\\\",\\n        url: \\\"copy://\\\" + ruleCode,\\n        col_type: my_col_type\\n    });\\n}\\n\\nif (importUrl) {\\n    if (dataItem.is_json_list && !hasSub) {\\n        let sub_rule_code = '海阔视界合集规则订阅￥home_sub￥' + dataItem.name + \\\"@@\\\" + ruleListJson + dataItem.id;\\n        let sub_url = 'rule://' + base64Encode(sub_rule_code);\\n        data.push({\\n            title: '订阅合集',\\n            url: sub_url,\\n            col_type: my_col_type\\n        });\\n        data.push({\\n    title: '““””<span style=\\\"color: #ff7000\\\">导入轻合集</span>',\\n    url: $().lazyRule((dataItem,subUrl)=>{\\n        const {genRule}=$.require(\\\"hiker://page/genApi\\\");\\n    let import_rule=genRule(dataItem.name+\\\".\\\"+dataItem.author,subUrl);\\n    //copy(import_rule);\\n    let ruleCode=parsePaste(import_rule.split(\\\"\\\\n\\\")[0]);\\n    //return \\\"hiker://empty\\\"\\n    importUrl = 'rule://' + base64Encode(ruleCode);\\n    return importUrl\\n    },dataItem,ruleListJson + dataItem.id),\\n    col_type: my_col_type\\n});\\ndata.push({\\n    title: \\\"<small>提示：开发者单独分享的合集文件只能单独导入。</small>\\\",\\n    col_type: \\\"rich_text\\\"\\n});\\n    } else if (!dataItem.is_json_list && !hasSub && dataItem.data_type == 'home_rule_url') {\\n        let sub_rule_code = '海阔视界单规则订阅￥home_sub￥' + dataItem.name + \\\"@@\\\" + ruleListJson + dataItem.id + '&debug=true';\\n        let sub_url = 'rule://' + base64Encode(sub_rule_code);\\n        data.push({\\n            title: '订阅规则',\\n            url: sub_url,\\n            col_type: my_col_type\\n        })\\n    }\\n}\\nif (dataItem.is_json && dataItem.data_type === \\\"home_rule_url\\\" && !dataItem.is_json_list) {\\n    data.push({\\n        title: '进入频道',\\n        url: $( /*\\\"#noLoading#\\\"*/ ).lazyRule((name,home) => {\\n            let ruleList = JSON.parse(request(home));\\n            let hasRule = ruleList.some(item => item.title === name);\\n            if (hasRule) {\\n                putVar(\\\"Warehouse.back\\\", \\\"1\\\");\\n                back();\\n                return home+\\\"s@\\\" + name;\\n            } else {\\n                return \\\"toast://未安装\\\";\\n            }\\n        }, dataItem.name,api.home),\\n        col_type: my_col_type\\n    })\\n}\\ndata.push({\\n    col_type: \\\"line_blank\\\"\\n});\\ndata.push({\\n    title: dataItem.good_num,\\n    pic_url: \\\"hiker://files/icon/赞.svg\\\",\\n    col_type: \\\"icon_small_3\\\",\\n    url: \\\"hiker://page/MakeAcomment#noHistory##noRecordHistory#\\\",\\n    extra: {\\n        id: dataItem.id,\\n        name: dataItem.name\\n    }\\n});\\ndata.push({\\n    title: dataItem.bad_num,\\n    pic_url: \\\"hiker://files/icon/踩.svg\\\",\\n    col_type: \\\"icon_small_3\\\",\\n    url: \\\"hiker://page/MakeAcomment#noHistory##noRecordHistory#\\\",\\n    extra: {\\n        id: dataItem.id,\\n        name: dataItem.name,\\n        defaultType:\\\"bad\\\"\\n    }\\n});\\ndata.push({\\n    title: \\\"评论\\\",\\n    pic_url: \\\"hiker://files/icon/评论.svg\\\",\\n    col_type: \\\"icon_small_3\\\",\\n    url: \\\"hiker://page/MakeAcomment#noHistory##noRecordHistory#\\\",\\n    extra: {\\n        id: dataItem.id,\\n        name: dataItem.name\\n    }\\n});\\nlet totalSum = dataItem.good_num + dataItem.bad_num;\\n\\ndata.push({\\n    title: htmlTag(\\\"big\\\", \\\"评论(\\\" + totalSum + \\\")\\\") + \\\"\\\\t\\\\t\\\\t\\\" + small(htmlTag(\\\"u\\\", \\\"查看全部评论 >\\\")),\\n    col_type: \\\"text_1\\\",\\n    url: \\\"hiker://page/Comment\\\",\\n    extra: {\\n        url: \\\"hiker://empty#fypage#noHistory##noRecordHistory#\\\",\\n        id: dataItem.id,\\n        totalSum: totalSum,\\n        no_active: false\\n    }\\n});\\n//const longestSum=120;\\nlet icon = {\\n    \\\"good\\\": \\\"👍\\\",\\n    \\\"bad\\\": \\\"👎\\\",\\n    \\\"reply\\\":\\\"开发者🗣\\\"\\n}\\nif (totalSum === 0) {\\n    data.push({\\n        title: \\\"<h5 style='text-align:center'>一条评论也没有，快来抢沙发吧！</h5>\\\",\\n        col_type: \\\"rich_text\\\"\\n    });\\n} else {\\n    let commentList = JSON.parse(request(api.dis_get + dataItem.id + \\\"?limit=5\\\")).result;\\n    for (let item of commentList) {\\n        let Reply = item.discuss_type===\\\"reply\\\"&&item.reply_to_name!==false&&item.reply_to_id!==false?\\\"‘‘回复@\\\"+item.reply_to_name+\\\" #\\\"+item.discuss_id+\\\"’’\\\\n\\\":\\\"\\\";\\n        data.push({\\n            title: item.name + \\\"&nbsp;&nbsp;<font color='gray'><small>#\\\" + item.id + \\\"</small><font>\\\",\\n            col_type: \\\"avatar\\\",\\n            url: \\\"toast://\\\" + item.qq,\\n            pic_url: item.avatar_url\\n        });\\n        data.push({\\n            title: item.discuss_text,\\n            desc: Reply+item.create_date + \\\"·\\\" + icon[item.discuss_type],\\n            col_type: \\\"text_1\\\",\\n            url: \\\"hiker://page/info\\\",\\n            extra:{\\n                name:item.name,\\n                type:\\\"long_text\\\",\\n                text:item.discuss_text\\n            },\\n            pic_url: item.avatar_url\\n        });\\n    }\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n}\\n\\nsetResult(data);\"},{\"col_type\":\"rich_text\",\"name\":\"查看\",\"path\":\"info\",\"rule\":\"js:\\nsetPageTitle(\\\"查看「\\\"+MY_PARAMS.name+\\\"」\\\")\\nsetResult([{\\n    title: MY_PARAMS.text,\\n    col_type:MY_PARAMS.type\\n}]);\"},{\"col_type\":\"movie_3\",\"name\":\"开发者注册\",\"path\":\"Register\",\"rule\":\"js:\\nsetPageTitle(\\\"开发者注册\\\");\\nconst {\\n    getApi,\\n    htmlTag,\\n    mapColType,\\n    small\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nvar data = [];\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"Warehouse.Password\\\");\\n    clearVar(\\\"Warehouse.Username\\\");\\n    clearVar(\\\"Warehouse.Description\\\");\\n    clearVar(\\\"Warehouse.UserAddress\\\");\\n}));\\naddListener('onRefresh', $.toString(()=>{\\n    putVar(\\\"Warehouse.Wait\\\", \\\"\\\");\\n}));\\ndata.push({\\n    title: '账号',\\n    desc: \\\"请输入账号(必填)\\\",\\n    col_type: 'input',\\n    extra: {\\n        defaultValue: getVar('Warehouse.Username', ''),\\n        type: \\\"number\\\",\\n        onChange: 'putVar(\\\"Warehouse.Username\\\",input)'\\n    }\\n}, {\\n    title: '密码',\\n    desc: \\\"请输入密码(必填)\\\",\\n    col_type: 'input',\\n    extra: {\\n        defaultValue: getVar('Warehouse.Password', ''),\\n        type: \\\"password\\\",\\n        onChange: 'putVar(\\\"Warehouse.Password\\\",input)'\\n    }\\n});\\nmapColType(data, \\\"line_blank\\\", 1);\\ndata.push({\\n    title: '昵称',\\n    desc: \\\"请输入昵称(必填)\\\",\\n    col_type: 'input',\\n    extra: {\\n        defaultValue: getVar('Warehouse.UserAddress', ''),\\n        onChange: 'putVar(\\\"Warehouse.UserAddress\\\",input)'\\n    }\\n}, {\\n    title: '描述',\\n    desc: \\\"说说为什么要注册吧\\\\n(可以增加通过概率,选填)\\\",\\n    col_type: 'input',\\n    extra: {\\n        defaultValue: getVar('Warehouse.Description', ''),\\n        type: \\\"textarea\\\",\\n        onChange: 'putVar(\\\"Warehouse.Description\\\",input)'\\n    }\\n})\\n\\nmapColType(data, \\\"line_blank\\\", 1);\\n\\ndata.push({\\n    title: htmlTag(\\\"b\\\", \\\"注册\\\"),\\n    url: $(getApi(\\\"new_dev\\\")+\\\"#noLoading#\\\").lazyRule((getId, confirm) => {\\n        let username = getVar('Warehouse.Username', \\\"\\\"),\\n            password = getVar('Warehouse.Password', \\\"\\\"),\\n            description = getVar('Warehouse.Description', \\\"\\\"),\\n            name = getVar(\\\"Warehouse.UserAddress\\\", \\\"\\\");\\n        if ([username, password, name].includes(\\\"\\\")) {\\n            return \\\"toast://账号,密码和昵称不能为空\\\";\\n        }\\n        showLoading(\\\"正在提交申请表\\\");\\n        let result = request(input, {\\n            headers: {\\n                'content-type': 'application/json'\\n            },\\n            body: JSON.stringify({\\n                \\\"params\\\": {\\n                    \\\"reason\\\": description,\\n                    \\\"name\\\": name,\\n                    \\\"password\\\": password,\\n                    \\\"qq\\\": username\\n                }\\n            }),\\n            method: 'post'\\n        });\\n        result = JSON.parse(result).result;\\n        hideLoading();\\n        if (result.status !== 0) {\\n            return \\\"toast://\\\" + result.detail;\\n        }\\n        let idresult = JSON.parse(request(getId + \\\"?qq=\\\" + username));\\n        if (idresult.status !== 0) {\\n            return \\\"toast://\\\" + idresult.detail;\\n        }\\n        \\n        return $(\\\"\\\", \\\"输入邮箱验证码\\\\n\\\" + result.detail).input((confirm, id, account) => {\\n            showLoading(\\\"请耐心等待\\\");\\n            try {\\n                let result = request(confirm, {\\n                    headers: {\\n                        'content-type': 'application/json'\\n                    },\\n                    body: JSON.stringify({\\n                        \\\"params\\\": {\\n                            \\\"regist_id\\\": id,\\n                            \\\"yzm\\\": input\\n                        }\\n                    }),\\n                    method: 'POST'\\n                });\\n                result = JSON.parse(result).result;\\n                if (result.status !== 0) {\\n                    hideLoading();\\n                    return \\\"toast://\\\" + result.detail;\\n                } else {\\n                    putVar(\\\"WarehouseUsername\\\", account[0]);\\n                    putVar(\\\"WarehousePassword\\\", account[1]);\\n                    hideLoading();\\n                    back();\\n                    return \\\"toast://成功提交注册注册\\\\n\\\"+result.detail;\\n                }\\n            } catch (e) {\\n                hideLoading();\\n                return \\\"toast://出错了呐\\\";\\n            }\\n        }, confirm, idresult.result, [username, password]);\\n    }, getApi(\\\"new_getId\\\"), getApi(\\\"new_confirm\\\")),\\n    col_type: 'text_center_1'\\n});\\nsetResult(data);\"},{\"col_type\":\"text_1\",\"name\":\"个人资料\",\"path\":\"PersonalData\",\"rule\":\"js:\\nsetPageTitle(\\\"个人资料\\\");\\nvar data=[];\\nconst {\\n    getApi,\\n    getFile,\\n    api\\n} = $.require(\\\"hiker://page/utiliy\\\");\\n\\ndata.push({\\n    col_type:\\\"line_blank\\\"\\n});\\n\\nlet {username,password} = getFile();\\nlet dev = JSON.parse(request(getApi(\\\"user\\\")+MY_PARAMS.id)).result;\\ndata.push({\\n    title:\\\"头像\\\",\\n    desc:dev.avatar,\\n    url:\\\"hiker://page/modify_PersonalData#noHistory##noRecordHistory#\\\",\\n    extra:{\\n        dev:dev,\\n        username:username,\\n        password:password,\\n        Pattern:0\\n    },\\n    col_type:\\\"text_1\\\"\\n});\\n\\n\\ndata.push({\\n    title:\\\"昵称\\\",\\n    desc:dev.name,\\n    url:\\\"hiker://page/modify_PersonalData#noHistory##noRecordHistory#\\\",\\n    extra:{\\n        dev:dev,\\n        username:username,\\n        password:password,\\n        Pattern:1\\n    },\\n    col_type:\\\"text_1\\\"\\n});\\n\\ndata.push({\\n    title:\\\"密码\\\",\\n    url:\\\"hiker://page/modify_PersonalData#noHistory##noRecordHistory#\\\",\\n    extra:{\\n        dev:dev,\\n        username:username,\\n        password:password,\\n        Pattern:2\\n    },\\n    col_type:\\\"text_1\\\"\\n});\\ndata.push({\\n    col_type:\\\"line_blank\\\"\\n});\\ndata.push({\\n    title:\\\"账号：\\\"+username,\\n    url:\\\"copy://\\\"+username,\\n    col_type:\\\"text_1\\\"\\n});\\ndata.push({\\n    title:\\\"UID：\\\"+dev.id,\\n    url:\\\"copy://\\\"+dev.id,\\n    col_type:\\\"text_1\\\"\\n});\\ndata.push({\\n    col_type:\\\"line_blank\\\"\\n});\\ndata.push({\\n    title:\\\"提交云仓库规则\\\",\\n    url:$(\\\"#noLoading#\\\").lazyRule((host)=>{\\n        let code=request(host+\\\"/hikerule/rulelist.json?id=145\\\");\\n        let word=\\\"￥publish￥\\\"+base64Encode(code);\\n        return \\\"rule://\\\"+base64Encode(word);\\n    },api.host),\\n    col_type:\\\"text_1\\\"\\n});\\ndata.push({\\n    title:\\\"同步提交云仓库账号密码\\\",\\n    url:\\\"rule://\\\"+base64Encode(\\\"￥publish_account￥\\\"+username+\\\"@\\\"+password),\\n    col_type:\\\"text_1\\\"\\n});\\ndata.push({\\n    col_type:\\\"line_blank\\\"\\n});\\ndata.push({\\n    title:\\\"你一共发布了「\\\"+dev.rule_num+\\\"」条规则\\\",\\n    url:\\\"hiker://empty\\\",\\n    col_type:\\\"text_1\\\"\\n});\\ndata.push({\\n    col_type:\\\"line_blank\\\"\\n});\\nlet user = getFile();\\ndata.push({\\n    title:\\\"注销登录\\\",\\n    url:$(\\\"确认注销登录?\\\").confirm(f => {\\n        f.username=\\\"\\\";\\n        f.password=\\\"\\\";\\n        writeFile('hiker://files/WarehouseUSER.json', JSON.stringify(f));\\n        putVar(\\\"Warehouse.back\\\",\\\"1\\\");\\n        back();\\n        return \\\"toast://已注销\\\";\\n    },user),\\n    col_type:\\\"text_center_1\\\"\\n});\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"更改个人资料\",\"path\":\"modify_PersonalData\",\"rule\":\"js:\\nconst {\\n    getApi,\\n    color,\\n    small,\\n    getFile,\\n    htmlTag\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    dev,\\n    username,\\n    password,\\n    Pattern\\n} = MY_PARAMS;\\nvar data = [];\\nlet path = \\\"?qq=\\\" + username + \\\"&password=\\\" + password;\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"Warehouse.m.petName\\\");\\n    clearVar(\\\"Warehouse.m.avatar\\\");\\n    clearVar(\\\"Warehouse.m.Password.c\\\");\\n    clearVar(\\\"Warehouse.m.Password.x\\\");\\n    clearVar(\\\"Warehouse.m.Password.y\\\");\\n}));\\nfunction m_petName() {\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    data.push({\\n        col_type: 'input',\\n        desc: \\\"请输入新昵称\\\",\\n        extra: {\\n            titleVisible: false,\\n            defaultValue: getVar('Warehouse.m.petName', '')||dev.name,\\n            onChange: 'putVar(\\\"Warehouse.m.petName\\\",input)'\\n        }\\n    });\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    data.push({\\n        title: \\\"保存\\\",\\n        url: $(getApi(\\\"modify_name\\\") + path).lazyRule(() => {\\n            let newPetName = getVar('Warehouse.m.petName', '');\\n            if (newPetName == \\\"\\\") {\\n                return \\\"toast://你还什么都没填啊!\\\";\\n            }\\n            let result = request(input + \\\"&name=\\\" + encodeURIComponent(newPetName));\\n            result = JSON.parse(result);\\n            if (result.status === 0) {\\n                back();\\n                return \\\"toast://修改成功\\\";\\n            } else {\\n                return \\\"toast://\\\" + result.detail;\\n            }\\n        }),\\n        col_type: 'text_center_1'\\n    });\\n}\\n\\nfunction m_avatar() {\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    data.push({\\n        col_type: 'input',\\n        desc: \\\"请输入新的头像链接\\\",\\n        extra: {\\n            titleVisible: false,\\n            defaultValue: getVar('Warehouse.m.avatar', '') || dev.avatar,\\n            onChange: 'putVar(\\\"Warehouse.m.avatar\\\",input)'\\n        }\\n    });\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    data.push({\\n        title: \\\"保存\\\",\\n        url: $(getApi(\\\"modify_ava\\\") + path).lazyRule(() => {\\n            let newAvatar = getVar('Warehouse.m.avatar', '');\\n            \\n            let result = request(input + \\\"&avatar_url=\\\" + encodeURIComponent(newAvatar));\\n            result = JSON.parse(result);\\n            if (result.status === 0) {\\n                back();\\n                return \\\"toast://修改成功\\\";\\n            } else {\\n                return \\\"toast://\\\" + result.detail;\\n            }\\n        }),\\n        col_type: 'text_center_1'\\n    });\\n}\\n\\nfunction m_pwd() {\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    data.push({\\n        title:\\\"原密码\\\",\\n        col_type: 'input',\\n        desc: \\\"请输入原密码\\\",\\n        extra: {\\n            type:\\\"password\\\",\\n            defaultValue: getVar('Warehouse.m.Password.y', ''),\\n            onChange: 'putVar(\\\"Warehouse.m.Password.y\\\",input)'\\n        }\\n    });\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    data.push({\\n        title:\\\"新密码\\\",\\n        col_type: 'input',\\n        desc: \\\"请输入新密码\\\",\\n        extra: {\\n            type:\\\"password\\\",\\n            defaultValue: getVar('Warehouse.m.Password.x', ''),\\n            onChange: 'putVar(\\\"Warehouse.m.Password.x\\\",input)'\\n        }\\n    });\\n    data.push({\\n        title:\\\"重复新密码\\\",\\n        col_type: 'input',\\n        desc: \\\"请重复新密码\\\",\\n        extra: {\\n            type:\\\"password\\\",\\n            titleVisible: false,\\n            defaultValue: getVar('Warehouse.m.Password.c', ''),\\n            onChange: 'putVar(\\\"Warehouse.m.Password.c\\\",input)'\\n        }\\n    });\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    data.push({\\n        title: \\\"保存\\\",\\n        url: $(getApi(\\\"modify_pwd\\\")+path).lazyRule((password,username) => {\\n            let old_password = getVar('Warehouse.m.Password.y', '');\\n            let new_password = getVar('Warehouse.m.Password.x', '');\\n            let new_password_again = getVar('Warehouse.m.Password.c', '');\\n            if (old_password!==password) {\\n                return \\\"toast://原密码错误\\\";\\n            }\\n            if(new_password===\\\"\\\"){\\n                return \\\"toast://请输入新密码\\\";\\n            }\\n            if(new_password!==new_password_again){\\n                return \\\"toast://两次密码不同\\\"\\n            }\\n            let result = request(input + \\\"&new_password=\\\" + new_password+\\\"&new_password_re=\\\"+new_password_again);\\n            result = JSON.parse(result);\\n            if (result.status === 0) {\\n                writeFile(\\\"hiker://files/WarehouseUSER.json\\\",JSON.stringify({\\n                    username:username,\\n                    password:new_password\\n                }));\\n                back();\\n                return \\\"toast://修改成功\\\";\\n            } else {\\n                return \\\"toast://\\\" + result.detail;\\n            }\\n        },password,username),\\n        col_type: 'text_center_1'\\n    });\\n}\\n\\nswitch (Pattern) {\\n    case 0:\\n        setPageTitle(\\\"修改头像\\\");\\n        m_avatar();\\n        break;\\n    case 1:\\n        setPageTitle(\\\"修改昵称\\\");\\n        m_petName();\\n        break;\\n    case 2:\\n        setPageTitle(\\\"修改密码\\\");\\n        m_pwd();\\n        break;\\n}\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"编辑规则备注\",\"path\":\"set_rule_notes\",\"rule\":\"js:\\nlet data = [];\\nconst {\\n    getApi\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    id,\\n    username,\\n    password,\\n    name\\n} = MY_PARAMS;\\nsetPageTitle(\\\"备注「\\\"+name+\\\"」\\\");\\naddListener('onClose',\\\"clearVar('Warehouse.rule.notes', '')\\\");\\nlet notes=request(getApi(\\\"get_rule_note\\\")+id);\\nnotes=JSON.parse(notes).result;\\ndata.push({\\n    desc: \\\"规则备注......\\\",\\n    col_type: 'input',\\n    extra: {\\n        titleVisible: false,\\n        defaultValue: getVar('Warehouse.rule.notes', '')||notes||\\\"\\\",\\n        type: \\\"textarea\\\",\\n        height:-1,\\n        onChange: 'putVar(\\\"Warehouse.rule.notes\\\",input)'\\n    }\\n});\\n\\ndata.push({\\n    title: \\\"保存\\\",\\n    col_type: \\\"text_center_1\\\",\\n    url: $(getApi(\\\"set_rule_note\\\") + id).lazyRule((username, password) => {\\n        let notes = getVar('Warehouse.rule.notes', '');\\n        let result = request(input, {\\n            headers: {\\n                'content-type': 'application/json'\\n            },\\n            body: JSON.stringify({\\n                \\\"params\\\": {\\n                    \\\"qq\\\": username,\\n                    \\\"password\\\": password,\\n                    \\\"note\\\":notes\\n                }\\n            }),\\n            method: 'POST'\\n        });\\n        result = JSON.parse(result).result;\\n        if (result.status !== 0) {\\n            return \\\"toast://\\\" + result.detail;\\n        }\\n        back(false);\\n        return \\\"toast://修改成功\\\";\\n    }, username, password)\\n});\\nsetResult(data);\"},{\"col_type\":\"line\",\"name\":\"评论列表\",\"path\":\"Comment\",\"rule\":\"js:\\nsetPageTitle(\\\"评论列表\\\");\\nconst {\\n    api\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet data = [];\\nlet {\\n    totalSum,\\n    id,\\n    no_active,\\n    username,\\n    password\\n} = MY_PARAMS;\\nlet page = parseInt(MY_URL.split(\\\"#\\\")[1]);\\nlet discuss_type = getVar(\\\"Warehouse.comment.discuss_type\\\", \\\"\\\");\\nif (page === 1) {\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    addListener('onClose', $.toString(() => {\\n        putVar(\\\"Warehouse.comment.discuss_type\\\", \\\"\\\");\\n    }));\\n    data.push({\\n        title: \\\"全部\\\" + (discuss_type === \\\"\\\" ? \\\"◉\\\" : \\\"○\\\"),\\n        url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n            putVar(\\\"Warehouse.comment.discuss_type\\\", \\\"\\\");\\n            refreshPage();\\n            return \\\"hiker://empty\\\";\\n        }),\\n        col_type: 'text_4'\\n\\n    });\\n    data.push({\\n        title: \\\"👍赞\\\" + (discuss_type === \\\"good\\\" ? \\\"◉\\\" : \\\"○\\\"),\\n        url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n            putVar(\\\"Warehouse.comment.discuss_type\\\", \\\"good\\\");\\n            refreshPage();\\n            return \\\"hiker://empty\\\";\\n        }),\\n        col_type: 'text_4'\\n\\n    });\\n    data.push({\\n        title: \\\"👎踩\\\" + (discuss_type === \\\"bad\\\" ? \\\"◉\\\" : \\\"○\\\"),\\n        url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n            putVar(\\\"Warehouse.comment.discuss_type\\\", \\\"bad\\\");\\n            refreshPage();\\n            return \\\"hiker://empty\\\";\\n        }),\\n        col_type: 'text_4'\\n    });\\n    data.push({\\n        title: \\\"回复\\\" + (discuss_type === \\\"reply\\\" ? \\\"◉\\\" : \\\"○\\\"),\\n        url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n            putVar(\\\"Warehouse.comment.discuss_type\\\", \\\"reply\\\");\\n            refreshPage();\\n            return \\\"hiker://empty\\\";\\n        }),\\n        col_type: 'text_4'\\n    });\\n}\\n\\n\\nlet icon = {\\n    \\\"good\\\": \\\"👍\\\",\\n    \\\"bad\\\": \\\"👎\\\",\\n    \\\"reply\\\":\\\"开发者🗣\\\"\\n}\\nlet control=(pid,active)=>void 0;\\nif(no_active){\\n    control=function(pid,active){\\n        data.push({\\n            title:active?\\\"隐藏评论\\\":\\\"展示评论\\\",\\n            url:$(api.dis_dev_control+pid+\\\"?qq=\\\" + username + \\\"&password=\\\" + password+\\\"#noLoading#\\\").lazyRule(()=>{\\n                let result=JSON.parse(request(input));\\n                refreshPage(false)\\n                return \\\"toast://\\\"+result.detail;\\n            }),\\n            col_type:\\\"text_2\\\"\\n        });\\n        data.push({\\n            title:\\\"删除评论\\\",\\n            url:$(\\\"确认删除该评论?\\\").confirm((input)=>{\\n                let result=JSON.parse(request(input));\\n                refreshPage(false)\\n                return \\\"toast://\\\"+result.detail;\\n            },api.dis_dev_control+pid+\\\"?qq=\\\" + username + \\\"&password=\\\" + password+\\\"&delete=1\\\"),\\n            col_type:\\\"text_2\\\"\\n        });\\n        data.push({\\n            col_type:\\\"line\\\"\\n        });\\n        data.push({\\n            col_type:\\\"line\\\"\\n        });\\n    }\\n}\\nif (totalSum === 0) {\\n    data.push({\\n        title: \\\"<h5 style='text-align:center'>一条评论也没有，快来抢沙发吧！</h5>\\\",\\n        col_type: \\\"rich_text\\\"\\n    });\\n} else {\\n    let commentList = JSON.parse(request(api.dis_get + id + \\\"?limit=5&page=\\\" + page + \\\"&no_active=\\\" + no_active + \\\"&discuss_type=\\\" + discuss_type)).result;\\n    for (let item of commentList) {\\n        let Reply = item.discuss_type===\\\"reply\\\"&&item.reply_to_name!==false&&item.reply_to_id!==false?\\\"‘‘回复@\\\"+item.reply_to_name+\\\" #\\\"+item.discuss_id+\\\"’’\\\\n\\\":\\\"\\\";\\n        data.push({\\n            title: item.name + \\\"&nbsp;&nbsp;<font color='gray'><small>#\\\" + item.id + \\\"</small><font>\\\",\\n            col_type: \\\"avatar\\\",\\n            url: no_active?\\\"hiker://page/Reply\\\":\\\"toast://\\\" + item.qq,\\n            extra:{\\n                ruleId: id,\\n                name: item.name,\\n                password: password,\\n                username: username,\\n                replyId:item.id\\n            },\\n            pic_url: item.avatar_url\\n        });\\n        data.push({\\n            title: item.discuss_text,\\n            desc: Reply+item.create_date + \\\"·\\\" + icon[item.discuss_type],\\n            col_type: \\\"text_1\\\",\\n            url: \\\"hiker://page/info\\\",\\n            extra:{\\n                name:item.name,\\n                type:\\\"long_text\\\",\\n                text:item.discuss_text\\n            },\\n            pic_url: item.avatar_url\\n        });\\n        control(item.id,item.active);\\n    }\\n    if (commentList.length === 0) {\\n        data.push({\\n            col_type: \\\"line_blank\\\"\\n        });\\n    }\\n}\\n\\nsetResult(data)\"},{\"col_type\":\"movie_3\",\"name\":\"发表评论\",\"path\":\"MakeAcomment\",\"rule\":\"js:\\nlet data = [];\\nconst {\\n    api,\\n    getFile\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    id,\\n    name,\\n    defaultType\\n} = MY_PARAMS;\\nlet user=getFile().user||[\\\"\\\",\\\"\\\"];\\n\\nsetPageTitle(\\\"评论(\\\" + name + \\\")\\\");\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"Warehouse.comment.type\\\");\\n    clearVar(\\\"Warehouse.comment.text\\\");\\n    clearVar(\\\"Warehouse.comment.qq\\\");\\n    refreshPage(false);\\n}));\\nlet type = getVar(\\\"Warehouse.comment.type\\\") || defaultType||\\\"good\\\";\\ndata.push({\\n    desc: \\\"评论......\\\",\\n    col_type: 'input',\\n    extra: {\\n        titleVisible: false,\\n        defaultValue: getVar('Warehouse.comment.text', ''),\\n        type: \\\"textarea\\\",\\n        height:7,\\n        onChange: 'putVar(\\\"Warehouse.comment.text\\\",input)'\\n    }\\n});\\ndata.push({\\n    title:\\\"账号：\\\"+(user[0]||\\\"\\\"),\\n    desc:\\\"验证码：\\\"+(user[1]||\\\"\\\"),\\n    url:\\\"hiker://page/Userregistration\\\",\\n    col_type: 'text_1',\\n    \\n});\\n\\ndata.push({\\n    title:  (type === \\\"good\\\" ? \\\"◉\\\" : \\\"○\\\")+\\\" 👍\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n        putVar(\\\"Warehouse.comment.type\\\", \\\"good\\\");\\n        refreshPage();\\n        return \\\"hiker://empty\\\";\\n    }),\\n    col_type: 'text_2'\\n\\n});\\ndata.push({\\n    title:  (type === \\\"bad\\\" ? \\\"◉\\\" : \\\"○\\\")+\\\" 👎\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n        putVar(\\\"Warehouse.comment.type\\\", \\\"bad\\\");\\n        refreshPage();\\n        return \\\"hiker://empty\\\";\\n    }),\\n    col_type: 'text_2'\\n});\\n\\ndata.push({\\n    title: \\\"提交\\\",\\n    col_type: \\\"text_center_1\\\",\\n    url: $(api.dis_new + id).lazyRule((Account) => {\\n        let text = getVar('Warehouse.comment.text', '');\\n        let [qq,auth_code] = Account;\\n        let type = getVar('Warehouse.comment.type') || 'good';\\n        qq=qq||\\\"\\\";\\n        auth_code=auth_code||\\\"\\\";\\n        if(qq==\\\"\\\"||auth_code==\\\"\\\"){\\n            return \\\"toast://未登录账号\\\";\\n        }\\n        if(text==\\\"\\\"){\\n            return \\\"toast://你还什么都没写啊\\\";\\n        }\\n        function r(p) {\\n            let result = request(input, {\\n                headers: {\\n                    'content-type': 'application/json'\\n                },\\n                body: JSON.stringify(p),\\n                method: 'POST'\\n            });\\n            return JSON.parse(result).result;\\n        }\\n        let p = {\\n            \\\"params\\\": {\\n                \\\"discuss_text\\\": text,\\n                \\\"qq\\\": qq,\\n                \\\"discuss_type\\\": type,\\n                \\\"auth_code\\\": auth_code\\n            }\\n        }\\n        let result = r(p);\\n        if(result.status===0){\\n            back(false);\\n        }\\n        return \\\"toast://\\\"+result.detail;\\n\\n    },user)\\n});\\n\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"伪用户注册\",\"path\":\"Userregistration\",\"rule\":\"js:\\nconst {\\n    api,\\n    getFile,\\n    getUserDate\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet data = [];\\ndata.push({\\n    col_type: \\\"line_blank\\\"\\n});\\nsetPageTitle(\\\"用户列表管理\\\");\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"Warehouse.m.qq\\\");\\n    clearVar(\\\"Warehouse.m.yzm\\\");\\n}));\\nlet user = getFile();\\nlet userName = user.user || [\\\"\\\"];\\nuserName = userName[0];\\ndata.push({\\n    title: \\\"““””<big>(添加/验证)账号</big>\\\",\\n    col_type: \\\"text_1\\\",\\n    url: \\\"hiker://empty\\\"\\n});\\n\\ndata.push({\\n    title: \\\"获取\\\",\\n    col_type: 'input',\\n    desc: \\\"请输入qq\\\",\\n    url: $.toString((a, b) => {\\n        let qq = input;\\n        if (qq == \\\"\\\") {\\n            return \\\"toast://你还什么都没填啊!\\\";\\n        }\\n        showLoading(\\\"获取中...\\\")\\n        return $(\\\"#noLoading#\\\").lazyRule((qq, a, b) => {\\n        try {\\n            let result = request(a, {\\n                headers: {\\n                    'content-type': 'application/json'\\n                },\\n                body: JSON.stringify({\\n                    \\\"params\\\": {\\n                        \\\"qq\\\": qq\\n                    }\\n                }),\\n                method: 'POST'\\n            });\\n            result = JSON.parse(result).result;\\n            if (result.status === 0) {\\n                hideLoading();\\n                return \\\"toast://\\\" + result.detail;\\n            } else {\\n                let result2 = JSON.parse(request(b + \\\"?qq=\\\" + qq));\\n                hideLoading();\\n                return \\\"toast://\\\" + result2.detail;\\n            }\\n        } catch (e) {\\n            hideLoading();\\n            throw e;\\n        }\\n        }, qq, a, b);\\n\\n    }, api.dis_new_user, api.dis_verify),\\n    extra: {\\n        type: \\\"number\\\",\\n        defaultValue: getVar('Warehouse.m.qq', '') || userName,\\n        onChange: 'putVar(\\\"Warehouse.m.qq\\\",input)'\\n    }\\n});\\n\\ndata.push({\\n    col_type: 'input',\\n    desc: \\\"请输入验证码\\\",\\n    extra: {\\n        titleVisible: false,\\n        defaultValue: getVar('Warehouse.m.yzm', ''),\\n        onChange: 'putVar(\\\"Warehouse.m.yzm\\\",input)'\\n    }\\n});\\ndata.push({\\n    col_type: 'rich_text',\\n    title: \\\"<small>提示：1.每天只能获取5次验证码.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.<s>验证码有效期持续一周左右</s>(暂时不会，忘记验证码可通过QQ号获取)</small>\\\"\\n});\\n\\nlet userList = getUserDate();\\ndata.push({\\n    title: \\\"验证/登录\\\",\\n    url: $(\\\"确定保存，验证码填错，无法评论哦\\\").confirm((f, l, login) => {\\n        let qq = getVar('Warehouse.m.qq', '');\\n        let yzm = getVar('Warehouse.m.yzm', '');\\n        if (qq == \\\"\\\" || yzm == \\\"\\\") {\\n            return \\\"toast://qq或验证码为空\\\";\\n        }\\n        let result = request(login, {\\n            headers: {\\n                'content-type': 'application/json'\\n            },\\n            body: JSON.stringify({\\n                \\\"params\\\": {\\n                    \\\"qq\\\": qq,\\n                    \\\"auth_code\\\": yzm\\n                }\\n            }),\\n            method: 'POST'\\n        });\\n        result = JSON.parse(result).result;\\n        if (result.status === 0) {\\n            f.user = [qq, yzm];\\n            writeFile(\\\"hiker://files/WarehouseUSER.json\\\", JSON.stringify(f));\\n            let index = l.findIndex(item => item[0] === qq);\\n            if (index > -1) {\\n                l.splice(index, 1, [qq, yzm]);\\n            } else if (l.length < 6) {\\n                l.push([qq, yzm]);\\n            } else {\\n                l.splice(0, 1);\\n                l.push([qq, yzm]);\\n            }\\n            writeFile(\\\"hiker://files/WarehouseUSERA.json\\\", JSON.stringify(l));\\n            back();\\n            return \\\"toast://验证成功\\\";\\n        }\\n        return \\\"toast://\\\" + result.detail;\\n    }, user, userList, api.dis_login),\\n    col_type: 'text_center_1'\\n});\\ndata.push({\\n    col_type: \\\"line_blank\\\"\\n});\\ndata.push({\\n    title: \\\"““””<big>账号列表</big>\\\\t\\\\t\\\\t<small>(保留5条记录)</small>\\\",\\n    col_type: \\\"text_1\\\",\\n    url: \\\"hiker://empty\\\"\\n});\\nuserList.reverse();\\n\\nfor (let item of userList) {\\n    data.push({\\n        title: \\\"账号：\\\" + item[0] + (userName === item[0] ? \\\"\\\\t\\\\t\\\\t““[当前账号]””\\\" : \\\"\\\"),\\n        desc: \\\"验证码：\\\" + item[1],\\n        url: $(\\\"是否切换为该[\\\" + item[0] + \\\"]账号\\\").confirm((f, item) => {\\n            f.user = item;\\n            writeFile(\\\"hiker://files/WarehouseUSER.json\\\", JSON.stringify(f));\\n            back();\\n            return \\\"toast://切换成功\\\";\\n        }, user, item),\\n        col_type: \\\"text_1\\\"\\n    });\\n}\\ndata.push({\\n    col_type: \\\"line_blank\\\"\\n});\\ndata.push({\\n    title: \\\"退出账号\\\",\\n    url: $(\\\"确认退出登录状态\\\").confirm((f) => {\\n        f.user = [];\\n        writeFile(\\\"hiker://files/WarehouseUSER.json\\\", JSON.stringify(f));\\n        back();\\n        return \\\"toast://退出成功\\\";\\n    }, user),\\n    col_type: 'text_center_1'\\n});\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"列表排序算法\",\"path\":\"sort\",\"rule\":\"js:\\n/* 规则列表排序 [ UP、NEW、无更新 ] 顺序 */\\n/* 归并排序 Start */\\nfunction mergeSort(arr) {\\n    var len = arr.length;\\n    if (len < 2) {\\n        return arr;\\n    }\\n    var middle = Math.floor(len / 2),\\n        left = arr.slice(0, middle),\\n        right = arr.slice(middle);\\n    return merge(mergeSort(left), mergeSort(right));\\n}\\nfunction merge(left, right) {\\n    var result = [];\\n    var isThisVersionList = [];\\n\\n    while (left.length > 0 && right.length > 0) {\\n        if (left[0].title.includes(\\\"🆙\\\")) {\\n            result.push(left.shift());\\n        } else if (right[0].title.includes(\\\"🆙\\\")) {\\n            result.push(right.shift());\\n        } else if (left[0].title.includes(\\\"🆕\\\")) {\\n            result.push(left.shift());\\n        } else if (right[0].title.includes(\\\"🆕\\\")) {\\n            result.push(right.shift());\\n        } else {\\n            isThisVersionList.push(left.shift());\\n            isThisVersionList.push(right.shift());\\n        }\\n    }\\n\\n    while (isThisVersionList.length) result.push(isThisVersionList.shift());\\n\\n    while (left.length)\\n        result.push(left.shift());\\n\\n    while (right.length)\\n        result.push(right.shift());\\n\\n    return result;\\n}\\n$.exports.mergeSort = mergeSort;\\n/* 归并排序 End */\"},{\"col_type\":\"icon_2_round\",\"name\":\"全部公开规则\",\"path\":\"AllPublicRule\",\"rule\":\"js:\\nconst {\\n    api,\\n    localRuleVer,\\n    getApi\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nconst {\\n    mergeSort\\n} = $.require(\\\"hiker://page/sort\\\");\\nlet dataType = getVar(\\\"Warehouse.type\\\", \\\"\\\");\\nlet order = getVar(\\\"Warehouse.order\\\", \\\"0\\\");\\nlet sort = getVar(\\\"Warehouse.sort\\\", \\\"0\\\");\\nlet page = MY_URL.split(\\\"#\\\")[1] || 1;\\nlet ruleList = JSON.parse(request(api.all_rule + \\\"?data_type=\\\" + dataType + \\\"&page=\\\" + page + \\\"&limit=20&order=\\\" + order + \\\"&sort=\\\" + sort)).result;\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"Warehouse.type\\\");\\n    clearVar(\\\"Warehouse.order\\\");\\n    clearVar(\\\"Warehouse.sort\\\");\\n    clearVar(\\\"Warehouse.back\\\");\\n}));\\nlet data = [];\\nif (getVar(\\\"Warehouse.back\\\") === \\\"1\\\") {\\n    back();\\n}\\nfunction tab(arr, type, contrast) {\\n    for (let item of arr) {\\n        data.push({\\n            title: item[1] === contrast ? \\\"““\\\" + item[0] + \\\"””\\\" : item[0],\\n            url: $(\\\"#noLoading#\\\").lazyRule((key, type) => {\\n                putVar(type, key);\\n                refreshPage(false);\\n                return \\\"hiker://empty\\\";\\n            }, item[1], type),\\n            col_type: \\\"scroll_button\\\"\\n        });\\n    }\\n    data.push({\\n        col_type: \\\"blank_block\\\"\\n    });\\n}\\nif (page === \\\"1\\\") {\\n    tab([\\n        [\\\"全部\\\", \\\"\\\"],\\n        [\\\"小程序\\\", \\\"home_rule_url\\\"],\\n        [\\\"提交云仓库规则\\\", \\\"publish\\\"],\\n        [\\\"网页插件\\\", \\\"js_url\\\"],\\n        [\\\"静态页面\\\", \\\"html\\\"],\\n        [\\\"主题\\\", \\\"config\\\"]\\n    ], \\\"Warehouse.type\\\", dataType);\\n    tab([\\n        [\\\"时间\\\", \\\"0\\\"],\\n        [\\\"ID\\\", \\\"1\\\"],\\n        [\\\"好评度\\\", \\\"2\\\"],\\n        [\\\"差评度\\\", \\\"3\\\"],\\n        [\\\"回复数\\\", \\\"4\\\"]\\n    ], \\\"Warehouse.order\\\", order);\\n    tab([\\n        [\\\"倒序\\\", \\\"0\\\"],\\n        [\\\"正序\\\", \\\"1\\\"]\\n    ], \\\"Warehouse.sort\\\", sort);\\n    data.push({\\n        title: \\\"搜索\\\",\\n        url: $.toString(name => \\\"hiker://search?s=\\\" + input + \\\"&rule=\\\" + name, MY_RULE.title),\\n        col_type: \\\"input\\\",\\n        desc: \\\"搜索全部规则\\\"\\n    });\\n}\\n\\nlet homeList = JSON.parse(request(api.home));\\nlet mRuleList = [];\\nfor (var item of ruleList) {\\n    var name = item.name;\\n    if (item.is_tap) {\\n        let location = JSON.parse(request(getApi(\\\"ruleListJson\\\") + \\\"?id=\\\" + item.id));\\n        item.id = location.id;\\n        item.name = location.name;\\n        item.author = location.author;\\n        item.data_type = location.data_type;\\n        item.ver = location.ver\\n    }\\n    item.version = item.ver;\\n    let label = \\\"\\\",\\n        lver = -2;\\n    if (item.is_json && item.data_type === \\\"home_rule_url\\\") {\\n        lver = localRuleVer(homeList, item);\\n        if (lver === -1) {\\n            label = \\\"🆕\\\";\\n        } else if (lver < item.ver) {\\n            label = \\\"🆙\\\";\\n        }\\n    }\\n    mRuleList.push({\\n        title: label + name,\\n        url: \\\"hiker://page/ruleDetail#noHistory##noRecordHistory#\\\",\\n        extra: {\\n            lver: lver,\\n            id: item.id\\n        },\\n        pic_url: item.pic,\\n    })\\n}\\n/* 归并排序 Start */\\n//mRuleList = mergeSort(mRuleList);\\n/* 归并排序 End */\\ndata.push.apply(data, mRuleList)\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"回复\",\"path\":\"Reply\",\"rule\":\"js:\\nlet data = [];\\nconst {\\n    api\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    replyId,\\n    ruleId,\\n    name,\\n    password,\\n    username\\n} = MY_PARAMS;\\n\\n\\nsetPageTitle(\\\"回复(\\\" + name + \\\")\\\");\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"Warehouse.comment.text\\\");\\n    refreshPage(false);\\n}));\\n\\ndata.push({\\n    desc: \\\"回复......\\\",\\n    col_type: 'input',\\n    extra: {\\n        titleVisible: false,\\n        defaultValue: getVar('Warehouse.comment.text', ''),\\n        type: \\\"textarea\\\",\\n        height:7,\\n        onChange: 'putVar(\\\"Warehouse.comment.text\\\",input)'\\n    }\\n});\\n\\n\\ndata.push({\\n    title: \\\"提交\\\",\\n    col_type: \\\"text_center_1\\\",\\n    url: $(api.dis_reply + ruleId).lazyRule((password, username, ruleId) => {\\n        let text = getVar('Warehouse.comment.text', '');\\n        if (password == \\\"\\\" || username == \\\"\\\") {\\n            return \\\"toast://未登录账号\\\";\\n        }\\n        if (text == \\\"\\\") {\\n            return \\\"toast://你还什么都没写啊\\\";\\n        }\\n        let result = request(input, {\\n            headers: {\\n                'content-type': 'application/json'\\n            },\\n            body: JSON.stringify({\\n                \\\"params\\\": {\\n                    \\\"discuss_text\\\": text,\\n                    \\\"qq\\\": username,\\n                    \\\"password\\\": password,\\n                    \\\"discuss_id\\\": ruleId\\n                }\\n            }),\\n            method: 'POST'\\n        });\\n        result = JSON.parse(result).result;\\n        if (result.status === 0) {\\n            back(false);\\n        }\\n        return \\\"toast://\\\" + result.detail;\\n\\n    }, password, username, replyId)\\n});\\n\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"我的回复\",\"path\":\"MyReply\",\"rule\":\"js:\\nconst {\\n    api\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    auth_code,\\n    qq\\n} = MY_PARAMS;\\nlet page = parseInt(MY_URL.split(\\\"#\\\")[1]);\\nlet data=[];\\nlet commentList = JSON.parse(request(api.dis_get_reply + \\\"?limit=5&page=\\\" + page + \\\"&qq=\\\" + qq + \\\"&auth_code=\\\" + auth_code)).result;\\nif (commentList.length === 0) {\\n    data.push({\\n        title: \\\"<h5 style='text-align:center'>别拉了一条也不剩了</h5>\\\",\\n        col_type: \\\"rich_text\\\"\\n    });\\n} else {\\n    for (let item of commentList) {\\n        data.push({\\n            title: item.name + \\\"&nbsp;&nbsp;<font color='gray'><small>#\\\" + item.id + \\\"</small><font>\\\",\\n            col_type: \\\"avatar\\\",\\n            url: \\\"hiker://page/ruleDetail#noHistory##noRecordHistory#\\\",\\n            extra: {\\n                lver: \\\"回复进入不支持查看\\\",\\n                id: item.rule_id[0]\\n            },\\n            pic_url: item.avatar_url\\n        });\\n        data.push({\\n            title: item.discuss_text,\\n            desc: item.create_date + \\\"·\\\"+item.rule_id[1]+\\\"·\\\"+\\\"开发者🗣\\\",\\n            col_type: \\\"text_1\\\",\\n            url: \\\"hiker://page/info\\\",\\n            extra:{\\n                name:item.name,\\n                type:\\\"long_text\\\",\\n                text:item.discuss_text\\n            },\\n            pic_url: item.avatar_url\\n        });\\n    }\\n    \\n}\\nsetResult(data);\\n\"},{\"col_type\":\"movie_3\",\"name\":\"更多分享\",\"path\":\"moreShare\",\"rule\":\"js:\\n    addListener('onClose', $.toString(()=>{\\n        clearVar(\\\"house.upload_code\\\");\\n    }));\\nconst {color,small,api, getFile} = $.require(\\\"hiker://page/utiliy\\\");\\nlet houseFile = getFile||false;\\nlet put_url = api.host+'/hikerule/dev/put';\\nif(!houseFile){\\n    setItem('is_house_vip', 'false');\\n}\\nlet house_data = houseFile();\\n// log(house_data.username+'-'+house_data.password);\\nvar canup = house_data.username.length >= 6 && house_data.password.length > 2;\\nlog('可以上传?'+canup);\\nlet d = [];\\nlet file_type = [{name:'静态文件',value:'html'},{name:'网页插件',value:'js_url'},{name:'主页配置',value:'config'}]; //上传类型\\nlet file_redirect = [{name:'本地',value:'false'},{name:'直链302',value:'true'}]; //是否重定向\\nlet file_ua = [{name:'电脑',value:'pc'},{name:'手机',value:'mobile'}];\\nlet file_type_title = file_type.map((item) => {\\n    let name = getItem('house.file_type','静态文件');\\n    if(item.name===name){\\n        return '👉'+item.name;\\n    }else{\\n        return item.name;\\n    }\\n});\\nlet file_redirect_title = file_redirect.map((item) => {\\n    let name = getItem('house.file_redirect','本地');\\n    if(item.name===name){\\n        return '👉'+item.name;\\n    }else{\\n        return item.name;\\n    }\\n});\\nlet file_ua_title = file_ua.map((item) => {\\n    let name = getItem('house.file_ua','电脑');\\n    if(item.name===name){\\n        return '👉'+item.name;\\n    }else{\\n        return item.name;\\n    }\\n});\\nd.push({col_type: 'x5_webview_single', extra: {js: 'console.log(\\\"我加载了\\\")'}});\\nd.push({\\n    title: '获取',\\n    desc: \\\"文件路径,支持hiker,file,http,主题\\\",\\n    extra: {\\n        onChange: \\\"putVar('house.web_url',input)\\\",\\n        titleVisible: true,\\n        defaultValue:getVar('house.web_url')\\n    },\\n    url:$.toString(() => {\\n        let input = getVar('house.web_url','');\\n        if(input.length<2){\\n            return 'toast://链接不可以为空'\\n        } else if(/^hiker:|^file:|^http:|^https:/.test(input)){\\n            log('正常链接');\\n            let ua = getItem('house.file_ua')==='电脑'?'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36':'Mozilla/5.0 (Linux; Android 9; MI 6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Mobile Safari/537.36';\\n            let web_url_arr = input.split(';');\\n            let web_url = web_url_arr[0];\\n            let headers = {\\n                'Referer':'https://blog.csdn.net',\\n                'User-Agent':ua,\\n                'Accept':'application/json, text/javascript, */*; q=0.01',\\n                'Accept-Language':'zh-CN',\\n            };\\n            if(web_url_arr.length>=3&&web_url_arr[2].length>2){ //设置编码\\n                headers['content-type'] = 'charset='+web_url_arr[2].toUpperCase();\\n            }\\n            let params = {headers:headers,withHeaders:false,redirect:false};\\n            if(web_url_arr.length>=2&&web_url_arr[1].length>2){ // 设置请求方法\\n                params['method'] = web_url_arr[1].toUpperCase();\\n            }\\n            log('开始获取源码');\\n            try {\\n                /*\\n                requestAsync(web_url,params,function (key,code) {\\n                    let back_code = code;\\n                    if(back_code.length>20){\\n                        putVar('house.upload_code',back_code);\\n                        refreshPage(true);\\n                        return 'toast://源码已获取,并部分插入到文本区域'\\n                    }else{\\n                        return 'toast://错误，本次获取到空文本，疑似你没有此文件!';\\n                    }\\n                });\\n                */\\n                let back_code = getItem('house.file_ua')==='电脑'?fetch(web_url,params):request(web_url,params);\\n                if(back_code.length>20){\\n                    putVar('house.upload_code',back_code);\\n                    refreshPage(true);\\n                    return 'toast://源码已获取,并部分插入到文本区域'\\n                }else{\\n                    return 'toast://错误，本次获取到空文本，疑似你没有此文件!';\\n                }\\n            }catch (e) {\\n                log(e.message);\\n                return 'toast://发生了错误:\\\\n'+e.message;\\n            }\\n        }else if(/主题￥|元素￥/.test(input)){\\n            log('主题链接');\\n            let web_url_arr = input.split('￥');\\n            let web_url = web_url_arr[web_url_arr.length-1];\\n            let back_code = parsePaste(web_url);\\n            if(back_code.length>20) {\\n                putVar('house.upload_code',back_code);\\n                refreshPage(true);\\n                return 'toast://源码已获取,并部分插入到文本区域'\\n            }else{\\n                return 'toast://错误，本次获取返回为:\\\\n'+back_code;\\n            }\\n        }else{\\n            return 'toast://非法链接:\\\\n'+getVar('house.web_url');\\n        }\\n    }),\\n    col_type: \\\"input\\\"\\n});\\n\\nd.push({\\n    title:'上传类型',\\n    desc:'上传文件的类型,当前为:'+color(getItem('house.file_type','静态文件'),'#ff7000'),\\n    col_type:'text_1',\\n    url:$(file_type_title,2).select(() => {\\n        setItem('house.file_type',input.replace('👉',''));\\n        refreshPage(true);\\n        return 'toast://你选择了:'+input;\\n    })\\n});\\n\\nd.push({\\n    title:'文件定位',\\n    desc:'文件是否属于重定向,当前为:'+color(getItem('house.file_redirect','本地'),'#ff7000'),\\n    col_type:'text_1',\\n    url:$(file_redirect_title,2).select(() => {\\n        setItem('house.file_redirect',input.replace('👉',''));\\n        refreshPage(true);\\n        return 'toast://你选择了:'+input;\\n    })\\n});\\n\\nd.push({\\n    title:'设备UA',\\n    desc:'发起网页请求头标识,当前为:'+color(getItem('house.file_ua','电脑'),'#ff7000'),\\n    col_type:'text_1',\\n    url:$(file_ua_title,2).select(() => {\\n        setItem('house.file_ua',input.replace('👉',''));\\n        refreshPage(true);\\n        return 'toast://你选择了:'+input;\\n    })\\n});\\nfunction compare(name) {\\n    return function(item) {\\n        return item.name === name;\\n    }\\n}\\nd.push({\\n    title:'🗄️环境',\\n    col_type:'flex_button',\\n    url:$().lazyRule((file_type,compare)=>{\\n        log('查看环境变量');\\n        try {\\n            let up_code = getVar('house.upload_code','');\\n            let ftype =  file_type.filter(compare(getItem('house.file_type','静态文件')))[0].value;\\n            let redirect = getItem('house.file_redirect','本地')!=='本地';\\n            let code = !redirect?up_code:input;\\n            let env = {\\n                web_url:getVar('house.web_url',''),\\n                device:getItem('house.file_ua','电脑'),\\n                ftype:ftype||\\\"\\\",\\n                redirect:redirect,\\n                code:code.substring(0,40)||\\\"\\\",\\n            }\\n            log(env);\\n            return 'toast://'+JSON.stringify(env);\\n            // alert(JSON.stringify(env));\\n        }catch (e) {\\n            return 'toast://'+e.message;\\n            // alert(e.message);\\n        }\\n    },file_type,compare)\\n});\\n\\nd.push({\\n    title:'📃教程',\\n    col_type:'flex_button',\\n    url:$().x5Rule(()=>{\\n        let msg = '欢迎使用开发者更多分享工具\\\\n1.输入网址为本地文件路径,hiker://或者file://开头\\\\n2.点击网址输入栏后面的按钮\\\\n3.看文本预览区是否正确\\\\n4.点击上传按钮提交到仓库';\\n        alert(msg);\\n    })\\n});\\n\\nd.push({\\n    title:'🗑️清空',\\n    col_type:'flex_button',\\n    url:$().lazyRule(()=>{\\n        clearVar('house.upload_code');\\n        refreshPage(true);\\n        return 'toast://已清除预览区域内容'\\n    })\\n});\\n\\nd.push({\\n    title:'📲示例',\\n    col_type:'flex_button',\\n    url:$().lazyRule(()=>{\\n        let demo_code = getItem('house.demo','0');\\n        if(demo_code=='0'){\\n            putVar('house.web_url','hiker://files/rules/dzHouse/html/资源网书签.html');\\n            demo_code = parseInt(demo_code)+1;\\n            setItem('house.demo',demo_code+'');\\n        }else{\\n            putVar('house.web_url','file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/dzHouse/html/资源网书签.html');\\n            setItem('house.demo','0');\\n        }\\n        refreshPage(true);\\n        return 'toast://已设置示例地址'\\n    })\\n});\\n\\nd.push({\\n    title:'📤上传',\\n    col_type:'flex_button',\\n    url:$().lazyRule((canup,house_data,put_url,file_type) =>{\\n        function compare(name) {\\n            return function(item) {\\n                return item.name === name;\\n            }\\n        }\\n        const {getNowFormatDate}=$.require(\\\"hiker://page/utiliy\\\");\\n        let up_code = getVar('house.upload_code','');\\n        if(up_code.length < 2){\\n            return 'toast://源码区无内容，请先访问一个静态页面'\\n        }\\n        if(!canup){\\n            return 'toast://你不是开发者，没有提交到仓库的权利!'\\n        }\\n        let input = getVar('house.web_url','');\\n        let web_url = input.split(';')[0];\\n        let fileName = '';\\n        if(/^hiker:|^file:|^http:|^https:/.test(web_url)){\\n            fileName = web_url.split('/')[web_url.split('/').length-1];\\n        }else if(/主题￥|元素￥/.test(input)){\\n            let bkarr = up_code.split('￥');\\n            if(bkarr.length<3){\\n                return 'toast://云剪贴板内容有误'\\n            }\\n            switch (bkarr[1]) {\\n                case 'my_home_theme':\\n                    fileName = up_code.split('「')[1].split('」')[0];\\n                    break;\\n                case 'my_home_single':\\n                    fileName = up_code.split('「')[1].split('」')[0];\\n                    break;\\n                case 'js_url':\\n                    fileName = up_code.split('￥')[2].split('@')[0];\\n                    break;\\n            }\\n        }else{\\n            return 'toast://错误，网页链接无内容!';\\n        }\\n        let ua = getItem('house.file_ua')==='电脑'?'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36':'Mozilla/5.0 (Linux; Android 9; MI 6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Mobile Safari/537.36';\\n        let headers = {\\n            'Referer':'https://blog.csdn.net',\\n            \\\"content-type\\\": \\\"application/json\\\",\\n            'User-Agent':ua,\\n            'Accept':'application/json, text/javascript, */*; q=0.01',\\n            'Accept-Language':'zh-CN',\\n        };\\n        let ftype =  file_type.filter(compare(getItem('house.file_type','静态文件')))[0].value;\\n        let redirect = getItem('house.file_redirect','本地')!=='本地';\\n        if(redirect&&!web_url.startsWith('http')){\\n            return 'toast://直链302重定向网址链接必须http开头';\\n        }\\n        let code = !redirect?up_code:web_url;\\n        let data = {\\\"params\\\":\\n                {\\\"data\\\": {rule_name: fileName, \\\"rule_type\\\": '更多分享', \\\"version\\\":getNowFormatDate(),\\\"rule_value\\\": code,\\n                        data_type:ftype, is_redirect:redirect,deviceUa:getItem('house.file_ua'),\\n                    },\\n                    \\\"name\\\": house_data.username,\\n                    \\\"password\\\": house_data.password}\\n        };\\n        let upparams = {headers:headers,body:JSON.stringify(data),withHeaders:false,redirect:false,method:'POST'};\\n        let backmsg = getItem('house.file_ua')==='电脑'?fetch(put_url,upparams):request(put_url,upparams);\\n        try{\\n            let result = JSON.parse(backmsg).result;\\n            let detail = result.detail;\\n            return 'toast://'+detail;\\n        }catch (e) {\\n            log(e.message);\\n            return 'toast://发生了错误\\\\n'+e.message;\\n        }\\n    },canup,house_data,put_url,file_type)\\n});\\n\\nd.push({\\n    title:'长文本预览区域',\\n    col_type:'text_1',\\n    url:'hiker://empty',\\n    extra: {textSize: 11,lineVisible:false}\\n});\\n\\nd.push({\\n    title:getVar('house.upload_code','').substring(0,10240),\\n    col_type:'long_text',\\n    extra: {textSize: 11}\\n});\\nsetPageTitle(\\\"更多分享\\\");\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"轻合集生成接口\",\"path\":\"genApi\",\"rule\":\"js:\\nfunction genRule(name,url){\\n    const {getNowFormatDate}=$.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n    String.prototype.replaceAll = function(old,new_str){\\n    return this.split(old).join(new_str);\\n};\\n    let muban = \\\"http://hiker.nokia.press/hikerule/rulelist.json?id=1690\\\";\\nlet muban_word={name:\\\"@轻合集\\\",url:\\\"@地址\\\",ver:\\\"@版本\\\"};\\nlet muban_code = fetch(muban);\\n            muban_code=muban_code.replaceAll(muban_word.name,name).replaceAll(muban_word.ver,getNowFormatDate()).replaceAll(muban_word.url,url);\\nlet import_code=\\\"海阔视界规则分享，当前分享的是：小程序，无根树，花正清，不断荤腥不戒淫￥home_rule_v2￥base64://@\\\"+name+\\\"@\\\"+base64Encode(muban_code);\\n            var url = sharePaste(import_code);\\n            let import_rule= url+\\\"\\\\n\\\\n小程序：\\\"+name;\\n   return import_rule;    \\n}\\n$.exports.genRule=genRule;\"},{\"col_type\":\"movie_3\",\"name\":\"全局解析免嗅\",\"path\":\"globalParse\",\"rule\":\"js:\\nfunction lazyParse(playUrl,ms,tm){\\n    let tm = parseInt(tm)||3000;\\n    //log(\\\"访问超时:\\\"+tm);\\n    log(\\\"尝试道长仓库x5免嗅:\\\"+playUrl);\\n    clearVar(\\\"_x5jxUrl\\\");\\n    let refer=playUrl.split(\\\"//\\\")[0]+\\\"//\\\"+playUrl.split(\\\"//\\\")[1].split(\\\"/\\\")[0];\\n    let bad=$(\\\"网络不佳或者疑似对方网站挂了，你要查看其网页吗？\\\").confirm((playUrl)=>{\\n             log(\\\"网站看起来挂了:\\\"+playUrl);\\n            return playUrl\\n        },playUrl);\\n    try{\\n        var back=request(playUrl,{headers: {\\\"Referer\\\": refer},timeout:tm});\\n        if(!back){\\n            return bad\\n        }\\n    }catch(e){\\n        log(e.message);\\n        return bad\\n    }\\n    try {\\n         back=JSON.parse(back);\\n         if(!back.url){\\n             log(back);\\n         }\\n        return back.url\\n    }catch (e) {\\n        // log(\\\"非json错误:\\\"+e.message);\\n        let ms = parseInt(ms)||5000;\\n        //log(\\\"ms:\\\"+ms);\\n        //log(\\\"ms/250:\\\"+(ms/250));\\n        let max_count=(ms/250);\\n        showLoading('嗅探中，若失败就重装x5...');\\n        let _x5 = $.toString((playUrl,max_count) => {\\n            if(typeof(request)=='undefined'||!request){\\n                eval(fba.getInternalJs());\\n            }\\n\\n            fba.putVar(\\\"_x5jxUrl\\\",playUrl);\\n            //let _x5jxUrl = playUrl;\\n            if(window.count == null){\\n                window.count=1;\\n            }\\n            window.count++;\\n            //fba.log('count:'+window.count+',max_count:'+max_count);\\n            if( window.count >= max_count){\\n                fba.log(\\\"超过\\\"+max_count*250+\\\"毫秒未获取到资源地址，跳到源网页\\\");\\n                return fba.getVar(\\\"_x5jxUrl\\\");\\n                //return _x5jxUrl\\n            }\\n            function muteMe(elem) {\\n                try {\\n                    elem.pause();\\n                }\\n                catch (e) {\\n                }\\n            }\\n            var videos = document.querySelectorAll(\\\"video\\\"), audios = document.querySelectorAll(\\\"audio\\\"), v2 = document.querySelectorAll(\\\"embed\\\"), v3 = document.querySelectorAll(\\\"#player\\\");\\n            try {\\n                [].forEach.call(videos, function (video) {\\n                    muteMe(video);\\n                });\\n            } catch (e) {}\\n            try {\\n                [].forEach.call(audios, function (audio) {\\n                    muteMe(audio);\\n                });\\n            } catch (e) {}\\n            try {\\n                [].forEach.call(v2, function (v) {\\n                    muteMe(v);\\n                });\\n            } catch (e) {}\\n            try {\\n                [].forEach.call(v3, function (v) {\\n                    muteMe(v);\\n                });\\n            } catch (e) {}\\n            var urls = _getUrls();\\n            let exceptWords = '.js$|.css$|.ts$|.html$|.htm$|.php$|.gif$|.jpg$|.jpeg$|.png$|.ico$|.svg$|.txt$'.split('|').map(it=>'\\\\\\\\'+it).join('|');\\n            var exceptKeys = new RegExp(exceptWords);\\n            let replaceWords = 'playm3u8|m3u8\\\\.tv'.split('|').map(it=>it).join('|');\\n            var replaceKeys = new RegExp(replaceWords,'g');\\n            let videoWords = \\\".mp4$|.m3u8$|.flv$|.avi$|.3gp$|.mpeg$|.wmv$|.mov$|rmvb|.dat$|qqBFdownload|mime=video%2F|mime_type=video_\\\".split('|').map((it)=>{\\n                if(it.startsWith(\\\".\\\")){\\n                    return '\\\\\\\\'+it\\n                }else{\\n                    return it\\n                }\\n            }).join(\\\"|\\\");\\n            var videoKeys = new RegExp(videoWords);\\n            for (var i in urls) {\\n                if ((videoKeys.test(urls[i])||videoKeys.test(urls[i].replace(replaceKeys,\\\"\\\").split(\\\"?\\\")[0]) )&& !exceptKeys.test(urls[i].split(\\\"?\\\")[0])) {\\n                    return urls[i]+\\\"#isVideo=true#\\\";\\n                }\\n            }\\n        },playUrl,max_count);\\n        let x5Url = 'x5Rule://'+playUrl+ '@' +_x5;\\n        return x5Url\\n    }\\n}\\nfunction comParse(parStr){\\n    return $.toString((parStr)=>{\\n    let t=parStr.split(\\\";\\\");\\n    let d=[];\\nlet list=pdfa(getResCode(),t[0]);\\n//log(list);\\nfor(let i in list){\\n    d.push({\\n        title:pdfh(list[i],t[1]),\\n        pic_url:pd(list[i],t[2]),\\n        desc:pdfh(list[i],t[3]),\\n        url:$(pd(list[i],t[4])).lazyRule(()=>{\\n            const {lazyParse} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n            return lazyParse(input)\\n        })\\n    })\\n}\\nsetResult(d)\\n},parStr)\\n}\\n$.exports.comParse=comParse;\\n$.exports.lazyParse=lazyParse;\"},{\"name\":\"任务仓库接口\",\"path\":\"taskCall\",\"rule\":\"js:\\nString.prototype.strip = function () { return this.replace(/(^\\\\s*)|(\\\\s*$)/g, \\\"\\\"); };\\nfunction task_req(task_api,task) { // 通用发送仓库post调用任务请求\\n    const {getFile} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n    let houseFile = getFile||false;\\n    if(!houseFile){\\n        setItem('is_house_vip', 'false');\\n    }\\n    let house_data = houseFile();\\n    let result = request(task_api, {\\n        headers: {\\n            'content-type': 'application/json'\\n        },\\n        body: JSON.stringify({\\n            \\\"params\\\": {\\n                \\\"data\\\": {\\n                    \\\"type\\\": task.mode||'run',\\n                    \\\"func\\\": task.func||'',\\n                    \\\"params\\\": task.params||[]\\n                },\\n                \\\"auth\\\": {\\n                    \\\"name\\\": house_data.username||\\\"\\\",\\n                    \\\"password\\\": house_data.password||\\\"\\\"\\n                }\\n            }\\n        }),\\n        method: 'POST'\\n    });\\n    return JSON.parse(result).result;\\n}\\n\\nfunction task_upload(task){ // 通用任务发布新增及修改功能\\n    const {api,getFile} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n    let houseFile = getFile||false;\\n    if(!houseFile){\\n        setItem('is_house_vip', 'false');\\n    }\\n    let api_url = api.host+'/hikerule/task/add';\\n    let house_data = houseFile();\\n    let result = request(api_url, {\\n        headers: {\\n            'content-type': 'application/json'\\n        },\\n        body: JSON.stringify({\\n            \\\"params\\\": {\\n                \\\"data\\\": {\\n                    \\\"name\\\": task.name,\\n                    \\\"pycode\\\": task.pycode,\\n                    \\\"note\\\": task.note,\\n                    \\\"test_code\\\": task.test_code,\\n                },\\n                \\\"auth\\\": {\\n                    \\\"name\\\": house_data.username||\\\"\\\",\\n                    \\\"password\\\": house_data.password||\\\"\\\"\\n                }\\n            }\\n        }),\\n        method: 'POST'\\n    });\\n    return JSON.parse(result).result;\\n}\\n\\nfunction task_call(id,func,params){\\n    const {api} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n    let task_api = api.host+'/hikerule/task/run/'+id;\\n    let task = {\\n        mode:'call',\\n        func:func,\\n        params:params||[]\\n    };\\n    return task_req(task_api,task);\\n}\\n\\nfunction task_rename(id,new_task_name){\\n    const {api,getFile} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n    let houseFile = getFile||false;\\n    if(!houseFile){\\n        setItem('is_house_vip', 'false');\\n    }\\n    let house_data = houseFile();\\n    let task_api = api.host+'/hikerule/task/rename/'+id;\\n    task_api = task_api+'?name='+house_data.username+'&password='+house_data.password+'&task_name='+new_task_name;\\n    try {\\n        let result = JSON.parse(fetch(task_api,{}));\\n        if(result.status==0){\\n            return  result.detail\\n        }else{\\n            return result.result+''+result.detail\\n        }\\n    }catch (e) {\\n        log(e.message);\\n        return ''+e.message\\n    }\\n}\\n\\nfunction task_change_state(id){\\n    const {api,getFile} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n    let houseFile = getFile||false;\\n    if(!houseFile){\\n        setItem('is_house_vip', 'false');\\n    }\\n    let house_data = houseFile();\\n    let task_api = api.host+'/hikerule/task/change_state/'+id;\\n    task_api = task_api+'?name='+house_data.username+'&password='+house_data.password;\\n    try {\\n        let result = JSON.parse(fetch(task_api,{}));\\n        if(result.status==0){\\n            return  result.detail\\n        }else{\\n            return result.result+''+result.detail\\n        }\\n    }catch (e) {\\n        log(e.message);\\n        return ''+e.message\\n    }\\n}\\n\\nfunction task_run(id){\\n    const {api} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n    let task_api = api.host+'/hikerule/task/run/'+id;\\n    let task = {};\\n    return task_req(task_api,task);\\n}\\n\\n$.exports.taskCall = task_call;\\n$.exports.taskRun = task_run;\\n$.exports.taskReq = task_req;\\n$.exports.taskUpload = task_upload;\\n$.exports.taskRename = task_rename;\\n$.exports.taskChangeState = task_change_state;\"}]","icon":""},{"last_chapter_rule":"","pageList":[{"col_type":"text_1","name":"个人配置","path":"settings","rule":"js:\n// 是否显示帖子分类，显示/1 不显示/0\nvar showMeta = 1;\n// 帖子分类字体大小 big/大 span/中 small/小\nvar metaSize = 'small';\n// 帖子分类颜色\nvar nodeColor = \"#2979FF\";\n// 是否显示正文，显示/1 不显示/0\nvar showContent = 1;\n// 是否显示评论，显示/1 不显示/0\nvar showComment = 1;\n// 是否隐藏图片，隐藏/1 不隐藏/0\nvar hideImg = 0;\n// 使用 emoji 图标替换文本，使用/1 不使用/0\nvar useEmoji = 1;\n// 评论用户颜色\nvar userColor = \"#2979FF\";\n// 评论回复引用用户颜色\nvar quoteUserColor = \"black\";\n\n// 是否显示填写 Token 提示，显示/1 不显示/0\nvar showInputTokenTips = 1;\n// 是否开启收藏/点赞结果提示，是/1 否/0\nvar resultTips = 1;\n// 第几套图标，-1为随机，从下面三个数组挑选\nvar iconIndex = -1;\n// 收藏图标\nvar starIcons = [ \n    \"hiker://files/icon/bbs收藏.svg\",\n/*'https://www.easyicon.net/api/resizeApi.php?id=1286217&size=128',*/\n];\nvar starIconsWebMapping = [\n    \"https://cdn.jsdelivr.net/gh/RebornQ/cdn.hiker/icons/bbs收藏.svg\"\n];\n// 点赞图标\nvar likeIcons = [ \n    \"hiker://files/icon/bbs点赞.svg\",\n/*'https://www.easyicon.net/api/resizeApi.php?id=1288217&size=128',\n    'https://www.easyicon.net/api/resizeApi.php?id=1211507&size=128',\n    'https://www.easyicon.net/api/resizeApi.php?id=1239511&size=128'*/\n];\nvar likeIconsWebMapping = [\n    \"https://cdn.jsdelivr.net/gh/RebornQ/cdn.hiker/icons/bbs点赞.svg\"\n];\n// 回复图标\nvar commentIcons = [ \n    \"hiker://files/icon/bbs回复.svg\",\n/*'https://www.easyicon.net/api/resizeApi.php?id=1239495&size=128',*/\n];\nvar commentIconsWebMapping = [\n    \"https://cdn.jsdelivr.net/gh/RebornQ/cdn.hiker/icons/bbs回复.svg\"\n];\n// 原文章图标\n/*var articleIcons = [ 'https://www.easyicon.net/api/resizeApi.php?id=1238522&size=128',\n];*/\nif (!fileExist(starIcons[0])) {\n    writeFile(starIcons[0], request(starIconsWebMapping[0]));\n}\nif (!fileExist(likeIcons[0])) {\n    writeFile(likeIcons[0], request(likeIconsWebMapping[0]));\n}\nif (!fileExist(commentIcons[0])) {\n    writeFile(commentIcons[0], request(commentIconsWebMapping[0]));\n}"},{"col_type":"text_1","name":"富文本通用函数","path":"richtext","rule":"js:\nlet imgError = '<p><font color=\"grey\">图片暂时无法显示，若要查看请<a href=\"' + MY_URL + '\">访问原文</a></font></p>';\nString.prototype.replaceWithConfirm = function (confirmValue, searchValue, replaceValue) {\n    let returnValue = this;\n    if (confirmValue) {\n        returnValue = this.replace(searchValue, replaceValue)\n    }\n    return returnValue;\n};\nString.prototype.replaceWithCallback = function (searchValue, replaceValue, callback) {\n    let returnValue = this;\n    if (callback != null) {\n        returnValue = callback(this, searchValue, replaceValue);\n    }\n    return returnValue;\n};\nfunction imgTag(context, imgUrl) {\n    let replaceString = imgUrl === '' ? imgError : '<p><showimg src=\"' + (imgUrl + '@Referer=https://haikuoshijie.cn') + '\"></p>';\n    if (hideImg) {\n        replaceString = imgUrl === '' ? imgError : '<p><a href=\"' + imgUrl + '\">[点击查看大图]</a></p>';\n    }\n    return context.replace(/<img data-v>/g, replaceString);\n}\nfunction imgTagReplacement2(context, searchValue, replaceValue) {\n    let matchArray = context.match(searchValue);\n    let returnValue = context;\n    if (matchArray != null) {\n        for (let i = 0; i < matchArray.length; i++) {\n            let item = matchArray[i];\n            /<img (src|data-src)=\"(.*?)\"([\\s\\S]*?)>/.test(item);\n            let imgUrl = RegExp.$2;\n            if (imgUrl !== '') {\n                returnValue = returnValue.replace(item, replaceValue);\n                returnValue = imgTag(returnValue, imgUrl);\n            }\n        }\n    }\n    return returnValue;\n}\nfunction abbreviateReplyText(context, textArray) {\n    let content = context;\n    for (let i = 0; i < textArray.length; i++) {\n        let text = parseDomForHtml(textArray[i], \"p&&Text\");\n        if (text.length > 30) {\n            content = content.replace(text, text.substring(0, 30) + \"......\");\n        }\n    }\n    return content;\n}"},{"col_type":"movie_3","name":"帖子详情","path":"detail","rule":"js:\nvar res = {};\nvar d = [];\nvar urlSplits = MY_URL.split(\"#\");\nvar mUrl = urlSplits[0];\nvar page = urlSplits[1];\nvar colType = 'rich_text';\n// mUrl = MY_PARAMS.link\n// log(MY_URL)\n\n\neval(JSON.parse(request('hiker://page/settings')).rule)\n/**\n * 用户 Token (需要先登录才能获取)\n *\n * 抓包 Cookie 中的 userToken= 后面那串东西\n * 或\n * 不填写固定值 则需配合专用插件自动获取\n * 但每次运行视界都需打开一次论坛\n */\nvar token = getItem('hikerbbs_token', '');\n\neval(JSON.parse(request('hiker://page/richtext')).rule)\n\nif (page > 1) {\n\n    let cursor = getVar(\"cursor\");\n    if (page === '2') cursor = getVar(\"first_page_cursor\");\n    cursor = cursor === '' ? '0' : cursor;\n\n    let urlTemplate = \"http://haikuoshijie.cn/api/comment/list?entityType=topic&entityId={entityId}&cursor={cursor}\";\n    if (/topic\\/(\\d+)/.test(MY_URL) === true) {\n        let entityId = RegExp.$1;\n        if (entityId != null && entityId !== \"\") {\n            let noMore = getVar(\"noMore\" + entityId);\n            noMore = noMore === '' ? '0' : noMore;\n            urlTemplate = urlTemplate.replace(\"{entityId}\", entityId);\n            url = urlTemplate.replace(\"{cursor}\", cursor);\n            // url = \"http://haikuoshijie.cn/api/comment/list?entityType=topic&entityId=398&cursor=9183\";\n            let json = {};\n            try {\n                json = JSON.parse(fetch(url, {}));\n                let data = json.data;\n                let results = data.results;\n                if (results != null) {\n                    let nowTime = new Date().getTime();\n                    putVar({\n                        key: 'cursor',\n                        value: data.cursor\n                    });\n\n                    function timeDiff(nowTime, createTime) {\n                        Date.prototype.format = function(fmt) {\n                            let o = {\n                                \"M+\": this.getMonth() + 1, //月份\n                                \"d+\": this.getDate(), //日\n                                \"h+\": this.getHours(), //小时\n                                \"m+\": this.getMinutes(), //分\n                                \"s+\": this.getSeconds(), //秒\n                                \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\n                                \"S\": this.getMilliseconds() //毫秒\n                            };\n                            if (/(y+)/.test(fmt)) {\n                                fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n                            }\n                            for (let k in o) {\n                                if (new RegExp(\"(\" + k + \")\").test(fmt)) {\n                                    fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n                                }\n                            }\n                            return fmt;\n                        };\n                        let time = new Date(createTime).format(\"yyyy-MM-dd hh:mm:ss\");\n                        let timeDiff = nowTime - createTime;\n                        let days = Math.floor(timeDiff / (24 * 3600 * 1000)); // 计算出天数\n                        let dayLeave = timeDiff % (24 * 3600 * 1000); // 计算天数后剩余的时间\n                        let hours = Math.floor(dayLeave / (3600 * 1000)); // 计算天数后剩余的小时数\n                        let hourLeave = timeDiff % (3600 * 1000); // 计算剩余小时后剩余的毫秒数\n                        let minutes = Math.floor(hourLeave / (60 * 1000)); // 计算剩余的分钟数\n                        if (0 < days && days < 31) {\n                            time = days + \"天前\"\n                        } else if (days < 0) {\n                            if (hours > 0) {\n                                time = hours + \"小时前\";\n                            } else {\n                                time = minutes + \"分钟前\";\n                            }\n                        }\n                        return time;\n                    }\n\n                    for (let i = 0; i < results.length; i++) {\n                        let result = results[i];\n                        let quoteContent = '';\n                        if (result.quote != null) {\n                            let quote = result.quote;\n                            let content = parseDomForHtml(quote.content, 'body&&Html');\n                            let nickname = quote.user.nickname;\n\n                            // https://blog.csdn.net/GrootBaby/article/details/99980395\n                            let createTime = quote.user.createTime;\n                            let time = timeDiff(nowTime, createTime);\n\n                            try {\n                                content = content\n                                    .replace(/<a[\\s\\S].*?<\\/a>/g, '');\n                                let commentReplyTextArray = content.match(/<p[\\s\\S].*?<\\/p>/g);\n                                content = abbreviateReplyText(content, commentReplyTextArray);\n                            } catch (e) {}\n                            quoteContent = '<blockquote class=\"comment-quote\"><div class=\"comment-quote-user\"><a class=\"quote-nickname\"><font color=\"' + quoteUserColor + '\">' +\n                                nickname +\n                                '</font></a><span class=\"quote-time\"><font color=\"grey\">' +\n                                '\\t\\t' +\n                                time +\n                                '</font></span></div><div itemprop=\"text\">' +\n                                content +\n                                '</div></blockquote>';\n                        }\n                        let content = '<p>' + result.content + '</p>';\n                        let meta = '<br><small><font color=\"' + userColor + '\">' +\n                            result.user.nickname +\n                            '</font>\\t\\t<font color=\"grey\">' +\n                            timeDiff(nowTime, result.createTime) +\n                            '\\t\\t回复' +\n                            '</font></small>';\n                        let commentContent = quoteContent + content + meta;\n                        let title = commentContent\n                            .replace(/<img class=\"avatar([\\s\\S]*?)>/g, '')\n                            .replace(/(<(p)([\\s\\S]*?)>)|<p>|<\\/p>/g, '')\n                            .replaceWithCallback(/<img (src|data-src)=\"(.*?)\"([\\s\\S]*?)>/g, \"<img data-v>\", imgTagReplacement2)\n                            .replace(/<img([\\s\\S]*?)>/g, imgError)\n                            .replace(/<showimg/g, '<img');\n                        d.push({\n                            title: title,\n                            desc: '',\n                            url: MY_URL,\n                            col_type: colType\n                        });\n                        d.push({\n                            col_type: 'line'\n                        });\n                    }\n                } else {\n                    if (noMore) {\n                        d.push({\n                            title: \"<p></p>\" + '<center><font color=\"grey\">已无更多评论</font></center>',\n                            col_type: colType\n                        });\n                        putVar({\n                            key: 'noMore' + entityId,\n                            value: 1\n                        });\n                    }\n                }\n            } catch (e) {}\n        }\n    }\n} else {\n    var html = getResCode();\n    try {\n        var js = parseDom(html, '.main-content&&Html');\n        var hasRule = 0;\n\n        // setError(html);\n\n        try {\n\n            let title = '<p></p><big style=\"padding-left: 15px\"><strong>' + parseDomForHtml(html, '.topic-header-center&&h1&&Html') + \"</strong></big>\";\n            let meta = '';\n            // parseDomForHtml(html,'.topic-header-center&&.topic-meta&&Html')\n            let count = '<span style=\"color: grey\">' + parseDomForHtml(html, '.topic-header-center&&.topic-header-right&&Text') + \"</span>\";\n\n            if (showMeta) {\n                let metaItems = parseDomForArray(html, '.topic-meta&&.meta-item');\n                // setError(JSON.stringify(metaItems));\n                let metaNode = parseDomForHtml(metaItems[2], 'Text');\n                meta = '<font color=\"grey\">' + parseDomForHtml(metaItems[0], 'Text') +\n                    '  ' +\n                    parseDomForHtml(metaItems[1], 'Text') +\n                    '  ' +\n                    '</font><font color=\"' + nodeColor + '\">' + metaNode + '</font><font color=\"grey\">';\n                let metaTags = parseDomForArray('<div>' + metaItems[3] + '</div>', 'div&&.tag');\n                // setError(JSON.stringify(metaTags));\n                let metaTag = '';\n                for (let i = 0; i < metaTags.length; i++) {\n                    metaTag = (metaTag === '' ? metaTag : (metaTag + '  ')) +\n                        parseDomForHtml(metaTags[i], 'Text')\n                }\n                // metaTag = metaTag.replace('置顶', '““置顶””');\n                metaSize = metaSize === '' ? 'small' : metaSize;\n                meta = '<' + metaSize + '>' + meta + '  ' + metaTag + '</font></' + metaSize + '>' + '<br>';\n                // setError(meta);\n            }\n\n            // 👍🏻❤️🧡♡♥💬👁️➿𓁺\n            if (useEmoji)\n                count = count.replace(\"获赞：\", \"❤️ \")\n                .replace(\"评论：\", \"💬 \")\n                .replace(\"查看：\", \"👁️ \");\n\n            let header = \"\" + title + '\\t<small><font color=\"grey\"><a href=\"' + MY_URL + '\">[查看原文]</a></font></small>' + \"<br>\" + meta + count + '';\n\n            d.push({\n                title: header,\n                col_type: colType\n            });\n\n            for (let i = 0; i < 2; i++)\n                d.push({\n                    col_type: 'line'\n                });\n\n            if (showContent) {\n                let title = parseDomForHtml(html, '.content&&Html')\n                    .replaceWithCallback(/<img (src|data-src)=\"(.*?)\"([\\s\\S]*?)>/g, \"<img data-v>\", imgTagReplacement2)\n                    .replace(/<img([\\s\\S]*?)>/g, imgError)\n                    .replace(/<showimg/g, '<img')\n                    .replace(/(<(div)([\\s\\S]*?)>)|<div>|<\\/div>/g, '');\n                d.push({\n                    title: \"<p></p>\" + title,\n                    desc: '',\n                    url: '',\n                    col_type: colType\n                });\n\n            }\n\n            var regExp = /(.*?)￥(.*?)￥(.*)/;\n            if (js.indexOf('>海阔') !== -1) {\n\n                /*if (showContent) {\n                for(var i = 0; i < 2; i++)\n                d.push({\n                       col_type: 'line'\n                  });\n                }*/\n\n                let col = \"text_1\";\n                let list = js.match(/>海阔[\\s\\S]*?<\\//g);\n                if (list != null && list.length !== 0) hasRule = 1;\n                if (list != null && list.length > 1) {\n                    d.push({\n                        title: \"<p></p>\" + \"<big><b>本文所有规则一键导入</b></big>\",\n                        col_type: colType\n                    });\n                }\n                for (let j = 0; j < list.length; j++) {\n                    let title = list[j].split('>')[1].split('</')[0];\n                    let mTitle = title;\n\n                    if (regExp.test(title) === true) {\n                        col = \"text_3\";\n                        if (list.length === 1) mTitle = \"一键导入\";\n                        if (list.length > 1) {\n                            // var regExp1 = /(title\":\"(.*?)\")|(base64:\\/\\/@(.*?)@)|((.*?)@)/;\n                            // setError (RegExp.$2)\n                            mTitle = RegExp.$3;\n                            mTitle = (mTitle != null && mTitle !== '') ? mTitle : title;\n                            switch (RegExp.$2) {\n                                case \"home_rule\":\n                                    /title\":\"(.*?)\"/.test(mTitle);\n                                    mTitle = RegExp.$1;\n                                    break;\n                                case \"home_rule_v2\":\n                                    /base64:\\/\\/@(.*?)@/.test(mTitle);\n                                    mTitle = RegExp.$1;\n                                    break;\n                                case \"js_url\":\n                                    /(.*?)@/.test(mTitle);\n                                    mTitle = RegExp.$1;\n                                    break;\n                                case \"home_rule_url\":\n                                    mTitle = \"首页合集\";\n                                    break;\n                                case \"bookmark_url\":\n                                    mTitle = \"书签合集\";\n                                    break;\n                            }\n                        }\n                    }\n                    title = (mTitle != null && mTitle !== '') ? mTitle : title;\n                    if (title.length > 14) col = \"text_2\";\n\n                    d.push({\n                        title: title,\n                        desc: '🔔‘‘’’<b> 点击导入 </b>🔔',\n                        url: 'rule://' + base64Encode(decodeURIComponent(list[j].split('>')[1].split('</')[0].replace(/amp;/g, '')\n                            .replace(/&lt;/g, '<')\n                            .replace(/&gt;/g, '>'))),\n                        col_type: col\n                    });\n                }\n            } else\n            if (js.indexOf('<code>方圆') !== -1) {\n\n                /*if (showContent) {\n                for(var i = 0; i < 2; i++)\n                d.push({\n                       col_type: 'line'\n                  });\n                }*/\n\n                let list = js.match(/<code>方圆[\\s\\S]*?<\\/code/g);\n\n                if (list != null && list.length !== 0) hasRule = 1;\n                if (list != null && list.length > 1) {\n                    d.push({\n                        title: \"<p></p>\" + \"<big><b>本文所有规则一键导入</b></big>\",\n                        col_type: colType\n                    });\n                }\n\n                for (let j = 0; j < list.length; j++) {\n                    let title = parseDomForHtml(list[j], 'code&&Text');\n                    let mTitle = title;\n\n                    if (regExp.test(title) === true) {\n                        col = \"text_3\";\n                        if (list.length === 1) mTitle = \"一键导入\";\n                        if (list.length > 1) {\n                            mTitle = RegExp.$3;\n                            mTitle = (mTitle != null && mTitle !== '') ? mTitle : title;\n                            switch (RegExp.$2) {\n                                case \"source\":\n                                    /title\":\"(.*?)\"/.test(mTitle);\n                                    mTitle = RegExp.$1;\n                                    break;\n                            }\n                        }\n                    }\n                    title = (mTitle != null && mTitle !== '') ? mTitle : title;\n\n                    d.push({\n                        title: title,\n                        desc: '点击导入',\n                        url: 'rule://' + base64Encode(decodeURIComponent(list[j].split('>')[1].split('</')[0].replace(/amp;/g, '')\n                            .replace(/&lt;/g, '<')\n                            .replace(/&gt;/g, '>'))),\n                        col_type: col\n                    });\n                }\n            } else {\n\n            }\n\n            if (token !== '') {\n                let starIcon = starIcons[0];\n                let likeIcon = likeIcons[0];\n                let commentIcon = commentIcons[0];\n                // let articleIcon = articleIcons[0];\n                let starIconMax = starIcons.length - 1;\n                let likeIconMax = likeIcons.length - 1;\n                let commentIconMax = commentIcons.length - 1;\n                // let articleIconMax = articleIcons.length-1;\n                if (iconIndex === -1) {\n                    let maxLen = Math.max(starIconMax, likeIconMax, commentIconMax /*, articleIconMax*/ );\n                    iconIndex = Math.floor((Math.random() * (maxLen + 1)));\n                }\n                starIcon = starIcons[iconIndex > starIconMax ? starIconMax : iconIndex];\n                likeIcon = likeIcons[iconIndex > likeIconMax ? likeIconMax : iconIndex];\n                commentIcon = commentIcons[iconIndex > commentIconMax ? commentIconMax : iconIndex];\n                // articleIcon = articleIcons[iconIndex > articleIconMax ? articleIconMax : iconIndex];\n                let isStarred = 0;\n                let starStatus = '';\n                try {\n                    starStatus = parseDomForHtml(html, \".favorite.active&&Html\");\n                } catch (e) {\n                    starStatus = ''\n                }\n                if (starStatus !== '') isStarred = 1;\n                // setError(starStatus);\n                d.push({\n                    col_type: 'line',\n                });\n                d.push({ //  text_center_1 icon_small_3\n                    title: isStarred === 0 ? '收藏' : '已收藏',\n                    pic_url: starIcon,\n                    col_type: 'icon_small_3',\n                    url: $(mUrl).lazyRule((token, resultTips, isStarred) => {\n                        // let token =  getItem('hikerbbs_token', '');\n                        var mUrl = input;\n                        let message = '';\n                        if (/topic\\/(\\d+)/.test(mUrl) === true) {\n                            let entityId = RegExp.$1;\n                            if (entityId != null && entityId !== \"\") {\n                                let starUrl = 'https://haikuoshijie.cn/api/topic/favorite/' + entityId;\n                                if (isStarred) {\n                                    starUrl = 'https://haikuoshijie.cn/api/favorite/delete?entityType=topic&entityId=' + entityId;\n                                }\n                                let options = {\n                                    headers: {\n                                        'X-User-Token': token\n                                    },\n                                    body: '',\n                                    method: 'GET'\n                                };\n                                /*setError (options);*/\n                                let starResult = fetch(starUrl, options);\n                                /*setError (starResult);*/\n                                if (resultTips) {\n                                    starResult = JSON.parse(starResult);\n                                    message = starResult.message;\n                                    if (starResult.message === '') {\n                                        if (starResult.success === true) {\n                                            message = isStarred === 1 ? '已取消收藏' : '收藏成功';\n                                            refreshPage(false);\n                                        }\n                                    } else if (starResult.message === '请先登录') {\n                                        setItem('hikerbbs_token', '');\n                                        message = '请先登录';\n                                    }\n                                    message = 'toast://' + message;\n                                }\n                            }\n                        }\n                        return message\n                    }, token, resultTips, isStarred)\n                });\n                d.push({ //  text_center_1 icon_small_3\n                    title: '点赞',\n                    pic_url: likeIcon,\n                    col_type: 'icon_small_3',\n                    url: $(mUrl).lazyRule((token, resultTips) => {\n                        var mUrl = input;\n                        // let token =  getItem('hikerbbs_token', '');\n                        let message = '';\n                        if (/topic\\/(\\d+)/.test(mUrl) === true) {\n                            let entityId = RegExp.$1;\n                            if (entityId != null && entityId !== \"\") {\n                                let likeUrl = 'https://haikuoshijie.cn/api/topic/like/' + entityId;\n                                let options = {\n                                    headers: {\n                                        'X-User-Token': token\n                                    },\n                                    body: '',\n                                    method: 'POST'\n                                };\n                                /*setError (options);*/\n                                let likeResult = fetch(likeUrl, options);\n                                // log(likeResult);\n                                if (resultTips) {\n                                    likeResult = JSON.parse(likeResult);\n                                    message = likeResult.message;\n                                    if (likeResult.message === '') {\n                                        if (likeResult.success === true) message = '点赞成功';\n                                        refreshPage(false);\n                                    } else if (likeResult.message === '请先登录') {\n                                        setItem('hikerbbs_token', '');\n                                        message = '请先登录';\n                                    }\n                                    message = 'toast://' + message;\n                                }\n                            }\n                        }\n                        return message\n                    }, token, resultTips)\n                });\n                d.push({\n                    title: '回复',\n                    pic_url: commentIcon,\n                    col_type: 'icon_small_3',\n                    url: mUrl\n                });\n                /*d.push({\n                    title: '原文',\n                    pic_url: articleIcon,\n                    col_type: 'icon_small_3',\n                    url: mUrl\n                });*/\n                d.push({\n                    col_type: 'line',\n                });\n            } else {\n                if (!getItem(\"hikerbbs_token\", \"\")) {\n                    let loginPage = $.require(\"hiker://page/verify?rule=\" + \"视界论坛R\");\n                    loginPage = 'base64://' + base64Encode(loginPage({ onSuccess(userInfo) { /*log(userInfo)*/ }}))\n                    // log(loginPage)\n                    d.push({\n                        title: \"<p></p>\" + '<small><font color=\"grey\">' + '如需收藏或点赞功能，需先' + '<a href=\"' + loginPage + '\">登录</a>一次再返回刷新' + \"</font></small>\",\n                        col_type: colType\n                    });\n                }\n            }\n\n            if (showComment) {\n                /*if (hasRule) {\n                for(var i = 0; i < 2; i++)\n                d.push({\n                       col_type: 'line'\n                  });\n                }*/\n\n                /cursor:\"(.*?)\"/.test(html);\n                let cursorTemp = RegExp.$1;\n                let cursor = (cursorTemp != null && cursorTemp !== '') ? cursorTemp : '0';\n                putVar({\n                    key: 'cursor',\n                    value: cursor\n                });\n                putVar({\n                    key: 'first_page_cursor',\n                    value: cursor\n                });\n\n                d.push({\n                    title: \"<p></p>\" + \"<big><b>\" + parseDomForHtml(html, '.comment-title&&Html') + \"</b></big>\",\n                    col_type: colType\n                });\n                var pl = parseDom(html, '.comments&&Html')\n                    .match(/<li[\\s\\S]*?<\\/li/g);\n                if (pl == null || pl.length === 0) {\n                    d.push({\n                        title: \"<p></p>\" + '<font color=\"grey\">暂无评论</font>',\n                        col_type: colType\n                    });\n                } else {\n                    for (let j = 0; j < pl.length; j++) {\n                        // /(<(div|p)([\\s\\S]*?)>)|<div>|<p>|<\\/div>|<\\/p>/g\n                        let commentContent = parseDomForHtml(pl[j], '.comment-content&&Html')\n                            .replace(/<img class=\"avatar([\\s\\S]*?)>/g, '')\n                            .replace(/(<(p)([\\s\\S]*?)>)|<p>|<\\/p>/g, '')\n                            .replaceWithCallback(/<img (src|data-src)=\"(.*?)\"([\\s\\S]*?)>/g, \"<img data-v>\", imgTagReplacement2)\n                            .replace(/<img([\\s\\S]*?)>/g, imgError)\n                            .replace(/<showimg/g, '<img');\n                        try {\n                            let commentReplyText = parseDomForHtml(pl[j], '.comment-quote&&Html');\n                            let commentQuoteUsername = parseDomForHtml(commentReplyText, \".quote-nickname&&Html\");\n                            let commentQuoteTime = parseDomForHtml(commentReplyText, \".quote-time&&Html\");\n                            commentReplyText = commentReplyText\n                                .replace(/<a[\\s\\S].*?<\\/a>/g, '');\n                            let commentReplyTextArray = commentReplyText.match(/<p[\\s\\S].*?<\\/p>/g);\n                            commentContent = abbreviateReplyText(commentContent, commentReplyTextArray)\n                                .replace(commentQuoteUsername, '<font color=\"' + quoteUserColor + '\">' + commentQuoteUsername + '</font>')\n                                .replace(commentQuoteTime, '<font color=\"grey\">' + commentQuoteTime + '</font>');\n                        } catch (e) {}\n                        d.push({ // p,-2\n                            title: \"<p></p>\" + commentContent + '<br><small>' + parseDomForHtml(pl[j], '.comment-nickname&&Html').replace(/<a[\\s\\S].*?>/g, '<font color=\"' + userColor + '\">').replace(/<\\/a>/g, \"</font>\") + '\\t\\t<font color=\"grey\">' + parseDomForHtml(pl[j], '.comment-meta--span&&Text') + '</font></small>',\n                            desc: '',\n                            url: MY_URL,\n                            col_type: colType\n                        });\n                        d.push({\n                            col_type: 'line'\n                        });\n                    }\n                }\n            }\n        } catch (e) {}\n    } catch (e) {\n        d.push({\n            title: '<p style=\"text-align: center;\">该页面无法解析或话题不存在</p><p style=\"text-align: center;\"><a href=\"' + MY_URL + '\">查看原文</a></p>',\n            col_type: 'rich_text'\n        })\n    }\n}\n\nres.data = d;\nsetHomeResult(res);"},{"col_type":"movie_3","name":"验证页面","path":"verify","rule":"evalPrivateJS(\"3cLXjtBC0G3dIAf32EY0nQM6hi25ocHyN0ZccoQp9rvV6zJ99kH0brtERsczuW+ccs2yQyVIU6i2gGGGBtsg3I4J1QTByLjOVAGEaoHoTqK0p5bF5a6WC/EAVGEQhokoIYxXX+PgCecuqlu7AtSknxwwGde5U7DxRJtWXHcKWo20LTxYB8R3rdxElnuzOfE9xhpU5+nFZfYUcYRt08/qTfLYnxxJl7s8GhXOfKx0zhP5YL9WDmTqThykJ3WiSjBli6xICWJrSPQh3roXFpagj0rDplVcLva0B+KV/pG5CPRYwPK5IWLmfx9ZbPkVLwSOaLngCTr8K1cYTVNaHNRNiXbyuNPQgL8Q0ptqjywBxEop2i5Jn5Cw/0PMMcIYk5vAGCpbeIRBBmMdaCqOTaAoMB8X7QM3qMk4bEyGt78TnKfJkCaMOQuA+lo3am1jNvZYkCJ4jORjI1ZgTQqE7PfLZNRTPCtd+3/uoo4AuU36yWXXxijikojaTbsvViFyvv8KOsBMioLfn/X4uTLaVRDCCbpDsTIetdlQhA0OAnE8l70tV587KnBZsaGZ9PMkvM38sQwLx9z8lMVg9RBbAe/eb8sVp+Lto47ETvMzB5tq37nTwXujtDYWHns+lHyvmjaN64nS34BX0AeVmW70kCm4X9P92sKA9SK+/NHsqf13COv73R9joSXqLk2Pnl45fpe/EglQ6JH1fZB+QoDxgRJ1WsGgjrP+ORoz0DcOLV2gppR0SPAsYjdnBkO1cCQ6x+WufQr7JW9leGGDU2avMQN0qLOFVEdFethPe+b+LwbSf3z65UoGhFrbVItFAO/k5w/TW1V26oilFYyXFZ+v7EHE8N5XbqPfLG5AAUEvrchS4WZCnCwka1oBQ7196/QOjjQ2F3sMR9d4Dr7U+UYQmHh3FsHL77NcgX2kZESwnzFZ3b8s/mKgae7p8/lhMFcByZxAC7LdWHydx0hZ+QtrU/Nvz4JE5C3nuYWs6PI8fj2qn3sWyT28PhU/UlmjF5aA+epyVC+cXLf/5sJJCNbbRIXrwCp4W3tp0s7c0h9dfNl8+oU9lTjHnYNZ6kQ2KWcNk9a+Pif0cYrLGG+qcfWADOV09fRx4ibYG3+wtppp0I5MEGze3/yGoYpsLT5uyr6CKWQVnjxxc80QwrKOFkgxZ7mfpk3QGZoaLC36Lw4+3JqB0fUs2N81E7Ddo0usxe7HGr/9msD+vhDjV+8bntDyO55xUK6idOPQ8jwM1nJ1du2lmXpBxb0Q5zxlyFpVY50ndwfuhNyuiYQi5a8xWFHWryIBvJqbnx0+EFbKczbrWmOQ3IPS3+sZdjkFUPxOWBME09ciX/q+Mg1EAhfrh7czDIH5rzgW7ZVqG0aUdB1pA9hocpd+bZ0/4ujIw+MrOGONHmxyvq1cLRDQMz5i8/I0W3ZpShUgs6JPE+chD5Af5wrhV13999bxiLaMkRmTj3Ru3UtCyyvLSNZWc/sIn/vWSAHU9nQUEBGUplbqM6Jdj2Wh3M3yh6yKJjdLcYASe1eNTWs+ae5joWCY8Lzupn/6/GAii8S7hgtOfffexp6dFG2t7tbz3y3HhAQ9GuMC3bzT1bZXu785TYinZJjAM722T/fVCbtXOEmFscwhGIKFOk2q8VcUc4akJbcXW4VsX5PECryIT8FTZ/9ma0OlXwM4w1Si6tiP9jqUFe9smi7tvimjjdme8/8W+jSr0oXxHw5gXzjlO9ERdwA8R5bawEr1KzGLyApb9k3keVrbc29pR8V88zWfWR0lMt4tEaT1tpc26aMVyHDKW0c177GihbND7WzX3Hw5ACwUccKpzPeu8LAaHjelSctdU5jvWkMhrRgB5IIqszKUNGYBWiUx+RK+kMAwhRKDqiLleWCuyojp6NRFkHZFFjBneFO6qc76HSw4zkiNQJrO0KgrGbTev+xhmrO8X06m+tkk0ecsF4QaTqRjJFA0riZtTpbc0bL0v0qtxxqdlEW8viEpEu+S7nAWyJ6l2Xi8fe3rxysWYIqTUURsSuuNQe33u5hDmvg6roxrgc8L7pRH6IDHCvBLXw+J2zttCxWofMB5XIcY4va7fyAkU/SI1Q70Coy8t4fFBjB4DbvVSa+aMluqKoPaA/MQMtquiGJ3VyiRHjdKlmOJhuHQ3MUTuxC0hDaVOGB59mmFS93blFbKYzA+zWHPg1o1C9m9rJeNapf8EA39QiNvnV7krCIzAexgU9gMKNYdJ+6XSuU+6BKDe5Mz3vAV27YkJCwmzt+Bpae/Oqn129gsZmfwRyL3UGyiAdZe3M+Y+2ZqwGyLvQa2gwCFMWqSTJ2lmOQHqezjr648kwm9XjUFEzY8HlnLK8tI1lZz+wif+9ZIAdT2PHbvAbMrNAWiNS/uh4i2RkyRox7hPSfyUfwxQfqLaQ6SIyB1n4deNdPBPsna6EkOjlcUfpcHco5LGToSa9PCxYZNPux3IBitzyUVwT1OS7WMWDmqWowP4ATnKcQ9RtJgHSS66lhqdkWK+oJp5DYLHqGFb9x9STCccczbO6D1xdTD8GwlKCIQkWfqv0IvgCZystGEe2E2xFb9ycmlf6n0WqZGE8vUyvn03fGsdbwQOM7OlDL7DvzzsOQnK+/bCc4nRPioJ6uIl1jF5xE5Mn2MIXAN3XVeP2bW2+tAdB0Zt733UGyiAdZe3M+Y+2ZqwGyLvQa2gwCFMWqSTJ2lmOQHqRsNVcw1ozQXfIPW2LQsltUo3sGUVclMl0YESnjcmDz8PVnVL+z1/vdFC8zeWrEtNmfmLl/MxBrEGPFG1+ctBF/9akTFweOhXC5Tf3ynHrKPPXH9ZzTw4Od9/be26buNwCUiXQ3jyDXuq8Hg3zfd5AnkdIn7hu0BddfSYL4ShDvWkjUUJkpXa//XFtaxMQt8DP+cQaojiyMJMO8G1ql+g8GsrAnebfWFkiIV44NVggene1UGCWS3d1sPIaHnrAtEoUCt+ARrHgLZWiZ6OdtqYeSIv7j6+OJ9SE7NAEJAIkh/RhlU7ivx7G1KPasIinrsigWon7fJxU1JMElt4ER4wC+wO5slFfogNk/OPy3BDpJyDWlaANo0/NXNWWzr5ylT+FjIvT7oNGXJ0WXiOQ1NbN9Z8nfk32G9DvIp1lAkl2nRC7LdWHydx0hZ+QtrU/Nvz4SZiK8eR9m3C230+f0JjCDAFtqkNSVT/FY+v+j00b3s44PKDuMroZjPXH4+72bJPXHOqDkUoywHfvt/4sz2iYFwBG1YTBZxxep4VcZ+HcOCyyvLSNZWc/sIn/vWSAHU9pOeKtJGX3ZnUwxacqo+tWa7uL8AbN09NWQn10kxd323Sfu5RbIcnLEG3yeqUIN+ZJ5WqeTzANnA9Ee6weG2/w2Urx2EG2/3jBjKiIWs2NXPJlaCzpidRa0is2FJPVlh/Msry0jWVnP7CJ/71kgB1PbhZS49es64hgo8snU+mt3Xx/0P3Ed9dmduHotrzBkEtlgaBiC+z2SpcxB9gZ6GXypLSXWaj+qEUbGJKEx+jK/vyyvLSNZWc/sIn/vWSAHU9vbO5HxIeRh/pleBN++9aeq9gfAcpO7SOOE6hv33pJd2NXWo7ywrhGdcJN5VytArzjPEJv2PLBemuX8uxAtD0UL44SUOxkgl28uP3g4RGCw/R3lUyr7Vi5Z2C4E7U+EbiNM+LoOsCIVKPLIzMY9UI54ZWAn8PC8OASnUmKt5s4TLvh8W+u1lL/2uKMQhfT2dPPBYsnEes5babEbtGxJaGoU1iznBHKxvFttoVZs4RUT7ckGEsQ9p1EjBgcvWheDEIybaCp71v11JvD4axoU01sBh5OTCl7DvoZqDwoixp0O5mM7rGWBhQ3N9D9RK4FDWVZoeUKna5p2IAwctyh4IRnWt69Ng2JBTTP0d21Qrpy/gaxeCn9NT7oni4PBOjgxbBeUaKO7DcFo/Ure+iGjsDmAzNhkbDFyQQvBRQUqWZILR7mTdnYJ3WFJ0GntGTvEm+0ORha/tKuw0SqLIhIXxCUyn16hUlACQTh2GjJwwEAj0yyvLSNZWc/sIn/vWSAHU9oSXX/0EVz2npCr5sKYVQl08i14APG705ihqnbPcXULNc/HVM1CeZoPkw/fJ9VlwSgOoTdgVRc75vUySMOYCr6YuMUa3TtkughVt0IqrKoSzeYyBFf3dY+u4Ch2A9cyL/hYL5qlMsLe7FzfC0o29YEYo+b5qqTvhBODGBCfbUSywyyvLSNZWc/sIn/vWSAHU9t0ezq6AtpU4FWpELoUrJjsDqE3YFUXO+b1MkjDmAq+mo3sYlYaLS3MFG5W8GXJlncsry0jWVnP7CJ/71kgB1PY499mp8Ss/C3x8mWijcUeh9R7L1yDJwzXM70VWSBd1piYwFmWqXn8fXoh+Jj6nJE5So3GS9w+JfFh/HoOA84qCW3V5+DosWT7eQRcJB/6Ucm8vuGIikhXb9KiyKIYBRw/Zz9mwhatc4hStOXx5KR0dKYPyXQT6opwwf/yyq/bX2JZUCzFVaQ+nzyA8NB+5JpPOlDL7DvzzsOQnK+/bCc4n0edCTxQb/OtvSSEJTuYHxEfUuMHkRXnJeF2e0yTqTnrdW/Ww+kayZes0CKJsDH2L6DzNaYOGj4dWqkT6S5efebdlZRUameQIjQ/NeqBNgdVn3NRjpsEor8nJ5c2w3c3DyyvLSNZWc/sIn/vWSAHU9k85G0eu8oxOWueBLcwhpUvHsp1PjPSkcGlJn+XxV+cRKCoh5TwNkRCSZ7cVd4VMvtBNoxVLQ3Q6RS8uM/VSK2Mn19QRxIda+Tx+nKfD4GRgC/iPfelCYuu9BxR+8VPBEfXjj3eCz5wcbgYWdnrtSFxGO8FP2gPMsWSsfffh+c7coyjMiPW+0CkMAILVNKoGGOeRY4YDcu0q+EeE53AvbonAd6UPWWgR6wLIPnTUftFjFZ171zX2eNtc6EWAA1fZpAkGt4w+eqGh2SkqwIzVfHYC7bozcBnYFCld9FXOOhff7SJV0JMRpE5TaAgUd843RGuCFlpHR3QjshqFPpX6O6pfgKDbpALvs1h8TzTVg4zvVJa8J9q1sJywqs2P5DJ443+hTF7ePUSPBBc/5Ligijk=\")"}],"title":"视界论坛R","author":"微笑&发粪涂墙&Reborn","version":42,"url":"https://haikuoshijie.cn/topics/node/fyAll?p=fypage","col_type":"text_1","class_name":"最新&热门&推荐&视界","class_url":"newest&hot&recommend&1","area_name":"求助&插件&教程&方圆&摸鱼","area_url":"5&7&8&2&6","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar res = {};\nvar d = [];\n// 使用 emoji 图标替换文本，使用/1 不使用/0\nvar useEmoji = 1;\n// 帖子分类颜色\nvar nodeColor = \"#2979FF\";\n// 是否显示点赞数评论数等，显示/1 不显示/0\nvar showLike = 1;\n\n/**\n * 通过插件自动获取 Token 到文件中然后自动读取\n *\n * 注意：以上方的 token 为主\n */\nlet token = getItem('hikerbbs_token', '');\nvar cookie = token === '' ? '' : 'userToken=' + token;\nvar headers = '';\nif (cookie !== '') {\n    headers = ';get;UTF-8;{User-Agent@Android&&Cookie@' + cookie + '}';\n}\n\nvar html = getResCode();\nvar list = parseDomForArray(html, '.topic-list&&.topic-item');\nfor (let j = 0; j < list.length; j++) {\n    let author = parseDomForHtml(list[j], '.topic-author&&Text');\n    let metaItems = parseDomForArray(list[j], '.topic-meta&&.meta-item');\n    // setError(JSON.stringify(metaItems));\n    let metaNode = parseDomForHtml(metaItems[1], 'Text');\n    let meta = parseDomForHtml(metaItems[0], 'Text') +\n        '  ' +\n        '<font color=\"' + nodeColor + '\">' + metaNode + '</font>';\n    let metaTags = parseDomForArray('<div>' + metaItems[2] + '</div>', 'div&&.tag');\n    // setError(JSON.stringify(metaTags));\n    let metaTag = '';\n    for (let i = 0; i < metaTags.length; i++) {\n        metaTag = (metaTag === '' ? metaTag : (metaTag + '  ')) +\n            parseDomForHtml(metaTags[i], 'Text')\n    }\n    metaTag = metaTag.replace('置顶', '““置顶””');\n    meta = meta + '  ' + metaTag;\n    let desc = author + ' ““””' + meta;\n    if (showLike) {\n        let likeItems = parseDomForArray(list[j], '.like&&.like-item');\n        // setError(JSON.stringify(list[j]));\n        let likeCount = parseDomForHtml(likeItems[0], 'Text');\n        let commentCount = parseDomForHtml(likeItems[1], 'Text');\n        let seeCount = parseDomForHtml(likeItems[2], 'Text');\n        let like = '获赞：' + (likeCount != null && likeCount !== 'undefined' && likeCount !== '' ? likeCount : '0') +\n            '\\t\\t' +\n            '评论：' + (commentCount != null && commentCount !== 'undefined' && commentCount !== '' ? commentCount : '0') +\n            '\\t\\t' +\n            '查看：' + (seeCount != null && seeCount !== 'undefined' && seeCount !== '' ? seeCount : '0');\n        // 👍🏻👍❤️🧡♥️💛🖤♡♥💬👁️➿𓁺\n        if (useEmoji)\n            like = like.replace(\"获赞：\", \"❤️ \")\n            .replace(\"评论：\", \"💬 \")\n            .replace(\"查看：\", \"👁️ \");\n        desc = desc + '\\n\\n' + like;\n    }\n    let url = parseDom(list[j], 'h1&&a&&href') + \"#fypage\" + \"#noHistory#\" +\n        (headers === '' ? '' : headers);\n    url = url.replace(/\\n/g, '');\n    // setError(url);\n    // https://haikuoshijie.cn/topic/2982#fypage#noHistory#;GET;utf-8;{Cookie@userToken=xxxxxx}\n    d.push({\n        title: parseDomForHtml(list[j], 'h1&&Text'),\n        desc: desc,\n        url: 'hiker://page/detail#noHistory#',\n        extra: {\n            url: url,\n        }\n    });\n}\nres.data = d;\nsetHomeResult(res);","searchFind":"js:\nvar res = {};\nvar d = [];\n\nlet token = getItem('hikerbbs_token', '');\nvar cookie = token === '' ? '' : 'userToken=' + token;\nvar headers = '';\nif (cookie !== '') {\n    headers = ';get;UTF-8;{User-Agent@Android&&Cookie@' + cookie + '}';\n}\n\n/**\n * 获取搜索源码\n * etc.\n * hiker://empty/#fypage@-1@*11@#**\n * https://cn.bing.com/search?q=site:haikuoshijie.cn+**&first=fypage@-1@*11@&wd=**\n */\nlet urlSplits = MY_URL.split('#');\nlet searchUrl = 'https://cn.bing.com/search?q=site:haikuoshijie.cn+'\n    + urlSplits[2]\n    + '&wd='\n    + urlSplits[2]\n    + '&first='\n    + urlSplits[1];\n\nlet html = fetch(searchUrl, {\n    headers: {\n        'User-Agent': MOBILE_UA\n    },\n})\n\n// setError(html);\n\nvar list = parseDomForArray(html, '#b_results&&.b_algo');\n// log(JSON.stringify(list));\nfor (var j in list) {\n    try {\n        // log(JSON.stringify(list[j]));\n        let url = parseDomForHtml(list[j], 'a&&href');\n        // log(JSON.stringify(url));\n        url = url + \"#fypage\" + \"#noHistory#\" + (headers === \"\" ? \"\" : headers)\n        d.push({\n            title: parseDomForHtml(list[j], 'h2&&Text'),\n            url: 'hiker://page/detail#noHistory#',\n            extra: {\n                url: url,\n            },\n            content: parseDomForHtml(list[j], 'p&&Text').replace(/Translate · /g, ''),\n            desc: url\n        });\n    } catch (e) { }\n}\n\nres.data = d;\nsetSearchResult(res);","search_url":"hiker://empty/#fypage@-1@*11@#**","titleColor":"#ff148e8e","group":"①搜索🔎","detail_col_type":"text_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"let oldTokenFile = 'hiker://files/rules/js/hikerbbs_token.js';\nif (fileExist(oldTokenFile)) {\n    let fileToken = fetch(oldTokenFile, {});\n    if (fileToken != null && fileToken != '') {\n        writeFile(oldTokenFile, '');\n    }\n}","pages":"[{\"col_type\":\"text_1\",\"name\":\"个人配置\",\"path\":\"settings\",\"rule\":\"js:\\n// 是否显示帖子分类，显示/1 不显示/0\\nvar showMeta = 1;\\n// 帖子分类字体大小 big/大 span/中 small/小\\nvar metaSize = 'small';\\n// 帖子分类颜色\\nvar nodeColor = \\\"#2979FF\\\";\\n// 是否显示正文，显示/1 不显示/0\\nvar showContent = 1;\\n// 是否显示评论，显示/1 不显示/0\\nvar showComment = 1;\\n// 是否隐藏图片，隐藏/1 不隐藏/0\\nvar hideImg = 0;\\n// 使用 emoji 图标替换文本，使用/1 不使用/0\\nvar useEmoji = 1;\\n// 评论用户颜色\\nvar userColor = \\\"#2979FF\\\";\\n// 评论回复引用用户颜色\\nvar quoteUserColor = \\\"black\\\";\\n\\n// 是否显示填写 Token 提示，显示/1 不显示/0\\nvar showInputTokenTips = 1;\\n// 是否开启收藏/点赞结果提示，是/1 否/0\\nvar resultTips = 1;\\n// 第几套图标，-1为随机，从下面三个数组挑选\\nvar iconIndex = -1;\\n// 收藏图标\\nvar starIcons = [ \\n    \\\"hiker://files/icon/bbs收藏.svg\\\",\\n/*'https://www.easyicon.net/api/resizeApi.php?id=1286217&size=128',*/\\n];\\nvar starIconsWebMapping = [\\n    \\\"https://cdn.jsdelivr.net/gh/RebornQ/cdn.hiker/icons/bbs收藏.svg\\\"\\n];\\n// 点赞图标\\nvar likeIcons = [ \\n    \\\"hiker://files/icon/bbs点赞.svg\\\",\\n/*'https://www.easyicon.net/api/resizeApi.php?id=1288217&size=128',\\n    'https://www.easyicon.net/api/resizeApi.php?id=1211507&size=128',\\n    'https://www.easyicon.net/api/resizeApi.php?id=1239511&size=128'*/\\n];\\nvar likeIconsWebMapping = [\\n    \\\"https://cdn.jsdelivr.net/gh/RebornQ/cdn.hiker/icons/bbs点赞.svg\\\"\\n];\\n// 回复图标\\nvar commentIcons = [ \\n    \\\"hiker://files/icon/bbs回复.svg\\\",\\n/*'https://www.easyicon.net/api/resizeApi.php?id=1239495&size=128',*/\\n];\\nvar commentIconsWebMapping = [\\n    \\\"https://cdn.jsdelivr.net/gh/RebornQ/cdn.hiker/icons/bbs回复.svg\\\"\\n];\\n// 原文章图标\\n/*var articleIcons = [ 'https://www.easyicon.net/api/resizeApi.php?id=1238522&size=128',\\n];*/\\nif (!fileExist(starIcons[0])) {\\n    writeFile(starIcons[0], request(starIconsWebMapping[0]));\\n}\\nif (!fileExist(likeIcons[0])) {\\n    writeFile(likeIcons[0], request(likeIconsWebMapping[0]));\\n}\\nif (!fileExist(commentIcons[0])) {\\n    writeFile(commentIcons[0], request(commentIconsWebMapping[0]));\\n}\"},{\"col_type\":\"text_1\",\"name\":\"富文本通用函数\",\"path\":\"richtext\",\"rule\":\"js:\\nlet imgError = '<p><font color=\\\"grey\\\">图片暂时无法显示，若要查看请<a href=\\\"' + MY_URL + '\\\">访问原文</a></font></p>';\\nString.prototype.replaceWithConfirm = function (confirmValue, searchValue, replaceValue) {\\n    let returnValue = this;\\n    if (confirmValue) {\\n        returnValue = this.replace(searchValue, replaceValue)\\n    }\\n    return returnValue;\\n};\\nString.prototype.replaceWithCallback = function (searchValue, replaceValue, callback) {\\n    let returnValue = this;\\n    if (callback != null) {\\n        returnValue = callback(this, searchValue, replaceValue);\\n    }\\n    return returnValue;\\n};\\nfunction imgTag(context, imgUrl) {\\n    let replaceString = imgUrl === '' ? imgError : '<p><showimg src=\\\"' + (imgUrl + '@Referer=https://haikuoshijie.cn') + '\\\"></p>';\\n    if (hideImg) {\\n        replaceString = imgUrl === '' ? imgError : '<p><a href=\\\"' + imgUrl + '\\\">[点击查看大图]</a></p>';\\n    }\\n    return context.replace(/<img data-v>/g, replaceString);\\n}\\nfunction imgTagReplacement2(context, searchValue, replaceValue) {\\n    let matchArray = context.match(searchValue);\\n    let returnValue = context;\\n    if (matchArray != null) {\\n        for (let i = 0; i < matchArray.length; i++) {\\n            let item = matchArray[i];\\n            /<img (src|data-src)=\\\"(.*?)\\\"([\\\\s\\\\S]*?)>/.test(item);\\n            let imgUrl = RegExp.$2;\\n            if (imgUrl !== '') {\\n                returnValue = returnValue.replace(item, replaceValue);\\n                returnValue = imgTag(returnValue, imgUrl);\\n            }\\n        }\\n    }\\n    return returnValue;\\n}\\nfunction abbreviateReplyText(context, textArray) {\\n    let content = context;\\n    for (let i = 0; i < textArray.length; i++) {\\n        let text = parseDomForHtml(textArray[i], \\\"p&&Text\\\");\\n        if (text.length > 30) {\\n            content = content.replace(text, text.substring(0, 30) + \\\"......\\\");\\n        }\\n    }\\n    return content;\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"帖子详情\",\"path\":\"detail\",\"rule\":\"js:\\nvar res = {};\\nvar d = [];\\nvar urlSplits = MY_URL.split(\\\"#\\\");\\nvar mUrl = urlSplits[0];\\nvar page = urlSplits[1];\\nvar colType = 'rich_text';\\n// mUrl = MY_PARAMS.link\\n// log(MY_URL)\\n\\n\\neval(JSON.parse(request('hiker://page/settings')).rule)\\n/**\\n * 用户 Token (需要先登录才能获取)\\n *\\n * 抓包 Cookie 中的 userToken= 后面那串东西\\n * 或\\n * 不填写固定值 则需配合专用插件自动获取\\n * 但每次运行视界都需打开一次论坛\\n */\\nvar token = getItem('hikerbbs_token', '');\\n\\neval(JSON.parse(request('hiker://page/richtext')).rule)\\n\\nif (page > 1) {\\n\\n    let cursor = getVar(\\\"cursor\\\");\\n    if (page === '2') cursor = getVar(\\\"first_page_cursor\\\");\\n    cursor = cursor === '' ? '0' : cursor;\\n\\n    let urlTemplate = \\\"http://haikuoshijie.cn/api/comment/list?entityType=topic&entityId={entityId}&cursor={cursor}\\\";\\n    if (/topic\\\\/(\\\\d+)/.test(MY_URL) === true) {\\n        let entityId = RegExp.$1;\\n        if (entityId != null && entityId !== \\\"\\\") {\\n            let noMore = getVar(\\\"noMore\\\" + entityId);\\n            noMore = noMore === '' ? '0' : noMore;\\n            urlTemplate = urlTemplate.replace(\\\"{entityId}\\\", entityId);\\n            url = urlTemplate.replace(\\\"{cursor}\\\", cursor);\\n            // url = \\\"http://haikuoshijie.cn/api/comment/list?entityType=topic&entityId=398&cursor=9183\\\";\\n            let json = {};\\n            try {\\n                json = JSON.parse(fetch(url, {}));\\n                let data = json.data;\\n                let results = data.results;\\n                if (results != null) {\\n                    let nowTime = new Date().getTime();\\n                    putVar({\\n                        key: 'cursor',\\n                        value: data.cursor\\n                    });\\n\\n                    function timeDiff(nowTime, createTime) {\\n                        Date.prototype.format = function(fmt) {\\n                            let o = {\\n                                \\\"M+\\\": this.getMonth() + 1, //月份\\n                                \\\"d+\\\": this.getDate(), //日\\n                                \\\"h+\\\": this.getHours(), //小时\\n                                \\\"m+\\\": this.getMinutes(), //分\\n                                \\\"s+\\\": this.getSeconds(), //秒\\n                                \\\"q+\\\": Math.floor((this.getMonth() + 3) / 3), //季度\\n                                \\\"S\\\": this.getMilliseconds() //毫秒\\n                            };\\n                            if (/(y+)/.test(fmt)) {\\n                                fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \\\"\\\").substr(4 - RegExp.$1.length));\\n                            }\\n                            for (let k in o) {\\n                                if (new RegExp(\\\"(\\\" + k + \\\")\\\").test(fmt)) {\\n                                    fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : ((\\\"00\\\" + o[k]).substr((\\\"\\\" + o[k]).length)));\\n                                }\\n                            }\\n                            return fmt;\\n                        };\\n                        let time = new Date(createTime).format(\\\"yyyy-MM-dd hh:mm:ss\\\");\\n                        let timeDiff = nowTime - createTime;\\n                        let days = Math.floor(timeDiff / (24 * 3600 * 1000)); // 计算出天数\\n                        let dayLeave = timeDiff % (24 * 3600 * 1000); // 计算天数后剩余的时间\\n                        let hours = Math.floor(dayLeave / (3600 * 1000)); // 计算天数后剩余的小时数\\n                        let hourLeave = timeDiff % (3600 * 1000); // 计算剩余小时后剩余的毫秒数\\n                        let minutes = Math.floor(hourLeave / (60 * 1000)); // 计算剩余的分钟数\\n                        if (0 < days && days < 31) {\\n                            time = days + \\\"天前\\\"\\n                        } else if (days < 0) {\\n                            if (hours > 0) {\\n                                time = hours + \\\"小时前\\\";\\n                            } else {\\n                                time = minutes + \\\"分钟前\\\";\\n                            }\\n                        }\\n                        return time;\\n                    }\\n\\n                    for (let i = 0; i < results.length; i++) {\\n                        let result = results[i];\\n                        let quoteContent = '';\\n                        if (result.quote != null) {\\n                            let quote = result.quote;\\n                            let content = parseDomForHtml(quote.content, 'body&&Html');\\n                            let nickname = quote.user.nickname;\\n\\n                            // https://blog.csdn.net/GrootBaby/article/details/99980395\\n                            let createTime = quote.user.createTime;\\n                            let time = timeDiff(nowTime, createTime);\\n\\n                            try {\\n                                content = content\\n                                    .replace(/<a[\\\\s\\\\S].*?<\\\\/a>/g, '');\\n                                let commentReplyTextArray = content.match(/<p[\\\\s\\\\S].*?<\\\\/p>/g);\\n                                content = abbreviateReplyText(content, commentReplyTextArray);\\n                            } catch (e) {}\\n                            quoteContent = '<blockquote class=\\\"comment-quote\\\"><div class=\\\"comment-quote-user\\\"><a class=\\\"quote-nickname\\\"><font color=\\\"' + quoteUserColor + '\\\">' +\\n                                nickname +\\n                                '</font></a><span class=\\\"quote-time\\\"><font color=\\\"grey\\\">' +\\n                                '\\\\t\\\\t' +\\n                                time +\\n                                '</font></span></div><div itemprop=\\\"text\\\">' +\\n                                content +\\n                                '</div></blockquote>';\\n                        }\\n                        let content = '<p>' + result.content + '</p>';\\n                        let meta = '<br><small><font color=\\\"' + userColor + '\\\">' +\\n                            result.user.nickname +\\n                            '</font>\\\\t\\\\t<font color=\\\"grey\\\">' +\\n                            timeDiff(nowTime, result.createTime) +\\n                            '\\\\t\\\\t回复' +\\n                            '</font></small>';\\n                        let commentContent = quoteContent + content + meta;\\n                        let title = commentContent\\n                            .replace(/<img class=\\\"avatar([\\\\s\\\\S]*?)>/g, '')\\n                            .replace(/(<(p)([\\\\s\\\\S]*?)>)|<p>|<\\\\/p>/g, '')\\n                            .replaceWithCallback(/<img (src|data-src)=\\\"(.*?)\\\"([\\\\s\\\\S]*?)>/g, \\\"<img data-v>\\\", imgTagReplacement2)\\n                            .replace(/<img([\\\\s\\\\S]*?)>/g, imgError)\\n                            .replace(/<showimg/g, '<img');\\n                        d.push({\\n                            title: title,\\n                            desc: '',\\n                            url: MY_URL,\\n                            col_type: colType\\n                        });\\n                        d.push({\\n                            col_type: 'line'\\n                        });\\n                    }\\n                } else {\\n                    if (noMore) {\\n                        d.push({\\n                            title: \\\"<p></p>\\\" + '<center><font color=\\\"grey\\\">已无更多评论</font></center>',\\n                            col_type: colType\\n                        });\\n                        putVar({\\n                            key: 'noMore' + entityId,\\n                            value: 1\\n                        });\\n                    }\\n                }\\n            } catch (e) {}\\n        }\\n    }\\n} else {\\n    var html = getResCode();\\n    try {\\n        var js = parseDom(html, '.main-content&&Html');\\n        var hasRule = 0;\\n\\n        // setError(html);\\n\\n        try {\\n\\n            let title = '<p></p><big style=\\\"padding-left: 15px\\\"><strong>' + parseDomForHtml(html, '.topic-header-center&&h1&&Html') + \\\"</strong></big>\\\";\\n            let meta = '';\\n            // parseDomForHtml(html,'.topic-header-center&&.topic-meta&&Html')\\n            let count = '<span style=\\\"color: grey\\\">' + parseDomForHtml(html, '.topic-header-center&&.topic-header-right&&Text') + \\\"</span>\\\";\\n\\n            if (showMeta) {\\n                let metaItems = parseDomForArray(html, '.topic-meta&&.meta-item');\\n                // setError(JSON.stringify(metaItems));\\n                let metaNode = parseDomForHtml(metaItems[2], 'Text');\\n                meta = '<font color=\\\"grey\\\">' + parseDomForHtml(metaItems[0], 'Text') +\\n                    '  ' +\\n                    parseDomForHtml(metaItems[1], 'Text') +\\n                    '  ' +\\n                    '</font><font color=\\\"' + nodeColor + '\\\">' + metaNode + '</font><font color=\\\"grey\\\">';\\n                let metaTags = parseDomForArray('<div>' + metaItems[3] + '</div>', 'div&&.tag');\\n                // setError(JSON.stringify(metaTags));\\n                let metaTag = '';\\n                for (let i = 0; i < metaTags.length; i++) {\\n                    metaTag = (metaTag === '' ? metaTag : (metaTag + '  ')) +\\n                        parseDomForHtml(metaTags[i], 'Text')\\n                }\\n                // metaTag = metaTag.replace('置顶', '““置顶””');\\n                metaSize = metaSize === '' ? 'small' : metaSize;\\n                meta = '<' + metaSize + '>' + meta + '  ' + metaTag + '</font></' + metaSize + '>' + '<br>';\\n                // setError(meta);\\n            }\\n\\n            // 👍🏻❤️🧡♡♥💬👁️➿𓁺\\n            if (useEmoji)\\n                count = count.replace(\\\"获赞：\\\", \\\"❤️ \\\")\\n                .replace(\\\"评论：\\\", \\\"💬 \\\")\\n                .replace(\\\"查看：\\\", \\\"👁️ \\\");\\n\\n            let header = \\\"\\\" + title + '\\\\t<small><font color=\\\"grey\\\"><a href=\\\"' + MY_URL + '\\\">[查看原文]</a></font></small>' + \\\"<br>\\\" + meta + count + '';\\n\\n            d.push({\\n                title: header,\\n                col_type: colType\\n            });\\n\\n            for (let i = 0; i < 2; i++)\\n                d.push({\\n                    col_type: 'line'\\n                });\\n\\n            if (showContent) {\\n                let title = parseDomForHtml(html, '.content&&Html')\\n                    .replaceWithCallback(/<img (src|data-src)=\\\"(.*?)\\\"([\\\\s\\\\S]*?)>/g, \\\"<img data-v>\\\", imgTagReplacement2)\\n                    .replace(/<img([\\\\s\\\\S]*?)>/g, imgError)\\n                    .replace(/<showimg/g, '<img')\\n                    .replace(/(<(div)([\\\\s\\\\S]*?)>)|<div>|<\\\\/div>/g, '');\\n                d.push({\\n                    title: \\\"<p></p>\\\" + title,\\n                    desc: '',\\n                    url: '',\\n                    col_type: colType\\n                });\\n\\n            }\\n\\n            var regExp = /(.*?)￥(.*?)￥(.*)/;\\n            if (js.indexOf('>海阔') !== -1) {\\n\\n                /*if (showContent) {\\n                for(var i = 0; i < 2; i++)\\n                d.push({\\n                       col_type: 'line'\\n                  });\\n                }*/\\n\\n                let col = \\\"text_1\\\";\\n                let list = js.match(/>海阔[\\\\s\\\\S]*?<\\\\//g);\\n                if (list != null && list.length !== 0) hasRule = 1;\\n                if (list != null && list.length > 1) {\\n                    d.push({\\n                        title: \\\"<p></p>\\\" + \\\"<big><b>本文所有规则一键导入</b></big>\\\",\\n                        col_type: colType\\n                    });\\n                }\\n                for (let j = 0; j < list.length; j++) {\\n                    let title = list[j].split('>')[1].split('</')[0];\\n                    let mTitle = title;\\n\\n                    if (regExp.test(title) === true) {\\n                        col = \\\"text_3\\\";\\n                        if (list.length === 1) mTitle = \\\"一键导入\\\";\\n                        if (list.length > 1) {\\n                            // var regExp1 = /(title\\\":\\\"(.*?)\\\")|(base64:\\\\/\\\\/@(.*?)@)|((.*?)@)/;\\n                            // setError (RegExp.$2)\\n                            mTitle = RegExp.$3;\\n                            mTitle = (mTitle != null && mTitle !== '') ? mTitle : title;\\n                            switch (RegExp.$2) {\\n                                case \\\"home_rule\\\":\\n                                    /title\\\":\\\"(.*?)\\\"/.test(mTitle);\\n                                    mTitle = RegExp.$1;\\n                                    break;\\n                                case \\\"home_rule_v2\\\":\\n                                    /base64:\\\\/\\\\/@(.*?)@/.test(mTitle);\\n                                    mTitle = RegExp.$1;\\n                                    break;\\n                                case \\\"js_url\\\":\\n                                    /(.*?)@/.test(mTitle);\\n                                    mTitle = RegExp.$1;\\n                                    break;\\n                                case \\\"home_rule_url\\\":\\n                                    mTitle = \\\"首页合集\\\";\\n                                    break;\\n                                case \\\"bookmark_url\\\":\\n                                    mTitle = \\\"书签合集\\\";\\n                                    break;\\n                            }\\n                        }\\n                    }\\n                    title = (mTitle != null && mTitle !== '') ? mTitle : title;\\n                    if (title.length > 14) col = \\\"text_2\\\";\\n\\n                    d.push({\\n                        title: title,\\n                        desc: '🔔‘‘’’<b> 点击导入 </b>🔔',\\n                        url: 'rule://' + base64Encode(decodeURIComponent(list[j].split('>')[1].split('</')[0].replace(/amp;/g, '')\\n                            .replace(/&lt;/g, '<')\\n                            .replace(/&gt;/g, '>'))),\\n                        col_type: col\\n                    });\\n                }\\n            } else\\n            if (js.indexOf('<code>方圆') !== -1) {\\n\\n                /*if (showContent) {\\n                for(var i = 0; i < 2; i++)\\n                d.push({\\n                       col_type: 'line'\\n                  });\\n                }*/\\n\\n                let list = js.match(/<code>方圆[\\\\s\\\\S]*?<\\\\/code/g);\\n\\n                if (list != null && list.length !== 0) hasRule = 1;\\n                if (list != null && list.length > 1) {\\n                    d.push({\\n                        title: \\\"<p></p>\\\" + \\\"<big><b>本文所有规则一键导入</b></big>\\\",\\n                        col_type: colType\\n                    });\\n                }\\n\\n                for (let j = 0; j < list.length; j++) {\\n                    let title = parseDomForHtml(list[j], 'code&&Text');\\n                    let mTitle = title;\\n\\n                    if (regExp.test(title) === true) {\\n                        col = \\\"text_3\\\";\\n                        if (list.length === 1) mTitle = \\\"一键导入\\\";\\n                        if (list.length > 1) {\\n                            mTitle = RegExp.$3;\\n                            mTitle = (mTitle != null && mTitle !== '') ? mTitle : title;\\n                            switch (RegExp.$2) {\\n                                case \\\"source\\\":\\n                                    /title\\\":\\\"(.*?)\\\"/.test(mTitle);\\n                                    mTitle = RegExp.$1;\\n                                    break;\\n                            }\\n                        }\\n                    }\\n                    title = (mTitle != null && mTitle !== '') ? mTitle : title;\\n\\n                    d.push({\\n                        title: title,\\n                        desc: '点击导入',\\n                        url: 'rule://' + base64Encode(decodeURIComponent(list[j].split('>')[1].split('</')[0].replace(/amp;/g, '')\\n                            .replace(/&lt;/g, '<')\\n                            .replace(/&gt;/g, '>'))),\\n                        col_type: col\\n                    });\\n                }\\n            } else {\\n\\n            }\\n\\n            if (token !== '') {\\n                let starIcon = starIcons[0];\\n                let likeIcon = likeIcons[0];\\n                let commentIcon = commentIcons[0];\\n                // let articleIcon = articleIcons[0];\\n                let starIconMax = starIcons.length - 1;\\n                let likeIconMax = likeIcons.length - 1;\\n                let commentIconMax = commentIcons.length - 1;\\n                // let articleIconMax = articleIcons.length-1;\\n                if (iconIndex === -1) {\\n                    let maxLen = Math.max(starIconMax, likeIconMax, commentIconMax /*, articleIconMax*/ );\\n                    iconIndex = Math.floor((Math.random() * (maxLen + 1)));\\n                }\\n                starIcon = starIcons[iconIndex > starIconMax ? starIconMax : iconIndex];\\n                likeIcon = likeIcons[iconIndex > likeIconMax ? likeIconMax : iconIndex];\\n                commentIcon = commentIcons[iconIndex > commentIconMax ? commentIconMax : iconIndex];\\n                // articleIcon = articleIcons[iconIndex > articleIconMax ? articleIconMax : iconIndex];\\n                let isStarred = 0;\\n                let starStatus = '';\\n                try {\\n                    starStatus = parseDomForHtml(html, \\\".favorite.active&&Html\\\");\\n                } catch (e) {\\n                    starStatus = ''\\n                }\\n                if (starStatus !== '') isStarred = 1;\\n                // setError(starStatus);\\n                d.push({\\n                    col_type: 'line',\\n                });\\n                d.push({ //  text_center_1 icon_small_3\\n                    title: isStarred === 0 ? '收藏' : '已收藏',\\n                    pic_url: starIcon,\\n                    col_type: 'icon_small_3',\\n                    url: $(mUrl).lazyRule((token, resultTips, isStarred) => {\\n                        // let token =  getItem('hikerbbs_token', '');\\n                        var mUrl = input;\\n                        let message = '';\\n                        if (/topic\\\\/(\\\\d+)/.test(mUrl) === true) {\\n                            let entityId = RegExp.$1;\\n                            if (entityId != null && entityId !== \\\"\\\") {\\n                                let starUrl = 'https://haikuoshijie.cn/api/topic/favorite/' + entityId;\\n                                if (isStarred) {\\n                                    starUrl = 'https://haikuoshijie.cn/api/favorite/delete?entityType=topic&entityId=' + entityId;\\n                                }\\n                                let options = {\\n                                    headers: {\\n                                        'X-User-Token': token\\n                                    },\\n                                    body: '',\\n                                    method: 'GET'\\n                                };\\n                                /*setError (options);*/\\n                                let starResult = fetch(starUrl, options);\\n                                /*setError (starResult);*/\\n                                if (resultTips) {\\n                                    starResult = JSON.parse(starResult);\\n                                    message = starResult.message;\\n                                    if (starResult.message === '') {\\n                                        if (starResult.success === true) {\\n                                            message = isStarred === 1 ? '已取消收藏' : '收藏成功';\\n                                            refreshPage(false);\\n                                        }\\n                                    } else if (starResult.message === '请先登录') {\\n                                        setItem('hikerbbs_token', '');\\n                                        message = '请先登录';\\n                                    }\\n                                    message = 'toast://' + message;\\n                                }\\n                            }\\n                        }\\n                        return message\\n                    }, token, resultTips, isStarred)\\n                });\\n                d.push({ //  text_center_1 icon_small_3\\n                    title: '点赞',\\n                    pic_url: likeIcon,\\n                    col_type: 'icon_small_3',\\n                    url: $(mUrl).lazyRule((token, resultTips) => {\\n                        var mUrl = input;\\n                        // let token =  getItem('hikerbbs_token', '');\\n                        let message = '';\\n                        if (/topic\\\\/(\\\\d+)/.test(mUrl) === true) {\\n                            let entityId = RegExp.$1;\\n                            if (entityId != null && entityId !== \\\"\\\") {\\n                                let likeUrl = 'https://haikuoshijie.cn/api/topic/like/' + entityId;\\n                                let options = {\\n                                    headers: {\\n                                        'X-User-Token': token\\n                                    },\\n                                    body: '',\\n                                    method: 'POST'\\n                                };\\n                                /*setError (options);*/\\n                                let likeResult = fetch(likeUrl, options);\\n                                // log(likeResult);\\n                                if (resultTips) {\\n                                    likeResult = JSON.parse(likeResult);\\n                                    message = likeResult.message;\\n                                    if (likeResult.message === '') {\\n                                        if (likeResult.success === true) message = '点赞成功';\\n                                        refreshPage(false);\\n                                    } else if (likeResult.message === '请先登录') {\\n                                        setItem('hikerbbs_token', '');\\n                                        message = '请先登录';\\n                                    }\\n                                    message = 'toast://' + message;\\n                                }\\n                            }\\n                        }\\n                        return message\\n                    }, token, resultTips)\\n                });\\n                d.push({\\n                    title: '回复',\\n                    pic_url: commentIcon,\\n                    col_type: 'icon_small_3',\\n                    url: mUrl\\n                });\\n                /*d.push({\\n                    title: '原文',\\n                    pic_url: articleIcon,\\n                    col_type: 'icon_small_3',\\n                    url: mUrl\\n                });*/\\n                d.push({\\n                    col_type: 'line',\\n                });\\n            } else {\\n                if (!getItem(\\\"hikerbbs_token\\\", \\\"\\\")) {\\n                    let loginPage = $.require(\\\"hiker://page/verify?rule=\\\" + \\\"视界论坛R\\\");\\n                    loginPage = 'base64://' + base64Encode(loginPage({ onSuccess(userInfo) { /*log(userInfo)*/ }}))\\n                    // log(loginPage)\\n                    d.push({\\n                        title: \\\"<p></p>\\\" + '<small><font color=\\\"grey\\\">' + '如需收藏或点赞功能，需先' + '<a href=\\\"' + loginPage + '\\\">登录</a>一次再返回刷新' + \\\"</font></small>\\\",\\n                        col_type: colType\\n                    });\\n                }\\n            }\\n\\n            if (showComment) {\\n                /*if (hasRule) {\\n                for(var i = 0; i < 2; i++)\\n                d.push({\\n                       col_type: 'line'\\n                  });\\n                }*/\\n\\n                /cursor:\\\"(.*?)\\\"/.test(html);\\n                let cursorTemp = RegExp.$1;\\n                let cursor = (cursorTemp != null && cursorTemp !== '') ? cursorTemp : '0';\\n                putVar({\\n                    key: 'cursor',\\n                    value: cursor\\n                });\\n                putVar({\\n                    key: 'first_page_cursor',\\n                    value: cursor\\n                });\\n\\n                d.push({\\n                    title: \\\"<p></p>\\\" + \\\"<big><b>\\\" + parseDomForHtml(html, '.comment-title&&Html') + \\\"</b></big>\\\",\\n                    col_type: colType\\n                });\\n                var pl = parseDom(html, '.comments&&Html')\\n                    .match(/<li[\\\\s\\\\S]*?<\\\\/li/g);\\n                if (pl == null || pl.length === 0) {\\n                    d.push({\\n                        title: \\\"<p></p>\\\" + '<font color=\\\"grey\\\">暂无评论</font>',\\n                        col_type: colType\\n                    });\\n                } else {\\n                    for (let j = 0; j < pl.length; j++) {\\n                        // /(<(div|p)([\\\\s\\\\S]*?)>)|<div>|<p>|<\\\\/div>|<\\\\/p>/g\\n                        let commentContent = parseDomForHtml(pl[j], '.comment-content&&Html')\\n                            .replace(/<img class=\\\"avatar([\\\\s\\\\S]*?)>/g, '')\\n                            .replace(/(<(p)([\\\\s\\\\S]*?)>)|<p>|<\\\\/p>/g, '')\\n                            .replaceWithCallback(/<img (src|data-src)=\\\"(.*?)\\\"([\\\\s\\\\S]*?)>/g, \\\"<img data-v>\\\", imgTagReplacement2)\\n                            .replace(/<img([\\\\s\\\\S]*?)>/g, imgError)\\n                            .replace(/<showimg/g, '<img');\\n                        try {\\n                            let commentReplyText = parseDomForHtml(pl[j], '.comment-quote&&Html');\\n                            let commentQuoteUsername = parseDomForHtml(commentReplyText, \\\".quote-nickname&&Html\\\");\\n                            let commentQuoteTime = parseDomForHtml(commentReplyText, \\\".quote-time&&Html\\\");\\n                            commentReplyText = commentReplyText\\n                                .replace(/<a[\\\\s\\\\S].*?<\\\\/a>/g, '');\\n                            let commentReplyTextArray = commentReplyText.match(/<p[\\\\s\\\\S].*?<\\\\/p>/g);\\n                            commentContent = abbreviateReplyText(commentContent, commentReplyTextArray)\\n                                .replace(commentQuoteUsername, '<font color=\\\"' + quoteUserColor + '\\\">' + commentQuoteUsername + '</font>')\\n                                .replace(commentQuoteTime, '<font color=\\\"grey\\\">' + commentQuoteTime + '</font>');\\n                        } catch (e) {}\\n                        d.push({ // p,-2\\n                            title: \\\"<p></p>\\\" + commentContent + '<br><small>' + parseDomForHtml(pl[j], '.comment-nickname&&Html').replace(/<a[\\\\s\\\\S].*?>/g, '<font color=\\\"' + userColor + '\\\">').replace(/<\\\\/a>/g, \\\"</font>\\\") + '\\\\t\\\\t<font color=\\\"grey\\\">' + parseDomForHtml(pl[j], '.comment-meta--span&&Text') + '</font></small>',\\n                            desc: '',\\n                            url: MY_URL,\\n                            col_type: colType\\n                        });\\n                        d.push({\\n                            col_type: 'line'\\n                        });\\n                    }\\n                }\\n            }\\n        } catch (e) {}\\n    } catch (e) {\\n        d.push({\\n            title: '<p style=\\\"text-align: center;\\\">该页面无法解析或话题不存在</p><p style=\\\"text-align: center;\\\"><a href=\\\"' + MY_URL + '\\\">查看原文</a></p>',\\n            col_type: 'rich_text'\\n        })\\n    }\\n}\\n\\nres.data = d;\\nsetHomeResult(res);\"},{\"col_type\":\"movie_3\",\"name\":\"验证页面\",\"path\":\"verify\",\"rule\":\"evalPrivateJS(\\\"3cLXjtBC0G3dIAf32EY0nQM6hi25ocHyN0ZccoQp9rvV6zJ99kH0brtERsczuW+ccs2yQyVIU6i2gGGGBtsg3I4J1QTByLjOVAGEaoHoTqK0p5bF5a6WC/EAVGEQhokoIYxXX+PgCecuqlu7AtSknxwwGde5U7DxRJtWXHcKWo20LTxYB8R3rdxElnuzOfE9xhpU5+nFZfYUcYRt08/qTfLYnxxJl7s8GhXOfKx0zhP5YL9WDmTqThykJ3WiSjBli6xICWJrSPQh3roXFpagj0rDplVcLva0B+KV/pG5CPRYwPK5IWLmfx9ZbPkVLwSOaLngCTr8K1cYTVNaHNRNiXbyuNPQgL8Q0ptqjywBxEop2i5Jn5Cw/0PMMcIYk5vAGCpbeIRBBmMdaCqOTaAoMB8X7QM3qMk4bEyGt78TnKfJkCaMOQuA+lo3am1jNvZYkCJ4jORjI1ZgTQqE7PfLZNRTPCtd+3/uoo4AuU36yWXXxijikojaTbsvViFyvv8KOsBMioLfn/X4uTLaVRDCCbpDsTIetdlQhA0OAnE8l70tV587KnBZsaGZ9PMkvM38sQwLx9z8lMVg9RBbAe/eb8sVp+Lto47ETvMzB5tq37nTwXujtDYWHns+lHyvmjaN64nS34BX0AeVmW70kCm4X9P92sKA9SK+/NHsqf13COv73R9joSXqLk2Pnl45fpe/EglQ6JH1fZB+QoDxgRJ1WsGgjrP+ORoz0DcOLV2gppR0SPAsYjdnBkO1cCQ6x+WufQr7JW9leGGDU2avMQN0qLOFVEdFethPe+b+LwbSf3z65UoGhFrbVItFAO/k5w/TW1V26oilFYyXFZ+v7EHE8N5XbqPfLG5AAUEvrchS4WZCnCwka1oBQ7196/QOjjQ2F3sMR9d4Dr7U+UYQmHh3FsHL77NcgX2kZESwnzFZ3b8s/mKgae7p8/lhMFcByZxAC7LdWHydx0hZ+QtrU/Nvz4JE5C3nuYWs6PI8fj2qn3sWyT28PhU/UlmjF5aA+epyVC+cXLf/5sJJCNbbRIXrwCp4W3tp0s7c0h9dfNl8+oU9lTjHnYNZ6kQ2KWcNk9a+Pif0cYrLGG+qcfWADOV09fRx4ibYG3+wtppp0I5MEGze3/yGoYpsLT5uyr6CKWQVnjxxc80QwrKOFkgxZ7mfpk3QGZoaLC36Lw4+3JqB0fUs2N81E7Ddo0usxe7HGr/9msD+vhDjV+8bntDyO55xUK6idOPQ8jwM1nJ1du2lmXpBxb0Q5zxlyFpVY50ndwfuhNyuiYQi5a8xWFHWryIBvJqbnx0+EFbKczbrWmOQ3IPS3+sZdjkFUPxOWBME09ciX/q+Mg1EAhfrh7czDIH5rzgW7ZVqG0aUdB1pA9hocpd+bZ0/4ujIw+MrOGONHmxyvq1cLRDQMz5i8/I0W3ZpShUgs6JPE+chD5Af5wrhV13999bxiLaMkRmTj3Ru3UtCyyvLSNZWc/sIn/vWSAHU9nQUEBGUplbqM6Jdj2Wh3M3yh6yKJjdLcYASe1eNTWs+ae5joWCY8Lzupn/6/GAii8S7hgtOfffexp6dFG2t7tbz3y3HhAQ9GuMC3bzT1bZXu785TYinZJjAM722T/fVCbtXOEmFscwhGIKFOk2q8VcUc4akJbcXW4VsX5PECryIT8FTZ/9ma0OlXwM4w1Si6tiP9jqUFe9smi7tvimjjdme8/8W+jSr0oXxHw5gXzjlO9ERdwA8R5bawEr1KzGLyApb9k3keVrbc29pR8V88zWfWR0lMt4tEaT1tpc26aMVyHDKW0c177GihbND7WzX3Hw5ACwUccKpzPeu8LAaHjelSctdU5jvWkMhrRgB5IIqszKUNGYBWiUx+RK+kMAwhRKDqiLleWCuyojp6NRFkHZFFjBneFO6qc76HSw4zkiNQJrO0KgrGbTev+xhmrO8X06m+tkk0ecsF4QaTqRjJFA0riZtTpbc0bL0v0qtxxqdlEW8viEpEu+S7nAWyJ6l2Xi8fe3rxysWYIqTUURsSuuNQe33u5hDmvg6roxrgc8L7pRH6IDHCvBLXw+J2zttCxWofMB5XIcY4va7fyAkU/SI1Q70Coy8t4fFBjB4DbvVSa+aMluqKoPaA/MQMtquiGJ3VyiRHjdKlmOJhuHQ3MUTuxC0hDaVOGB59mmFS93blFbKYzA+zWHPg1o1C9m9rJeNapf8EA39QiNvnV7krCIzAexgU9gMKNYdJ+6XSuU+6BKDe5Mz3vAV27YkJCwmzt+Bpae/Oqn129gsZmfwRyL3UGyiAdZe3M+Y+2ZqwGyLvQa2gwCFMWqSTJ2lmOQHqezjr648kwm9XjUFEzY8HlnLK8tI1lZz+wif+9ZIAdT2PHbvAbMrNAWiNS/uh4i2RkyRox7hPSfyUfwxQfqLaQ6SIyB1n4deNdPBPsna6EkOjlcUfpcHco5LGToSa9PCxYZNPux3IBitzyUVwT1OS7WMWDmqWowP4ATnKcQ9RtJgHSS66lhqdkWK+oJp5DYLHqGFb9x9STCccczbO6D1xdTD8GwlKCIQkWfqv0IvgCZystGEe2E2xFb9ycmlf6n0WqZGE8vUyvn03fGsdbwQOM7OlDL7DvzzsOQnK+/bCc4nRPioJ6uIl1jF5xE5Mn2MIXAN3XVeP2bW2+tAdB0Zt733UGyiAdZe3M+Y+2ZqwGyLvQa2gwCFMWqSTJ2lmOQHqRsNVcw1ozQXfIPW2LQsltUo3sGUVclMl0YESnjcmDz8PVnVL+z1/vdFC8zeWrEtNmfmLl/MxBrEGPFG1+ctBF/9akTFweOhXC5Tf3ynHrKPPXH9ZzTw4Od9/be26buNwCUiXQ3jyDXuq8Hg3zfd5AnkdIn7hu0BddfSYL4ShDvWkjUUJkpXa//XFtaxMQt8DP+cQaojiyMJMO8G1ql+g8GsrAnebfWFkiIV44NVggene1UGCWS3d1sPIaHnrAtEoUCt+ARrHgLZWiZ6OdtqYeSIv7j6+OJ9SE7NAEJAIkh/RhlU7ivx7G1KPasIinrsigWon7fJxU1JMElt4ER4wC+wO5slFfogNk/OPy3BDpJyDWlaANo0/NXNWWzr5ylT+FjIvT7oNGXJ0WXiOQ1NbN9Z8nfk32G9DvIp1lAkl2nRC7LdWHydx0hZ+QtrU/Nvz4SZiK8eR9m3C230+f0JjCDAFtqkNSVT/FY+v+j00b3s44PKDuMroZjPXH4+72bJPXHOqDkUoywHfvt/4sz2iYFwBG1YTBZxxep4VcZ+HcOCyyvLSNZWc/sIn/vWSAHU9pOeKtJGX3ZnUwxacqo+tWa7uL8AbN09NWQn10kxd323Sfu5RbIcnLEG3yeqUIN+ZJ5WqeTzANnA9Ee6weG2/w2Urx2EG2/3jBjKiIWs2NXPJlaCzpidRa0is2FJPVlh/Msry0jWVnP7CJ/71kgB1PbhZS49es64hgo8snU+mt3Xx/0P3Ed9dmduHotrzBkEtlgaBiC+z2SpcxB9gZ6GXypLSXWaj+qEUbGJKEx+jK/vyyvLSNZWc/sIn/vWSAHU9vbO5HxIeRh/pleBN++9aeq9gfAcpO7SOOE6hv33pJd2NXWo7ywrhGdcJN5VytArzjPEJv2PLBemuX8uxAtD0UL44SUOxkgl28uP3g4RGCw/R3lUyr7Vi5Z2C4E7U+EbiNM+LoOsCIVKPLIzMY9UI54ZWAn8PC8OASnUmKt5s4TLvh8W+u1lL/2uKMQhfT2dPPBYsnEes5babEbtGxJaGoU1iznBHKxvFttoVZs4RUT7ckGEsQ9p1EjBgcvWheDEIybaCp71v11JvD4axoU01sBh5OTCl7DvoZqDwoixp0O5mM7rGWBhQ3N9D9RK4FDWVZoeUKna5p2IAwctyh4IRnWt69Ng2JBTTP0d21Qrpy/gaxeCn9NT7oni4PBOjgxbBeUaKO7DcFo/Ure+iGjsDmAzNhkbDFyQQvBRQUqWZILR7mTdnYJ3WFJ0GntGTvEm+0ORha/tKuw0SqLIhIXxCUyn16hUlACQTh2GjJwwEAj0yyvLSNZWc/sIn/vWSAHU9oSXX/0EVz2npCr5sKYVQl08i14APG705ihqnbPcXULNc/HVM1CeZoPkw/fJ9VlwSgOoTdgVRc75vUySMOYCr6YuMUa3TtkughVt0IqrKoSzeYyBFf3dY+u4Ch2A9cyL/hYL5qlMsLe7FzfC0o29YEYo+b5qqTvhBODGBCfbUSywyyvLSNZWc/sIn/vWSAHU9t0ezq6AtpU4FWpELoUrJjsDqE3YFUXO+b1MkjDmAq+mo3sYlYaLS3MFG5W8GXJlncsry0jWVnP7CJ/71kgB1PY499mp8Ss/C3x8mWijcUeh9R7L1yDJwzXM70VWSBd1piYwFmWqXn8fXoh+Jj6nJE5So3GS9w+JfFh/HoOA84qCW3V5+DosWT7eQRcJB/6Ucm8vuGIikhXb9KiyKIYBRw/Zz9mwhatc4hStOXx5KR0dKYPyXQT6opwwf/yyq/bX2JZUCzFVaQ+nzyA8NB+5JpPOlDL7DvzzsOQnK+/bCc4n0edCTxQb/OtvSSEJTuYHxEfUuMHkRXnJeF2e0yTqTnrdW/Ww+kayZes0CKJsDH2L6DzNaYOGj4dWqkT6S5efebdlZRUameQIjQ/NeqBNgdVn3NRjpsEor8nJ5c2w3c3DyyvLSNZWc/sIn/vWSAHU9k85G0eu8oxOWueBLcwhpUvHsp1PjPSkcGlJn+XxV+cRKCoh5TwNkRCSZ7cVd4VMvtBNoxVLQ3Q6RS8uM/VSK2Mn19QRxIda+Tx+nKfD4GRgC/iPfelCYuu9BxR+8VPBEfXjj3eCz5wcbgYWdnrtSFxGO8FP2gPMsWSsfffh+c7coyjMiPW+0CkMAILVNKoGGOeRY4YDcu0q+EeE53AvbonAd6UPWWgR6wLIPnTUftFjFZ171zX2eNtc6EWAA1fZpAkGt4w+eqGh2SkqwIzVfHYC7bozcBnYFCld9FXOOhff7SJV0JMRpE5TaAgUd843RGuCFlpHR3QjshqFPpX6O6pfgKDbpALvs1h8TzTVg4zvVJa8J9q1sJywqs2P5DJ443+hTF7ePUSPBBc/5Ligijk=\\\")\"}]","icon":""},{"last_chapter_rule":"","pageList":[],"title":"哔哩ᵖ","author":"枫林雨殇","version":0,"url":"https://api.bilibili.com/x/web-interface/dynamic/region?rid=fyAll&pn=fypage&ps=20","col_type":"movie_2","class_name":"动画&国创&音乐&舞蹈&游戏&知识&数码&娱乐&影视","class_url":"1&168&3&129&4&36&188&5&181","area_name":"汽车&生活&美食&动物&鬼畜&时尚","area_url":"223&160&211&217&119&155","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:var d=[];\nvar html=JSON.parse(getResCode());\nvar list=html.data.archives;\n\nfor(var i in list){\n  d.push({\n     title: list[i].title,\n    desc:list[i].tname,\n     img:list[i].pic,\n    url:'https://api.bilibili.com/x/player/playurl?cid='+list[i].cid+'&avid='+list[i].aid+'&platform=html5'+`@lazyRule=.js:var html = request(input,{});var json = JSON.parse(html);var urll=json.data.durl[0].url;urll`,\n \n})\n}\nsetResult(d)","searchFind":"js:var d=[];\nvar html=JSON.parse(getResCode());\nvar list=html.data.result;\n\nfor(var i in list){\n  d.push({\n     title:  unescape(list[i].title).replace(/<em/g,'').replace(/<\\/em>/g,'').replace(/class=\\\"keyword\\\"/g,'').replace(/>/g,\"\"),\n    desc:list[i].tag,\n     img:'https:'+list[i].pic,\n    url:'https://m.bilibili.com/video/'+list[i].bvid+`@lazyRule=.js:var url=request(input,{}).split('readyVideoUrl')[1].split(\"\\'\")[1].split(\"\\'\")[0];url`,\n \n})\n}\nsetResult(d)","search_url":"https://api.bilibili.com/x/web-interface/search/type?keyword=**&page=fypage&search_type=video&order=totalrank&pagesize=20","group":"①搜索🔎","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"pc","preRule":"","pages":"[]","icon":""},{"last_chapter_rule":"","pageList":[],"title":"脚本之家","author":"","version":0,"url":"hiker://empty","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n/** 无需下载APP，点返回即可。*/\nsetResult([{\n    col_type: \"x5_webview_single\",\n    url: \"https://m.jb51.net/\",\n    desc: \"float&&100%\",\n    extra: {\n        canBack: true\n    }\n}])","searchFind":"","search_url":"","group":"①搜索🔎","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","icon":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg.alicdn.com%2Fbao%2Fuploaded%2FT1IO.SFjBfXXaCwpjX.png_200x200.jpg&refer=http%3A%2F%2Fimg.alicdn.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1639148995&t=70d3b5ee66d77512d1066427619e816a"},{"last_chapter_rule":"","pageList":[{"col_type":"text_1","name":"ClassTab","path":"ClassTab","rule":"function ClassTab(classArray, params) {\n    Object.assign(this, params)\n    this.arr = classArray.map(v => this.init(v))\n    this.sign = '$' + MY_RULE.title + '_' + (this.name || '') + '_'\n    this.color = this.color || '#12b668'\n    this.boundary = this.boundary || 'blank_block'\n}\nClassTab.prototype = {\n    constructor: ClassTab,\n    load(el) {\n        let folded = getVar('fold_' + this.sign, '')\n        if (this.fold) el.push({\n            title: '““””<span style=\"color:#049eff\">' + (folded ? '▶' : '▼'),\n            url: $('#noLoading#').lazyRule((sign, folded) => {\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\n                refreshPage(false)\n                return 'hiker://empty'\n            }, this.sign, folded),\n            col_type: 'scroll_button'\n        })\n        let arr = folded ? [this.arr[0]] : this.arr\n        arr.forEach((v) => {\n            let { id, class_name, class_url } = v,\n                selected = JSON.stringify(this.getClass(id))\n            class_name.forEach((name, i) => {\n                let url = class_url[i],\n                    now = JSON.stringify({ name: name, url: url })\n                el.push({\n                    title: (selected == now ? '““””<span style=\"color:' + this.color + '\"><b>' : '') + name,\n                    url: $('#noLoading#').lazyRule((sign, id, now) => {\n                        putVar(sign + id, now)\n                        putVar(sign, now)\n                        refreshPage(false)\n                        return 'hiker://empty'\n                    }, this.sign, id, now),\n                    col_type: 'scroll_button'\n                })\n            })\n            el.push({ col_type: this.boundary })\n        })\n    },\n    init(classObject) {\n        if (typeof classObject.class_name == 'string')\n            classObject.class_name = classObject.class_name.split('&')\n        if (typeof classObject.class_url == 'string')\n            classObject.class_url = classObject.class_url.split('&')\n        return classObject\n    },\n    push(classObject) {\n        this.arr.push(this.init(classObject))\n    },\n    getClass(id) {\n        let defaultClass = this.arr.find(item => item.id == id)\n        if (defaultClass) defaultClass = JSON.stringify({\n            name: defaultClass.class_name[0],\n            url: defaultClass.class_url[0]\n        })\n        else throw new Error('cannot find id: ' + id + ' in classTab: ' + this.sign)\n        return JSON.parse(getVar(this.sign + id, defaultClass))\n    },\n    getLastClick() {\n        return JSON.parse(getVar(this.sign, '{}'))\n    },\n    setUrl(url) {\n        return url.replace(/\\$\\{([^}]*)\\}/g, (_, id) => this.getClass(id).url)\n    }\n}\n$.exports = ClassTab\n"},{"col_type":"movie_3","name":"首页","path":"indexLoad","rule":"js:\nlet myCollection_el = [],\n    pageNum = parseInt(MY_URL.split('#')[1]),\n    RULE = MY_PARAMS.RULE,\n    fyAll = RULE.url.includes('fyAll'),\n    // 加载ClassTab组件\n    ClassTab = $.require('hiker://page/ClassTab?rule=' + getItem('myCollection')),\n    tabHeader = []\n\nif (RULE.class_name) tabHeader.push({\n    id: fyAll ? 'fyAll' : 'fyclass',\n    class_name: RULE.class_name,\n    class_url: RULE.class_url\n})\nif (RULE.area_name) tabHeader.push({\n    id: fyAll ? 'fyAll' : 'fyarea',\n    class_name: RULE.area_name,\n    class_url: RULE.area_url\n})\nif (RULE.year_name) tabHeader.push({\n    id: fyAll ? 'fyAll' : 'fyyear',\n    class_name: RULE.year_name,\n    class_url: RULE.year_url\n})\nif (RULE.sort_name) tabHeader.push({\n    id: fyAll ? 'fyAll' : 'fysort',\n    class_name: RULE.sort_name,\n    class_url: RULE.sort_url\n})\ntabHeader = new ClassTab(tabHeader, { name: RULE.title })\nif (pageNum == 1) {\n    addListener('onClose', 'clearVar(\"myCollection-searchMode\")')\n    putVar('myCollection-searchMode', RULE.title)\n    tabHeader.load(myCollection_el)\n    if (RULE.search_url) myCollection_el.push({\n        title: \"搜索\",\n        desc: \"搜你想要的...\",\n        url: '\"hiker://search?s=\"+input+\"&rule=' + getItem('myCollection') + '\"',\n        col_type: \"input\",\n    })\n}\n// 处理MY_URL和MY_RULE\nMY_RULE.version = RULE.version\nMY_RULE.group = RULE.group\nMY_RULE.title = RULE.title\nMY_RULE.ua = RULE.ua\nMY_RULE.col_type = RULE.col_type\nMY_RULE.detail_col_type = RULE.detail_col_type\nMY_RULE.find_rule = RULE.find_rule\nMY_RULE.detail_find_rule = RULE.detail_find_rule\nMY_RULE.preRule = RULE.preRule\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\nMY_RULE.params = {}\n\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nvar { MY_URL, indexHtml } = urlParse(RULE.url, pageNum, (url) => {\n    url[0] = fyAll ? url[0].replace(/fyAll/g, '$${fyAll}') : url[0].replace(/fy(class|area|year|sort)/g, '$${fy$1}')\n    url[0] = tabHeader.setUrl(url[0])\n})\nMY_RULE.url = MY_URL\n// 正文解析\nif (pageNum == 1) eval(MY_RULE.preRule)\nif (MY_RULE.find_rule.startsWith('js:')) {\n    function getUrl() {\n        return MY_URL\n    }\n\n    function getResCode() {\n        return indexHtml\n    }\n\n    function setResult(el, param1, param2, param3) {\n        param1 = CALLBACK_KEY\n        param2 = MY_RULE\n        param3 = MY_TYPE\n        if (Array.isArray(el.data)) el = el.data\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\n            let RULE = Object.assign({}, MY_RULE)\n            v.col_type = v.col_type || MY_RULE.col_type\n\n            if (!v.url) {\n                return v\n            } else if (v.url.includes('@lazyRule=')) {\n                v.url = v.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n                return v\n            } else if (v.url.includes('@rule=')) {\n                let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                v.url = url\n                RULE.detail_find_rule = rule\n                RULE.detail_col_type = MY_RULE.col_type\n            } else if (v.url.startsWith('hiker://page/')) {\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\n                    return v\n                let path = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?.*)?$/)[1],\n                    subPage = MY_RULE.pageList.find((v) => v.path == path)\n                RULE.detail_find_rule = subPage.rule\n                RULE.detail_col_type = subPage.col_type\n                RULE.params = v.extra || {}\n            } else if (!MY_RULE.detail_find_rule) { return v }\n            v.extra = { url: v.url, RULE: RULE, pageTitle: v.title }\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n            return v\n        }))\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\n    }\n\n    function setHomeResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    function setSearchResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    eval(MY_RULE.find_rule.slice(3))\n} else {\n    let findRule = MY_RULE.find_rule.split(';')\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\n        let [title, img, desc, url] = findRule.map((v, i) => {\n                try {\n                    if (v == '*') return ''\n                    else v = (i == 1 || i == 3) ?\n                        parseDom(data, v) :\n                        parseDomForHtml(data, v)\n                    if (i != 3) v = runCode(v)\n                    return v\n                } catch (e) {}\n            }),\n            res = {\n                title: title,\n                url: url,\n                desc: desc,\n                img: img,\n                col_type: MY_RULE.col_type\n            }\n        if (res.url) {\n            if (res.url.includes('@lazyRule=')) {\n                res.url = res.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n            } else if (MY_RULE.detail_find_rule) {\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title  }\n            }\n        }\n        myCollection_el.push(res)\n    })\n    setResult(myCollection_el)\n}\n"},{"col_type":"movie_3","name":"详情","path":"detailLoad","rule":"js:\nvar myCollection_el = []\n\n// 处理MY_URL和MY_RULE\nlet RULE = MY_PARAMS.RULE\nMY_RULE.version = RULE.version\nMY_RULE.group = RULE.group\nMY_RULE.title = RULE.title\nMY_RULE.url = MY_URL\nMY_RULE.ua = RULE.ua\nMY_RULE.col_type = RULE.detail_col_type\nMY_RULE.find_rule = RULE.detail_find_rule\nMY_RULE.preRule = RULE.preRule\nMY_RULE.pageList = RULE.pageList\nMY_RULE.pages = RULE.pages\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\nMY_RULE.params = RULE.params\n// 解析正文\nif(MY_PARAMS.pageTitle) setPageTitle(MY_PARAMS.pageTitle)\neval(MY_RULE.preRule)\nsetLastChapterRule(MY_RULE.last_chapter_rule)\nMY_PARAMS = MY_RULE.params\nif (MY_RULE.find_rule.startsWith('js:')) {\n    function setResult(el, param1, param2, param3) {\n        param1 = CALLBACK_KEY\n        param2 = MY_RULE\n        param3 = MY_TYPE\n        if (Array.isArray(el.data)) el = el.data\n\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\n            let RULE = Object.assign({}, MY_RULE)\n            v.col_type = v.col_type || MY_RULE.col_type\n\n            if (!v.url) {\n                return v\n            } else if (v.url.includes('@lazyRule=')) {\n                v.url = v.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n                return v\n            } else if (v.url.includes('@rule=')) {\n                let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                v.url = url\n                RULE.detail_find_rule = rule\n                RULE.detail_col_type = MY_RULE.col_type\n            } else if (v.url.startsWith('hiker://page/')) {\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\n                    return v\n                let path = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?.*)?$/)[1],\n                    subPage = MY_RULE.pageList.find((v) => v.path == path)\n                RULE.detail_find_rule = subPage.rule\n                RULE.detail_col_type = subPage.col_type\n                RULE.params = v.extra || {}\n            } else { return v }\n            v.extra = { url: v.url, RULE: RULE }\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n            return v\n        }))\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\n    }\n\n    function setHomeResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    function setSearchResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    eval(MY_RULE.find_rule.slice(3))\n} else {\n    const { runCode } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\n    let findRule = MY_RULE.find_rule.split(';')\n    parseDomForArray(getResCode(), findRule.shift()).forEach((data) => {\n        let [title, img, desc, url] = findRule.map((v, i) => {\n                try {\n                    if (v == '*') return ''\n                    else v = (i == 1 || i == 3) ?\n                        parseDom(data, v) :\n                        parseDomForHtml(data, v)\n                    if (i != 3) v = runCode(v)\n                    return v\n                } catch (e) {}\n            }),\n            res = {\n                title: title,\n                url: url,\n                desc: desc,\n                img: img,\n                col_type: MY_RULE.col_type\n            }\n        if (res.url && res.url.includes('@lazyRule='))\n            res.url = res.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n        myCollection_el.push(res)\n    })\n    setResult(myCollection_el)\n}\n"},{"col_type":"movie_3","name":"数据载入","path":"dataLoad","rule":"//真正获取数据的逻辑\nfunction load() {\n    let url = 'hiker://page/data',\n        d = []\n    try {\n        d = fetch(url)\n        if (url.startsWith('hiker://page/'))\n            d = JSON.parse(d).rule\n        d = JSON.parse(d)\n    } catch (e) {\n        d = []\n    }\n    return d.filter((v) => { return v.title != MY_RULE.title && v.author != '轻合集生成器' })\n}\n//检查间隔，默认一天\nlet min = 60 * 24 * 1\n\nlet data = []\nlet time = getItem('updatetime', '0')\ntime = parseInt(time)\nlet now = new Date().getTime()\nif (now - time > 1000 * 60 * min) {\n    log('更新了数据')\n    setItem('updatetime', '' + now)\n    data = load()\n    saveFile('data.json', JSON.stringify(data))\n} else {\n    log('没有更新数据')\n    data = JSON.parse(readFile('data.json'))\n}\n$.exports = data\n"},{"col_type":"movie_3","name":"工具集","path":"utility","rule":"$.exports = {\n    runCode: function(rule) {log(rule)\n        try {\n            let [input, code] = rule.split('.js:')\n            return code ? eval(code) : rule\n        } catch (e) { return rule }\n    },\n    urlParse: function(url, pageNum, func) {\n        url = url.split(';').map((v) => v.replace(/；；/g, ';'))\n        if (func) func(url)\n        url[0] = url[0].replace(/fypage(?:@(-?\\d+)@)?(?:\\*(\\d+)@)?/, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\n        url[0] = /^(.*?)(?:\\[firstPage=(.*?)\\])?$/.exec(url[0])\n        url[0] = runCode(url[0][2] && pageNum == 1 ? url[0][2] : url[0][1])\n        let options = { headers: { 'Content-Type': 'text/plain; charst=UTF-8' }, method: url[1] }\n        // post方法时转换参数\n        if (/^post$/i.test(options['method'])) {\n            let [oriUrl, body] = url[0].split('?')\n            url[0] = oriUrl.replace(/？？/g, '?')\n            if (body.startsWith('JsonBody=')) body = body.slice(9)\n            options['body'] = body\n        }\n        if (url[2]) options.headers['Content-Type'] = options.headers['Content-Type'].slice(0, 19) + url[2]\n        //log(options.headers['Content-Type'])\n        if (url[3]) url[3].match(/{(.*)}/)[1].split('&&').forEach((v) => {\n            let [key, value] = v.split('@')\n            options.headers[key] = runCode(value)\n        })\n        // 添加全局UA\n        if (!options.headers['User-Agent']) {\n            if (MY_RULE.ua == 'pc')\n                options.headers['User-Agent'] = PC_UA\n            else if (MY_RULE.ua == 'mobile')\n                options.headers['User-Agent'] = MOBILE_UA\n        }\n        return { MY_URL: url[0], indexHtml: fetch(url[0], options) }\n    }\n}\n"},{"col_type":"movie_3","name":"规则列表","path":"data","rule":"[{\n    \"last_chapter_rule\": \"\",\n    \"title\": \"吾爱破解𝔥\",\n    \"author\": \"Hood\",\n    \"url\": \"https://www.52pojie.cn/forum.php?mod=guide&view=fyclass&page=fypage;get;GBK\",\n    \"version\": 4,\n    \"col_type\": \"text_1\",\n    \"class_name\": \"最新热门&最新精华&最新回复&最新发表\",\n    \"class_url\": \"hot&digest&new&newthread\",\n    \"area_name\": \"\",\n    \"area_url\": \"\",\n    \"sort_name\": \"\",\n    \"year_name\": \"\",\n    \"sort_url\": \"\",\n    \"year_url\": \"\",\n    \"find_rule\": \"js:\\nvar res = {};\\nvar d = [];\\nvar html = getResCode();\\n\\n//列表\\nvar list = parseDomForArray(html,'body&&tbody[id]');\\n\\nfor(var i=1;i<list.length+1;i++){\\nd.push({\\ntitle: (i)+ '. ' +parseDomForHtml(list[i-1],'.xst&&Text'),\\nurl:'x5://https://www.52pojie.cn/'+parseDomForHtml(list[i-1],'a&&href'),\\ncol_type: 'text_1'});\\n}\\n\\r\\nres.data = d;\\nsetHomeResult(res);\",\n    \"search_url\": \"http://zhannei.baidu.com/cse/site?q=**&p=fypage&cc=52pojie.cn\",\n    \"group\": \"①推荐\",\n    \"searchFind\": \"body&&.result;\\nh3&&Text;\\na&&href;\\n*;\\n.c-abstract&&Text;\\n*\",\n    \"detail_col_type\": \"movie_1\",\n    \"detail_find_rule\": \"\",\n    \"sdetail_col_type\": \"movie_1\",\n    \"sdetail_find_rule\": \"\",\n    \"ua\": \"pc\",\n    \"preRule\": \"\",\n    \"pages\": \"[]\",\n    \"icon\": \"https://www.52pojie.cn/favicon.ico\"\n}, {\n    \"last_chapter_rule\": \"\",\n    \"title\": \"ZD423🇨🇳\",\n    \"author\": \"Namo\",\n    \"url\": \"https://www.423down.com/page/fypage\",\n    \"version\": 0,\n    \"col_type\": \"movie_1_left_pic\",\n    \"class_name\": \"\",\n    \"class_url\": \"\",\n    \"area_name\": \"\",\n    \"area_url\": \"\",\n    \"sort_name\": \"\",\n    \"year_name\": \"\",\n    \"sort_url\": \"\",\n    \"year_url\": \"\",\n    \"find_rule\": \"js:\\nvar res = {};\\nvar d = [];\\nvar list = parseDomForArray(getResCode(), '.content-wrap&&.excerpt&&li');\\nfor (var i in list) {\\n    d.push({\\n        title: parseDomForHtml(list[i], 'h2&&Text'),\\n        desc: parseDomForHtml(list[i], '.info&&Text'),\\n\\t      pic_url:parseDom(list[i],'img&&src'),\\n        url: parseDom(list[i], 'a&&href'),\\n    })\\n}\\nres.data = d;\\nsetHomeResult(res);\",\n    \"search_url\": \"https://www.423down.com/page/fypage?s=**\",\n    \"group\": \"其它\",\n    \"searchFind\": \"js:\\nvar res = {};\\nvar d = [];\\nvar list = parseDomForArray(getResCode(), '.content-wrap&&.excerpt&&li');\\nfor (var i in list) {\\n    d.push({\\n        title: parseDomForHtml(list[i], 'h2&&Text'),\\n        desc: parseDomForHtml(list[i], '.info&&Text'),        \\n        url: parseDom(list[i], 'a&&href'),\\n    })\\n}\\nres.data = d;\\nsetHomeResult(res);\",\n    \"detail_col_type\": \"movie_1\",\n    \"detail_find_rule\": \"js:var res={};\\nvar d = [];\\nd.push({\\n    col_type: \\\"text_1\\\",\\n    title: \\\"““””<big>\\\" + parseDomForHtml(getResCode(), \\\"h1&&Text\\\") + \\\"</big>\\\",\\n});\\nd.push({\\n    title: parseDomForHtml(getResCode(), \\\".entry&&Html\\\"),\\n    col_type: 'rich_text',\\n    extra: {\\n        textSize: 16,\\n        click: true\\n    }\\n});\\nsetResult(d);\",\n    \"sdetail_col_type\": \"movie_1\",\n    \"sdetail_find_rule\": \"*\",\n    \"ua\": \"pc\",\n    \"preRule\": \"\",\n    \"pages\": \"[]\",\n    \"icon\": \"\"\n}, {\n    \"last_chapter_rule\": \"\",\n    \"title\": \"落尘之木🇨🇳\",\n    \"author\": \"Namo\",\n    \"url\": \"https://www.luochenzhimu.com/page/fypage\",\n    \"version\": 1,\n    \"col_type\": \"movie_1_left_pic\",\n    \"class_name\": \"\",\n    \"class_url\": \"\",\n    \"area_name\": \"\",\n    \"area_url\": \"\",\n    \"sort_name\": \"\",\n    \"year_name\": \"\",\n    \"sort_url\": \"\",\n    \"year_url\": \"\",\n    \"find_rule\": \"js:\\nvar res = {};\\nvar d = [];\\nvar list = parseDomForArray(getResCode(), '.content&&.excerpt');\\nfor (var i in list) {\\n    d.push({\\n        title: parseDomForHtml(list[i], 'h2&&Text'),\\n        desc: parseDomForHtml(list[i], '.meta&&Text'),\\n        pic_url: parseDom(list[i], 'img&&data-src'),\\n        url: parseDom(list[i], 'a&&href') + \\\";get;UTF-8;{User-Agent@\\\" + PC_UA + \\\"}\\\",\\n    })\\n}\\nres.data = d;\\nsetHomeResult(res);\",\n    \"search_url\": \"https://www.423down.com/page/fypage?s=**\",\n    \"group\": \"其它\",\n    \"searchFind\": \"js:\\nvar res = {};\\nvar d = [];\\nvar list = parseDomForArray(getResCode(), '.content-wrap&&.excerpt&&li');\\nfor (var i in list) {\\n    d.push({\\n        title: parseDomForHtml(list[i], 'h2&&Text'),\\n        desc: parseDomForHtml(list[i], '.info&&Text'),        \\n        url: parseDom(list[i], 'a&&href'),\\n    })\\n}\\nres.data = d;\\nsetHomeResult(res);\",\n    \"detail_col_type\": \"movie_1\",\n    \"detail_find_rule\": \"js:var res={};\\nvar d = [];\\nd.push({\\n    col_type: \\\"text_1\\\",\\n    title: \\\"““””<big>\\\" + parseDomForHtml(getResCode(), \\\"h1&&Text\\\") + \\\"</big>\\\",\\n});\\nd.push({\\n    title: parseDomForHtml(getResCode(), \\\".article-content&&Html\\\").split('push({});')[1],\\n    col_type: 'rich_text',\\n    extra: {\\n        textSize: 16,\\n        click: true\\n    }\\n});\\nsetResult(d);\",\n    \"sdetail_col_type\": \"movie_1\",\n    \"sdetail_find_rule\": \"*\",\n    \"ua\": \"pc\",\n    \"preRule\": \"\",\n    \"pages\": \"[]\",\n    \"icon\": \"\"\n}, {\n    \"last_chapter_rule\": \"\",\n    \"title\": \"分享者\",\n    \"author\": \"小🔥星\",\n    \"url\": \"https://sharerw.com/a/fyAll/fypage/\",\n    \"version\": 9,\n    \"col_type\": \"movie_1_vertical_pic\",\n    \"class_name\": \"手机软件&车机软件&电脑软件&\",\n    \"class_url\": \"ganhuo&qiche&jingyan&\",\n    \"area_name\": \"盒子软件&TV资讯&精选TV\",\n    \"area_url\": \"ziyuan&tvzx&jxtv\",\n    \"sort_name\": \"\",\n    \"year_name\": \"\",\n    \"sort_url\": \"\",\n    \"year_url\": \"\",\n    \"find_rule\": \"body&&.article-list;img&&alt;img&&src;.time&&Text;a&&href\",\n    \"search_url\": \"https://sharerw.com/search.php?q=**&page=fypage\",\n    \"group\": \"其它\",\n    \"searchFind\": \"body&&.article-list;img&&alt;a&&href;.time&&Text;p,1&&Text;img&&src\",\n    \"detail_col_type\": \"movie_1\",\n    \"detail_find_rule\": \"js:var res={};var d=[];html=getResCode();text=parseDomForHtml(html,\\\".art-content&&Html\\\");d.push({title:text,col_type:'rich_text'});res.data=d;setHomeResult(res);\",\n    \"sdetail_col_type\": \"movie_1\",\n    \"sdetail_find_rule\": \"*\",\n    \"ua\": \"mobile\",\n    \"preRule\": \"\",\n    \"pages\": \"[]\",\n    \"icon\": \"https://z3.ax1x.com/2021/11/05/ImzSvd.png\"\n}, {\n    \"last_chapter_rule\": \"\",\n    \"title\": \"发现小软件\",\n    \"author\": \"居然\",\n    \"url\": \"https://www.x6g.com/html/23-fypage.html\",\n    \"version\": 3,\n    \"col_type\": \"movie_1_vertical_pic\",\n    \"class_name\": \"\",\n    \"class_url\": \"\",\n    \"area_name\": \"\",\n    \"area_url\": \"\",\n    \"sort_name\": \"\",\n    \"year_name\": \"\",\n    \"sort_url\": \"\",\n    \"year_url\": \"\",\n    \"find_rule\": \".list-soft&&li;.list-info&&a&&Text;.layui-clear&&img&&src;.list-ca&&Text;.list-info&&a&&href\",\n    \"search_url\": \"\",\n    \"group\": \"其它\",\n    \"searchFind\": \"\",\n    \"detail_col_type\": \"text_3\",\n    \"detail_find_rule\": \"body&&.article-down;a&&Text;*;*;a&&data-url\",\n    \"sdetail_col_type\": \"movie_1\",\n    \"sdetail_find_rule\": \"\",\n    \"ua\": \"mobile\",\n    \"preRule\": \"\",\n    \"pages\": \"[]\",\n    \"icon\": \"\"\n}, {\n    \"last_chapter_rule\": \"\",\n    \"title\": \"VXAT\",\n    \"author\": \"小🔥星\",\n    \"url\": \"https://www.vxat.com/fyAll_fypage.html\",\n    \"version\": 1,\n    \"col_type\": \"movie_1_vertical_pic\",\n    \"class_name\": \"软件下载&Windows&Android&电视软件&\",\n    \"class_url\": \"RuanJianXiaZai&Windows&Android&TV&\",\n    \"area_name\": \"优惠活动&网站源码&服务器&技术教程&\",\n    \"area_url\": \"YouHuiHuoDong&WangZhanYuanMa&VPS&JiShuJiaoCheng&\",\n    \"sort_name\": \"一级页面提示错误为没有下一页！\",\n    \"year_name\": \"其他&游戏&网友分享&&\",\n    \"sort_url\": \"\",\n    \"year_url\": \"QiTa&YouXi&WangYouFenXiang&&\",\n    \"find_rule\": \"body&&.post;a&&title;img&&src;.time&&Text;a&&href\",\n    \"search_url\": \"https://www.vxat.com/search.php?q=**&page=fypage\",\n    \"group\": \"其它\",\n    \"searchFind\": \"body&&.post;a&&title;a&&href;.time&&Text;.post&&Text;img&&src\",\n    \"detail_col_type\": \"movie_1\",\n    \"detail_find_rule\": \"js:var res={};var d=[];html=getResCode();text=parseDomForHtml(html,\\\".article-content&&Html\\\");d.push({title:text,col_type:'rich_text'});res.data=d;setHomeResult(res);\",\n    \"sdetail_col_type\": \"movie_1\",\n    \"sdetail_find_rule\": \"*\",\n    \"ua\": \"mobile\",\n    \"preRule\": \"\",\n    \"pages\": \"[]\",\n    \"icon\": \"\"\n}]"}],"title":"资源轻合集","author":"小棉袄🌞&永远の明日","version":72,"url":"hiker://empty","col_type":"icon_2_round","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nlet el = [{\n    title: '清除缓存,立即更新 <small>(基于远程仓库,不要频繁点击)',\n    url: $().lazyRule(() => {\n        clearItem('updatetime')\n        refreshPage(true)\n        return 'toast://已更新'\n    }),\n    img: 'hiker://images/icon1',\n    col_type: 'avatar'\n}]\nel.push({\n    url: '\"hiker://search?s=\"+input+\"&rule=' + getItem('myCollection') + '\"',\n    desc: '搜你想要的...',\n    title: '搜索',\n    col_type: 'input'\n})\nconst data = $.require('hiker://page/dataLoad?rule=' + getItem('myCollection'))\nsetResult(el.concat(data.map((v) => {\n    let fypage = /^[^;]*?fypage.*?(;.*)?$/.test(v.url) ? 'fypage' : '1'\n    return {\n        title: v.title,\n        url: 'hiker://page/indexLoad?#' + fypage + '#noHistory#',\n        img: v.icon,\n        extra: {\n            RULE: v\n        }\n    }\n})).concat([{\n    title: '““””<small><font color=#871f78>以上数据来源于网络，如您喜欢，请支持官方</font></small>',\n    desc: '““””<small><font color=#f20c00>此规则仅限学习交流使用，请于导入后24小时内删除，任何组织或个人不得以任何方式方法传播此规则的整体或部分！</font></small>',\n    url: MY_URL,\n    col_type: 'text_center_1'\n}]))","searchFind":"js:\nlet myCollection_el = [],\n    searchMode = getVar('myCollection-searchMode', ''),\n    [_, pageNum, keyword] = MY_URL.split('##'),\n    RULE = $.require('hiker://page/dataLoad?rule=' + getItem('myCollection')).filter((v) => v.search_url)\npageNum = parseInt(pageNum)\nif (!searchMode && pageNum > RULE.length) setResult([])\n\nlet searchCount = { title: '⬆ 已搜索了' + pageNum + '个小程序 ⬆\\n⬇ 下面还有' + (RULE.length - pageNum) + '个小程序 ⬇' }\nRULE = searchMode ? RULE.find((v) => v.title == searchMode) : RULE[pageNum - 1]\n// 处理MY_URL和MY_RULE\nMY_RULE.version = RULE.version\nMY_RULE.group = RULE.group\nMY_RULE.title = RULE.title\nMY_RULE.ua = RULE.ua\nMY_RULE.col_type = RULE.col_type\nMY_RULE.detail_col_type = RULE.sdetail_col_type\nMY_RULE.find_rule = RULE.searchFind\nMY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\nMY_RULE.preRule = RULE.preRule\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\nMY_RULE.params = {}\n\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nvar { MY_URL, indexHtml } = urlParse(RULE.search_url, searchMode ? pageNum : 1, (url) => {\n    url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\*\\*/g, encodeStr(keyword, url[2]))\n})\nMY_RULE.url = MY_URL\n// 正文解析\nif (pageNum == 1) eval(MY_RULE.preRule)\nif (MY_RULE.find_rule.startsWith('js:')) {\n    function getUrl() {\n        return MY_URL\n    }\n\n    function getResCode() {\n        return indexHtml\n    }\n\n    function setResult(el, param1, param2, param3) {\n        param1 = CALLBACK_KEY\n        param2 = MY_RULE\n        param3 = MY_TYPE\n        if (Array.isArray(el.data)) el = el.data\n        log(el)\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\n            let RULE = Object.assign({}, MY_RULE)\n\n            if (!v.url) {\n                return v\n            } else if (v.url.includes('@lazyRule=')) {\n                v.url = v.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n                return v\n            } else if (v.url.includes('@rule=')) {\n                let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                v.url = url\n                RULE.detail_find_rule = rule\n                RULE.detail_col_type = MY_RULE.col_type\n            } else if (v.url.startsWith('hiker://page/')) {\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\n                    return v\n                let path = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?.*)?$/)[1],\n                    subPage = MY_RULE.pageList.find(v => v.path == path)\n                RULE.detail_find_rule = subPage.rule\n                RULE.detail_col_type = subPage.col_type\n                RULE.params = v.extra || {}\n            } else if (!MY_RULE.detail_find_rule) { return v }\n            v.extra = { url: v.url, RULE: RULE, pageTitle: v.title  }\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n            return v\n        }))\n        if (!searchMode) myCollection_el.push(searchCount)\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\n    }\n\n    function setHomeResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    function setSearchResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    eval(MY_RULE.find_rule.slice(3))\n} else {\n    let findRule = MY_RULE.find_rule.split(';')\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\n        let [title, url, desc, content, img] = findRule.map((v, i) => {\n                try {\n                    if (v == '*') return ''\n                    else v = (i == 1 || i == 4) ?\n                        parseDom(data, v) :\n                        parseDomForHtml(data, v)\n                    if (i != 1) v = runCode(v)\n                    return v\n                } catch (e) {}\n            }),\n            res = {\n                title: title,\n                url: url,\n                desc: desc,\n                content: content,\n                img: img\n            }\n        if (res.url) {\n            if (res.url.includes('@lazyRule=')) {\n                res.url = res.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n            } else if (MY_RULE.detail_find_rule) {\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title  }\n            }\n        }\n        myCollection_el.push(res)\n        if (!searchMode) myCollection_el.push(searchCount)\n    })\n    setResult(myCollection_el)\n}\n","search_url":"hiker://empty##fypage##**","group":"①轻合集🔥","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"setItem('myCollection', MY_RULE.title)","pages":"[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"function ClassTab(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + MY_RULE.title + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = getVar('fold_' + this.sign, '')\\n        if (this.fold) el.push({\\n            title: '““””<span style=\\\"color:#049eff\\\">' + (folded ? '▶' : '▼'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n                selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: (selected == now ? '““””<span style=\\\"color:' + this.color + '\\\"><b>' : '') + name,\\n                    url: $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        putVar(sign, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&')\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        if (defaultClass) defaultClass = JSON.stringify({\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        })\\n        else throw new Error('cannot find id: ' + id + ' in classTab: ' + this.sign)\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    getLastClick() {\\n        return JSON.parse(getVar(this.sign, '{}'))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n$.exports = ClassTab\\n\"},{\"col_type\":\"movie_3\",\"name\":\"首页\",\"path\":\"indexLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = parseInt(MY_URL.split('#')[1]),\\n    RULE = MY_PARAMS.RULE,\\n    fyAll = RULE.url.includes('fyAll'),\\n    // 加载ClassTab组件\\n    ClassTab = $.require('hiker://page/ClassTab?rule=' + getItem('myCollection')),\\n    tabHeader = []\\n\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title })\\nif (pageNum == 1) {\\n    addListener('onClose', 'clearVar(\\\"myCollection-searchMode\\\")')\\n    putVar('myCollection-searchMode', RULE.title)\\n    tabHeader.load(myCollection_el)\\n    if (RULE.search_url) myCollection_el.push({\\n        title: \\\"搜索\\\",\\n        desc: \\\"搜你想要的...\\\",\\n        url: '\\\"hiker://search?s=\\\"+input+\\\"&rule=' + getItem('myCollection') + '\\\"',\\n        col_type: \\\"input\\\",\\n    })\\n}\\n// 处理MY_URL和MY_RULE\\nMY_RULE.version = RULE.version\\nMY_RULE.group = RULE.group\\nMY_RULE.title = RULE.title\\nMY_RULE.ua = RULE.ua\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.find_rule\\nMY_RULE.detail_find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, indexHtml } = urlParse(RULE.url, pageNum, (url) => {\\n    url[0] = fyAll ? url[0].replace(/fyAll/g, '$${fyAll}') : url[0].replace(/fy(class|area|year|sort)/g, '$${fy$1}')\\n    url[0] = tabHeader.setUrl(url[0])\\n})\\nMY_RULE.url = MY_URL\\n// 正文解析\\nif (pageNum == 1) eval(MY_RULE.preRule)\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url) {\\n                return v\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                RULE.detail_find_rule = rule\\n                RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let path = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?.*)?$/)[1],\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path)\\n                RULE.detail_find_rule = subPage.rule\\n                RULE.detail_col_type = subPage.col_type\\n                RULE.params = v.extra || {}\\n            } else if (!MY_RULE.detail_find_rule) { return v }\\n            v.extra = { url: v.url, RULE: RULE, pageTitle: v.title }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n\\n    function setHomeResult(a, param1, param2, param3) {\\n        setResult(a, param1, param2, param3)\\n    }\\n\\n    function setSearchResult(a, param1, param2, param3) {\\n        setResult(a, param1, param2, param3)\\n    }\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) {}\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title  }\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"详情\",\"path\":\"detailLoad\",\"rule\":\"js:\\nvar myCollection_el = []\\n\\n// 处理MY_URL和MY_RULE\\nlet RULE = MY_PARAMS.RULE\\nMY_RULE.version = RULE.version\\nMY_RULE.group = RULE.group\\nMY_RULE.title = RULE.title\\nMY_RULE.url = MY_URL\\nMY_RULE.ua = RULE.ua\\nMY_RULE.col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = RULE.pageList\\nMY_RULE.pages = RULE.pages\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = RULE.params\\n// 解析正文\\nif(MY_PARAMS.pageTitle) setPageTitle(MY_PARAMS.pageTitle)\\neval(MY_RULE.preRule)\\nsetLastChapterRule(MY_RULE.last_chapter_rule)\\nMY_PARAMS = MY_RULE.params\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url) {\\n                return v\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                RULE.detail_find_rule = rule\\n                RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let path = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?.*)?$/)[1],\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path)\\n                RULE.detail_find_rule = subPage.rule\\n                RULE.detail_col_type = subPage.col_type\\n                RULE.params = v.extra || {}\\n            } else { return v }\\n            v.extra = { url: v.url, RULE: RULE }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n\\n    function setHomeResult(a, param1, param2, param3) {\\n        setResult(a, param1, param2, param3)\\n    }\\n\\n    function setSearchResult(a, param1, param2, param3) {\\n        setResult(a, param1, param2, param3)\\n    }\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    const { runCode } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(getResCode(), findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) {}\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url && res.url.includes('@lazyRule='))\\n            res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"数据载入\",\"path\":\"dataLoad\",\"rule\":\"//真正获取数据的逻辑\\nfunction load() {\\n    let url = 'hiker://page/data',\\n        d = []\\n    try {\\n        d = fetch(url)\\n        if (url.startsWith('hiker://page/'))\\n            d = JSON.parse(d).rule\\n        d = JSON.parse(d)\\n    } catch (e) {\\n        d = []\\n    }\\n    return d.filter((v) => { return v.title != MY_RULE.title && v.author != '轻合集生成器' })\\n}\\n//检查间隔，默认一天\\nlet min = 60 * 24 * 1\\n\\nlet data = []\\nlet time = getItem('updatetime', '0')\\ntime = parseInt(time)\\nlet now = new Date().getTime()\\nif (now - time > 1000 * 60 * min) {\\n    log('更新了数据')\\n    setItem('updatetime', '' + now)\\n    data = load()\\n    saveFile('data.json', JSON.stringify(data))\\n} else {\\n    log('没有更新数据')\\n    data = JSON.parse(readFile('data.json'))\\n}\\n$.exports = data\\n\"},{\"col_type\":\"movie_3\",\"name\":\"工具集\",\"path\":\"utility\",\"rule\":\"$.exports = {\\n    runCode: function(rule) {log(rule)\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    },\\n    urlParse: function(url, pageNum, func) {\\n        url = url.split(';').map((v) => v.replace(/；；/g, ';'))\\n        if (func) func(url)\\n        url[0] = url[0].replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n        url[0] = /^(.*?)(?:\\\\[firstPage=(.*?)\\\\])?$/.exec(url[0])\\n        url[0] = runCode(url[0][2] && pageNum == 1 ? url[0][2] : url[0][1])\\n        let options = { headers: { 'Content-Type': 'text/plain; charst=UTF-8' }, method: url[1] }\\n        // post方法时转换参数\\n        if (/^post$/i.test(options['method'])) {\\n            let [oriUrl, body] = url[0].split('?')\\n            url[0] = oriUrl.replace(/？？/g, '?')\\n            if (body.startsWith('JsonBody=')) body = body.slice(9)\\n            options['body'] = body\\n        }\\n        if (url[2]) options.headers['Content-Type'] = options.headers['Content-Type'].slice(0, 19) + url[2]\\n        //log(options.headers['Content-Type'])\\n        if (url[3]) url[3].match(/{(.*)}/)[1].split('&&').forEach((v) => {\\n            let [key, value] = v.split('@')\\n            options.headers[key] = runCode(value)\\n        })\\n        // 添加全局UA\\n        if (!options.headers['User-Agent']) {\\n            if (MY_RULE.ua == 'pc')\\n                options.headers['User-Agent'] = PC_UA\\n            else if (MY_RULE.ua == 'mobile')\\n                options.headers['User-Agent'] = MOBILE_UA\\n        }\\n        return { MY_URL: url[0], indexHtml: fetch(url[0], options) }\\n    }\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"规则列表\",\"path\":\"data\",\"rule\":\"[{\\n    \\\"last_chapter_rule\\\": \\\"\\\",\\n    \\\"title\\\": \\\"吾爱破解𝔥\\\",\\n    \\\"author\\\": \\\"Hood\\\",\\n    \\\"url\\\": \\\"https://www.52pojie.cn/forum.php?mod=guide&view=fyclass&page=fypage;get;GBK\\\",\\n    \\\"version\\\": 4,\\n    \\\"col_type\\\": \\\"text_1\\\",\\n    \\\"class_name\\\": \\\"最新热门&最新精华&最新回复&最新发表\\\",\\n    \\\"class_url\\\": \\\"hot&digest&new&newthread\\\",\\n    \\\"area_name\\\": \\\"\\\",\\n    \\\"area_url\\\": \\\"\\\",\\n    \\\"sort_name\\\": \\\"\\\",\\n    \\\"year_name\\\": \\\"\\\",\\n    \\\"sort_url\\\": \\\"\\\",\\n    \\\"year_url\\\": \\\"\\\",\\n    \\\"find_rule\\\": \\\"js:\\\\nvar res = {};\\\\nvar d = [];\\\\nvar html = getResCode();\\\\n\\\\n//列表\\\\nvar list = parseDomForArray(html,'body&&tbody[id]');\\\\n\\\\nfor(var i=1;i<list.length+1;i++){\\\\nd.push({\\\\ntitle: (i)+ '. ' +parseDomForHtml(list[i-1],'.xst&&Text'),\\\\nurl:'x5://https://www.52pojie.cn/'+parseDomForHtml(list[i-1],'a&&href'),\\\\ncol_type: 'text_1'});\\\\n}\\\\n\\\\r\\\\nres.data = d;\\\\nsetHomeResult(res);\\\",\\n    \\\"search_url\\\": \\\"http://zhannei.baidu.com/cse/site?q=**&p=fypage&cc=52pojie.cn\\\",\\n    \\\"group\\\": \\\"①推荐\\\",\\n    \\\"searchFind\\\": \\\"body&&.result;\\\\nh3&&Text;\\\\na&&href;\\\\n*;\\\\n.c-abstract&&Text;\\\\n*\\\",\\n    \\\"detail_col_type\\\": \\\"movie_1\\\",\\n    \\\"detail_find_rule\\\": \\\"\\\",\\n    \\\"sdetail_col_type\\\": \\\"movie_1\\\",\\n    \\\"sdetail_find_rule\\\": \\\"\\\",\\n    \\\"ua\\\": \\\"pc\\\",\\n    \\\"preRule\\\": \\\"\\\",\\n    \\\"pages\\\": \\\"[]\\\",\\n    \\\"icon\\\": \\\"https://www.52pojie.cn/favicon.ico\\\"\\n}, {\\n    \\\"last_chapter_rule\\\": \\\"\\\",\\n    \\\"title\\\": \\\"ZD423🇨🇳\\\",\\n    \\\"author\\\": \\\"Namo\\\",\\n    \\\"url\\\": \\\"https://www.423down.com/page/fypage\\\",\\n    \\\"version\\\": 0,\\n    \\\"col_type\\\": \\\"movie_1_left_pic\\\",\\n    \\\"class_name\\\": \\\"\\\",\\n    \\\"class_url\\\": \\\"\\\",\\n    \\\"area_name\\\": \\\"\\\",\\n    \\\"area_url\\\": \\\"\\\",\\n    \\\"sort_name\\\": \\\"\\\",\\n    \\\"year_name\\\": \\\"\\\",\\n    \\\"sort_url\\\": \\\"\\\",\\n    \\\"year_url\\\": \\\"\\\",\\n    \\\"find_rule\\\": \\\"js:\\\\nvar res = {};\\\\nvar d = [];\\\\nvar list = parseDomForArray(getResCode(), '.content-wrap&&.excerpt&&li');\\\\nfor (var i in list) {\\\\n    d.push({\\\\n        title: parseDomForHtml(list[i], 'h2&&Text'),\\\\n        desc: parseDomForHtml(list[i], '.info&&Text'),\\\\n\\\\t      pic_url:parseDom(list[i],'img&&src'),\\\\n        url: parseDom(list[i], 'a&&href'),\\\\n    })\\\\n}\\\\nres.data = d;\\\\nsetHomeResult(res);\\\",\\n    \\\"search_url\\\": \\\"https://www.423down.com/page/fypage?s=**\\\",\\n    \\\"group\\\": \\\"其它\\\",\\n    \\\"searchFind\\\": \\\"js:\\\\nvar res = {};\\\\nvar d = [];\\\\nvar list = parseDomForArray(getResCode(), '.content-wrap&&.excerpt&&li');\\\\nfor (var i in list) {\\\\n    d.push({\\\\n        title: parseDomForHtml(list[i], 'h2&&Text'),\\\\n        desc: parseDomForHtml(list[i], '.info&&Text'),        \\\\n        url: parseDom(list[i], 'a&&href'),\\\\n    })\\\\n}\\\\nres.data = d;\\\\nsetHomeResult(res);\\\",\\n    \\\"detail_col_type\\\": \\\"movie_1\\\",\\n    \\\"detail_find_rule\\\": \\\"js:var res={};\\\\nvar d = [];\\\\nd.push({\\\\n    col_type: \\\\\\\"text_1\\\\\\\",\\\\n    title: \\\\\\\"““””<big>\\\\\\\" + parseDomForHtml(getResCode(), \\\\\\\"h1&&Text\\\\\\\") + \\\\\\\"</big>\\\\\\\",\\\\n});\\\\nd.push({\\\\n    title: parseDomForHtml(getResCode(), \\\\\\\".entry&&Html\\\\\\\"),\\\\n    col_type: 'rich_text',\\\\n    extra: {\\\\n        textSize: 16,\\\\n        click: true\\\\n    }\\\\n});\\\\nsetResult(d);\\\",\\n    \\\"sdetail_col_type\\\": \\\"movie_1\\\",\\n    \\\"sdetail_find_rule\\\": \\\"*\\\",\\n    \\\"ua\\\": \\\"pc\\\",\\n    \\\"preRule\\\": \\\"\\\",\\n    \\\"pages\\\": \\\"[]\\\",\\n    \\\"icon\\\": \\\"\\\"\\n}, {\\n    \\\"last_chapter_rule\\\": \\\"\\\",\\n    \\\"title\\\": \\\"落尘之木🇨🇳\\\",\\n    \\\"author\\\": \\\"Namo\\\",\\n    \\\"url\\\": \\\"https://www.luochenzhimu.com/page/fypage\\\",\\n    \\\"version\\\": 1,\\n    \\\"col_type\\\": \\\"movie_1_left_pic\\\",\\n    \\\"class_name\\\": \\\"\\\",\\n    \\\"class_url\\\": \\\"\\\",\\n    \\\"area_name\\\": \\\"\\\",\\n    \\\"area_url\\\": \\\"\\\",\\n    \\\"sort_name\\\": \\\"\\\",\\n    \\\"year_name\\\": \\\"\\\",\\n    \\\"sort_url\\\": \\\"\\\",\\n    \\\"year_url\\\": \\\"\\\",\\n    \\\"find_rule\\\": \\\"js:\\\\nvar res = {};\\\\nvar d = [];\\\\nvar list = parseDomForArray(getResCode(), '.content&&.excerpt');\\\\nfor (var i in list) {\\\\n    d.push({\\\\n        title: parseDomForHtml(list[i], 'h2&&Text'),\\\\n        desc: parseDomForHtml(list[i], '.meta&&Text'),\\\\n        pic_url: parseDom(list[i], 'img&&data-src'),\\\\n        url: parseDom(list[i], 'a&&href') + \\\\\\\";get;UTF-8;{User-Agent@\\\\\\\" + PC_UA + \\\\\\\"}\\\\\\\",\\\\n    })\\\\n}\\\\nres.data = d;\\\\nsetHomeResult(res);\\\",\\n    \\\"search_url\\\": \\\"https://www.423down.com/page/fypage?s=**\\\",\\n    \\\"group\\\": \\\"其它\\\",\\n    \\\"searchFind\\\": \\\"js:\\\\nvar res = {};\\\\nvar d = [];\\\\nvar list = parseDomForArray(getResCode(), '.content-wrap&&.excerpt&&li');\\\\nfor (var i in list) {\\\\n    d.push({\\\\n        title: parseDomForHtml(list[i], 'h2&&Text'),\\\\n        desc: parseDomForHtml(list[i], '.info&&Text'),        \\\\n        url: parseDom(list[i], 'a&&href'),\\\\n    })\\\\n}\\\\nres.data = d;\\\\nsetHomeResult(res);\\\",\\n    \\\"detail_col_type\\\": \\\"movie_1\\\",\\n    \\\"detail_find_rule\\\": \\\"js:var res={};\\\\nvar d = [];\\\\nd.push({\\\\n    col_type: \\\\\\\"text_1\\\\\\\",\\\\n    title: \\\\\\\"““””<big>\\\\\\\" + parseDomForHtml(getResCode(), \\\\\\\"h1&&Text\\\\\\\") + \\\\\\\"</big>\\\\\\\",\\\\n});\\\\nd.push({\\\\n    title: parseDomForHtml(getResCode(), \\\\\\\".article-content&&Html\\\\\\\").split('push({});')[1],\\\\n    col_type: 'rich_text',\\\\n    extra: {\\\\n        textSize: 16,\\\\n        click: true\\\\n    }\\\\n});\\\\nsetResult(d);\\\",\\n    \\\"sdetail_col_type\\\": \\\"movie_1\\\",\\n    \\\"sdetail_find_rule\\\": \\\"*\\\",\\n    \\\"ua\\\": \\\"pc\\\",\\n    \\\"preRule\\\": \\\"\\\",\\n    \\\"pages\\\": \\\"[]\\\",\\n    \\\"icon\\\": \\\"\\\"\\n}, {\\n    \\\"last_chapter_rule\\\": \\\"\\\",\\n    \\\"title\\\": \\\"分享者\\\",\\n    \\\"author\\\": \\\"小🔥星\\\",\\n    \\\"url\\\": \\\"https://sharerw.com/a/fyAll/fypage/\\\",\\n    \\\"version\\\": 9,\\n    \\\"col_type\\\": \\\"movie_1_vertical_pic\\\",\\n    \\\"class_name\\\": \\\"手机软件&车机软件&电脑软件&\\\",\\n    \\\"class_url\\\": \\\"ganhuo&qiche&jingyan&\\\",\\n    \\\"area_name\\\": \\\"盒子软件&TV资讯&精选TV\\\",\\n    \\\"area_url\\\": \\\"ziyuan&tvzx&jxtv\\\",\\n    \\\"sort_name\\\": \\\"\\\",\\n    \\\"year_name\\\": \\\"\\\",\\n    \\\"sort_url\\\": \\\"\\\",\\n    \\\"year_url\\\": \\\"\\\",\\n    \\\"find_rule\\\": \\\"body&&.article-list;img&&alt;img&&src;.time&&Text;a&&href\\\",\\n    \\\"search_url\\\": \\\"https://sharerw.com/search.php?q=**&page=fypage\\\",\\n    \\\"group\\\": \\\"其它\\\",\\n    \\\"searchFind\\\": \\\"body&&.article-list;img&&alt;a&&href;.time&&Text;p,1&&Text;img&&src\\\",\\n    \\\"detail_col_type\\\": \\\"movie_1\\\",\\n    \\\"detail_find_rule\\\": \\\"js:var res={};var d=[];html=getResCode();text=parseDomForHtml(html,\\\\\\\".art-content&&Html\\\\\\\");d.push({title:text,col_type:'rich_text'});res.data=d;setHomeResult(res);\\\",\\n    \\\"sdetail_col_type\\\": \\\"movie_1\\\",\\n    \\\"sdetail_find_rule\\\": \\\"*\\\",\\n    \\\"ua\\\": \\\"mobile\\\",\\n    \\\"preRule\\\": \\\"\\\",\\n    \\\"pages\\\": \\\"[]\\\",\\n    \\\"icon\\\": \\\"https://z3.ax1x.com/2021/11/05/ImzSvd.png\\\"\\n}, {\\n    \\\"last_chapter_rule\\\": \\\"\\\",\\n    \\\"title\\\": \\\"发现小软件\\\",\\n    \\\"author\\\": \\\"居然\\\",\\n    \\\"url\\\": \\\"https://www.x6g.com/html/23-fypage.html\\\",\\n    \\\"version\\\": 3,\\n    \\\"col_type\\\": \\\"movie_1_vertical_pic\\\",\\n    \\\"class_name\\\": \\\"\\\",\\n    \\\"class_url\\\": \\\"\\\",\\n    \\\"area_name\\\": \\\"\\\",\\n    \\\"area_url\\\": \\\"\\\",\\n    \\\"sort_name\\\": \\\"\\\",\\n    \\\"year_name\\\": \\\"\\\",\\n    \\\"sort_url\\\": \\\"\\\",\\n    \\\"year_url\\\": \\\"\\\",\\n    \\\"find_rule\\\": \\\".list-soft&&li;.list-info&&a&&Text;.layui-clear&&img&&src;.list-ca&&Text;.list-info&&a&&href\\\",\\n    \\\"search_url\\\": \\\"\\\",\\n    \\\"group\\\": \\\"其它\\\",\\n    \\\"searchFind\\\": \\\"\\\",\\n    \\\"detail_col_type\\\": \\\"text_3\\\",\\n    \\\"detail_find_rule\\\": \\\"body&&.article-down;a&&Text;*;*;a&&data-url\\\",\\n    \\\"sdetail_col_type\\\": \\\"movie_1\\\",\\n    \\\"sdetail_find_rule\\\": \\\"\\\",\\n    \\\"ua\\\": \\\"mobile\\\",\\n    \\\"preRule\\\": \\\"\\\",\\n    \\\"pages\\\": \\\"[]\\\",\\n    \\\"icon\\\": \\\"\\\"\\n}, {\\n    \\\"last_chapter_rule\\\": \\\"\\\",\\n    \\\"title\\\": \\\"VXAT\\\",\\n    \\\"author\\\": \\\"小🔥星\\\",\\n    \\\"url\\\": \\\"https://www.vxat.com/fyAll_fypage.html\\\",\\n    \\\"version\\\": 1,\\n    \\\"col_type\\\": \\\"movie_1_vertical_pic\\\",\\n    \\\"class_name\\\": \\\"软件下载&Windows&Android&电视软件&\\\",\\n    \\\"class_url\\\": \\\"RuanJianXiaZai&Windows&Android&TV&\\\",\\n    \\\"area_name\\\": \\\"优惠活动&网站源码&服务器&技术教程&\\\",\\n    \\\"area_url\\\": \\\"YouHuiHuoDong&WangZhanYuanMa&VPS&JiShuJiaoCheng&\\\",\\n    \\\"sort_name\\\": \\\"一级页面提示错误为没有下一页！\\\",\\n    \\\"year_name\\\": \\\"其他&游戏&网友分享&&\\\",\\n    \\\"sort_url\\\": \\\"\\\",\\n    \\\"year_url\\\": \\\"QiTa&YouXi&WangYouFenXiang&&\\\",\\n    \\\"find_rule\\\": \\\"body&&.post;a&&title;img&&src;.time&&Text;a&&href\\\",\\n    \\\"search_url\\\": \\\"https://www.vxat.com/search.php?q=**&page=fypage\\\",\\n    \\\"group\\\": \\\"其它\\\",\\n    \\\"searchFind\\\": \\\"body&&.post;a&&title;a&&href;.time&&Text;.post&&Text;img&&src\\\",\\n    \\\"detail_col_type\\\": \\\"movie_1\\\",\\n    \\\"detail_find_rule\\\": \\\"js:var res={};var d=[];html=getResCode();text=parseDomForHtml(html,\\\\\\\".article-content&&Html\\\\\\\");d.push({title:text,col_type:'rich_text'});res.data=d;setHomeResult(res);\\\",\\n    \\\"sdetail_col_type\\\": \\\"movie_1\\\",\\n    \\\"sdetail_find_rule\\\": \\\"*\\\",\\n    \\\"ua\\\": \\\"mobile\\\",\\n    \\\"preRule\\\": \\\"\\\",\\n    \\\"pages\\\": \\\"[]\\\",\\n    \\\"icon\\\": \\\"\\\"\\n}]\"}]","icon":"https://img2.baidu.com/it/u=2510781337,3881636015&fm=117&fmt=auto&gp=0.jpg"},{"last_chapter_rule":"","pageList":[{"col_type":"text_1","name":"ClassTab","path":"ClassTab","rule":"function ClassTab(classArray, params) {\n    Object.assign(this, params)\n    this.arr = classArray.map(v => this.init(v))\n    this.sign = '$' + MY_RULE.title + '_' + (this.name || '') + '_'\n    this.color = this.color || '#12b668'\n    this.boundary = this.boundary || 'blank_block'\n}\nClassTab.prototype = {\n    constructor: ClassTab,\n    load(el) {\n        let folded = getVar('fold_' + this.sign, '')\n        if (this.fold) el.push({\n            title: '““””<span style=\"color:#049eff\">' + (folded ? '▶' : '▼'),\n            url: $('#noLoading#').lazyRule((sign, folded) => {\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\n                refreshPage(false)\n                return 'hiker://empty'\n            }, this.sign, folded),\n            col_type: 'scroll_button'\n        })\n        let arr = folded ? [this.arr[0]] : this.arr\n        arr.forEach((v) => {\n            let { id, class_name, class_url } = v,\n                selected = JSON.stringify(this.getClass(id))\n            class_name.forEach((name, i) => {\n                let url = class_url[i],\n                    now = JSON.stringify({ name: name, url: url })\n                el.push({\n                    title: (selected == now ? '““””<span style=\"color:' + this.color + '\"><b>' : '') + name,\n                    url: $('#noLoading#').lazyRule((sign, id, now) => {\n                        putVar(sign + id, now)\n                        putVar(sign, now)\n                        refreshPage(false)\n                        return 'hiker://empty'\n                    }, this.sign, id, now),\n                    col_type: 'scroll_button'\n                })\n            })\n            el.push({ col_type: this.boundary })\n        })\n    },\n    init(classObject) {\n        if (typeof classObject.class_name == 'string')\n            classObject.class_name = classObject.class_name.split('&')\n        if (typeof classObject.class_url == 'string')\n            classObject.class_url = classObject.class_url.split('&')\n        return classObject\n    },\n    push(classObject) {\n        this.arr.push(this.init(classObject))\n    },\n    getClass(id) {\n        let defaultClass = this.arr.find(item => item.id == id)\n        if (defaultClass) defaultClass = JSON.stringify({\n            name: defaultClass.class_name[0],\n            url: defaultClass.class_url[0]\n        })\n        else throw new Error('cannot find id: ' + id + ' in classTab: ' + this.sign)\n        return JSON.parse(getVar(this.sign + id, defaultClass))\n    },\n    getLastClick() {\n        return JSON.parse(getVar(this.sign, '{}'))\n    },\n    setUrl(url) {\n        return url.replace(/\\$\\{([^}]*)\\}/g, (_, id) => this.getClass(id).url)\n    }\n}\n$.exports = ClassTab\n"},{"col_type":"movie_3","name":"首页","path":"indexLoad","rule":"js:\nlet myCollection_el = [],\n    pageNum = parseInt(MY_URL.split('#')[1]),\n    RULE = MY_PARAMS.RULE,\n    fyAll = RULE.url.includes('fyAll'),\n    // 加载ClassTab组件\n    ClassTab = $.require('hiker://page/ClassTab?rule=' + getItem('myCollection')),\n    tabHeader = []\n\nif (RULE.class_name) tabHeader.push({\n    id: fyAll ? 'fyAll' : 'fyclass',\n    class_name: RULE.class_name,\n    class_url: RULE.class_url\n})\nif (RULE.area_name) tabHeader.push({\n    id: fyAll ? 'fyAll' : 'fyarea',\n    class_name: RULE.area_name,\n    class_url: RULE.area_url\n})\nif (RULE.year_name) tabHeader.push({\n    id: fyAll ? 'fyAll' : 'fyyear',\n    class_name: RULE.year_name,\n    class_url: RULE.year_url\n})\nif (RULE.sort_name) tabHeader.push({\n    id: fyAll ? 'fyAll' : 'fysort',\n    class_name: RULE.sort_name,\n    class_url: RULE.sort_url\n})\ntabHeader = new ClassTab(tabHeader, { name: RULE.title })\nif (pageNum == 1) {\n    addListener('onClose', 'clearVar(\"myCollection-searchMode\")')\n    putVar('myCollection-searchMode', RULE.title)\n    tabHeader.load(myCollection_el)\n    if (RULE.search_url) myCollection_el.push({\n        title: \"搜索\",\n        desc: \"搜你想要的...\",\n        url: '\"hiker://search?s=\"+input+\"&rule=' + getItem('myCollection') + '\"',\n        col_type: \"input\",\n    })\n}\n// 处理MY_URL和MY_RULE\nMY_RULE.version = RULE.version\nMY_RULE.group = RULE.group\nMY_RULE.title = RULE.title\nMY_RULE.ua = RULE.ua\nMY_RULE.col_type = RULE.col_type\nMY_RULE.detail_col_type = RULE.detail_col_type\nMY_RULE.find_rule = RULE.find_rule\nMY_RULE.detail_find_rule = RULE.detail_find_rule\nMY_RULE.preRule = RULE.preRule\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\nMY_RULE.params = {}\n\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nvar { MY_URL, indexHtml } = urlParse(RULE.url, pageNum, (url) => {\n    url[0] = fyAll ? url[0].replace(/fyAll/g, '$${fyAll}') : url[0].replace(/fy(class|area|year|sort)/g, '$${fy$1}')\n    url[0] = tabHeader.setUrl(url[0])\n})\nMY_RULE.url = MY_URL\n// 正文解析\nif (pageNum == 1) eval(MY_RULE.preRule)\nif (MY_RULE.find_rule.startsWith('js:')) {\n    function getUrl() {\n        return MY_URL\n    }\n\n    function getResCode() {\n        return indexHtml\n    }\n\n    function setResult(el, param1, param2, param3) {\n        param1 = CALLBACK_KEY\n        param2 = MY_RULE\n        param3 = MY_TYPE\n        if (Array.isArray(el.data)) el = el.data\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\n            let RULE = Object.assign({}, MY_RULE)\n            v.col_type = v.col_type || MY_RULE.col_type\n\n            if (!v.url) {\n                return v\n            } else if (v.url.includes('@lazyRule=')) {\n                v.url = v.url.replace('.js:', '.js:\\nObject.assign(MY_RULE||{},' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n                return v\n            } else if (v.url.includes('@rule=')) {\n                let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                v.url = url\n                RULE.detail_find_rule = rule\n                RULE.detail_col_type = MY_RULE.col_type\n            } else if (v.url.startsWith('hiker://page/')) {\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\n                    return v\n                let path = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?.*)?$/)[1],\n                    subPage = MY_RULE.pageList.find((v) => v.path == path)\n                RULE.detail_find_rule = subPage.rule\n                RULE.detail_col_type = subPage.col_type\n                RULE.params = v.extra || {}\n            } else if (!MY_RULE.detail_find_rule) { return v }\n            v.extra = { url: v.url, RULE: RULE, pageTitle: v.title }\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n            return v\n        }))\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\n    }\n\n    function setHomeResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    function setSearchResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    eval(MY_RULE.find_rule.slice(3))\n} else {\n    let findRule = MY_RULE.find_rule.split(';')\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\n        let [title, img, desc, url] = findRule.map((v, i) => {\n                try {\n                    if (v == '*') return ''\n                    else v = (i == 1 || i == 3) ?\n                        parseDom(data, v) :\n                        parseDomForHtml(data, v)\n                    if (i != 3) v = runCode(v)\n                    return v\n                } catch (e) {}\n            }),\n            res = {\n                title: title,\n                url: url,\n                desc: desc,\n                img: img,\n                col_type: MY_RULE.col_type\n            }\n        if (res.url) {\n            if (res.url.includes('@lazyRule=')) {\n                res.url = res.url.replace('.js:', '.js:\\nObject.assign(MY_RULE||{},' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n            } else if (MY_RULE.detail_find_rule) {\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title  }\n            }\n        }\n        myCollection_el.push(res)\n    })\n    setResult(myCollection_el)\n}\n"},{"col_type":"movie_3","name":"详情","path":"detailLoad","rule":"js:\nvar myCollection_el = []\n\n// 处理MY_URL和MY_RULE\nlet RULE = MY_PARAMS.RULE\nMY_RULE.version = RULE.version\nMY_RULE.group = RULE.group\nMY_RULE.title = RULE.title\nMY_RULE.url = MY_URL\nMY_RULE.ua = RULE.ua\nMY_RULE.col_type = RULE.detail_col_type\nMY_RULE.find_rule = RULE.detail_find_rule\nMY_RULE.preRule = RULE.preRule\nMY_RULE.pageList = RULE.pageList\nMY_RULE.pages = RULE.pages\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\nMY_RULE.params = RULE.params\n// 解析正文\nif(MY_PARAMS.pageTitle) setPageTitle(MY_PARAMS.pageTitle)\neval(MY_RULE.preRule)\nsetLastChapterRule(MY_RULE.last_chapter_rule)\nMY_PARAMS = MY_RULE.params\nif (MY_RULE.find_rule.startsWith('js:')) {\n    function setResult(el, param1, param2, param3) {\n        param1 = CALLBACK_KEY\n        param2 = MY_RULE\n        param3 = MY_TYPE\n        if (Array.isArray(el.data)) el = el.data\n\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\n            let RULE = Object.assign({}, MY_RULE)\n            v.col_type = v.col_type || MY_RULE.col_type\n\n            if (!v.url) {\n                return v\n            } else if (v.url.includes('@lazyRule=')) {\n                v.url = v.url.replace('.js:', '.js:\\nObject.assign(MY_RULE||{},' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n                return v\n            } else if (v.url.includes('@rule=')) {\n                let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                v.url = url\n                RULE.detail_find_rule = rule\n                RULE.detail_col_type = MY_RULE.col_type\n            } else if (v.url.startsWith('hiker://page/')) {\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\n                    return v\n                let path = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?.*)?$/)[1],\n                    subPage = MY_RULE.pageList.find((v) => v.path == path)\n                RULE.detail_find_rule = subPage.rule\n                RULE.detail_col_type = subPage.col_type\n                RULE.params = v.extra || {}\n            } else { return v }\n            v.extra = { url: v.url, RULE: RULE }\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n            return v\n        }))\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\n    }\n\n    function setHomeResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    function setSearchResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    eval(MY_RULE.find_rule.slice(3))\n} else {\n    const { runCode } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\n    let findRule = MY_RULE.find_rule.split(';')\n    parseDomForArray(getResCode(), findRule.shift()).forEach((data) => {\n        let [title, img, desc, url] = findRule.map((v, i) => {\n                try {\n                    if (v == '*') return ''\n                    else v = (i == 1 || i == 3) ?\n                        parseDom(data, v) :\n                        parseDomForHtml(data, v)\n                    if (i != 3) v = runCode(v)\n                    return v\n                } catch (e) {}\n            }),\n            res = {\n                title: title,\n                url: url,\n                desc: desc,\n                img: img,\n                col_type: MY_RULE.col_type\n            }\n        if (res.url && res.url.includes('@lazyRule='))\n            res.url = res.url.replace('.js:', '.js:\\nObject.assign(MY_RULE||{},' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n        myCollection_el.push(res)\n    })\n    setResult(myCollection_el)\n}\n"},{"col_type":"movie_3","name":"数据载入","path":"dataLoad","rule":"//真正获取数据的逻辑\nfunction load() {\n    let url = 'http://hiker.nokia.press/hikerule/rulelist.json?id=1721',\n        d = []\n    try {\n        d = fetch(url)\n        if (url.startsWith('hiker://page/'))\n            d = JSON.parse(d).rule\n        d = JSON.parse(d)\n    } catch (e) {\n        d = []\n    }\n    return d.filter((v) => { return v.title != MY_RULE.title && v.author != '轻合集生成器' })\n}\n//检查间隔，默认一天\nlet min = 60 * 24 * 1\n\nlet data = []\nlet time = getItem('updatetime', '0')\ntime = parseInt(time)\nlet now = new Date().getTime()\nif (now - time > 1000 * 60 * min) {\n    log('更新了数据')\n    setItem('updatetime', '' + now)\n    data = load()\n    saveFile('data.json', JSON.stringify(data))\n} else {\n    log('没有更新数据')\n    data = JSON.parse(readFile('data.json'))\n}\n$.exports = data\n"},{"col_type":"movie_3","name":"工具集","path":"utility","rule":"$.exports = {\n    runCode: function(rule) {log(rule)\n        try {\n            let [input, code] = rule.split('.js:')\n            return code ? eval(code) : rule\n        } catch (e) { return rule }\n    },\n    urlParse: function(url, pageNum, func) {\n        url = url.split(';').map((v) => v.replace(/；；/g, ';'))\n        if (func) func(url)\n        url[0] = url[0].replace(/fypage(?:@(-?\\d+)@)?(?:\\*(\\d+)@)?/, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\n        url[0] = /^(.*?)(?:\\[firstPage=(.*?)\\])?$/.exec(url[0])\n        url[0] = runCode(url[0][2] && pageNum == 1 ? url[0][2] : url[0][1])\n        let options = { headers: { 'Content-Type': 'text/plain; charst=UTF-8' }, method: url[1] }\n        // post方法时转换参数\n        if (/^post$/i.test(options['method'])) {\n            let [oriUrl, body] = url[0].split('?')\n            url[0] = oriUrl.replace(/？？/g, '?')\n            if (body.startsWith('JsonBody=')) body = body.slice(9)\n            options['body'] = body\n        }\n        if (url[2]) options.headers['Content-Type'] = options.headers['Content-Type'].slice(0, 19) + url[2]\n        if (url[3]) url[3].match(/{(.*)}/)[1].split('&&').forEach((v) => {\n            let [key, value] = v.split('@')\n            options.headers[key] = runCode(value)\n        })\n        // 添加全局UA\n        if (!options.headers['User-Agent']) {\n            if (MY_RULE.ua == 'pc')\n                options.headers['User-Agent'] = PC_UA\n            else if (MY_RULE.ua == 'mobile')\n                options.headers['User-Agent'] = MOBILE_UA\n        }\n        return { MY_URL: url[0], indexHtml: fetch(url[0], options) }\n    }\n}\n"}],"title":"听书轻合集.dz","author":"轻合集生成器","version":71,"url":"hiker://empty","col_type":"icon_2_round","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nlet el = [{\n    title: '清除缓存,立即更新 <small>(基于远程仓库,不要频繁点击)',\n    url: $().lazyRule(() => {\n        clearItem('updatetime')\n        refreshPage(true)\n        return 'toast://已更新'\n    }),\n    img: 'hiker://images/icon1',\n    col_type: 'avatar'\n}]\nel.push({\n    url: '\"hiker://search?s=\"+input+\"&rule=' + getItem('myCollection') + '\"',\n    desc: '搜你想要的...',\n    title: '搜索',\n    col_type: 'input'\n})\nconst data = $.require('hiker://page/dataLoad?rule=' + getItem('myCollection'))\nsetResult(el.concat(data.map((v) => {\n    let fypage = /^[^;]*?fypage.*?(;.*)?$/.test(v.url) ? 'fypage' : '1'\n    return {\n        title: v.title,\n        url: 'hiker://page/indexLoad?#' + fypage + '#noHistory#',\n        img: v.myCollection_favicon || (JSON.parse(v.pages || ' []').find((v) => v.path == 'myCollection_favicon') || {}).rule,\n        extra: { RULE: v }\n    }\n})))","searchFind":"js:\nlet myCollection_el = [],\n    searchMode = getVar('myCollection-searchMode', ''),\n    [_, pageNum, keyword] = MY_URL.split('##'),\n    RULE = $.require('hiker://page/dataLoad?rule=' + getItem('myCollection')).filter((v) => v.search_url)\npageNum = parseInt(pageNum)\nif (!searchMode && pageNum > RULE.length) setResult([])\n\nlet searchCount = { title: '⬆ 已搜索了' + pageNum + '个小程序 ⬆\\n⬇ 下面还有' + (RULE.length - pageNum) + '个小程序 ⬇' }\nRULE = searchMode ? RULE.find((v) => v.title == searchMode) : RULE[pageNum - 1]\n// 处理MY_URL和MY_RULE\nMY_RULE.version = RULE.version\nMY_RULE.group = RULE.group\nMY_RULE.title = RULE.title\nMY_RULE.ua = RULE.ua\nMY_RULE.col_type = RULE.col_type\nMY_RULE.detail_col_type = RULE.sdetail_col_type\nMY_RULE.find_rule = RULE.searchFind\nMY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\nMY_RULE.preRule = RULE.preRule\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\nMY_RULE.params = {}\n\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nvar { MY_URL, indexHtml } = urlParse(RULE.search_url, searchMode ? pageNum : 1, (url) => {\n    url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\*\\*/g, encodeStr(keyword, url[2]))\n})\nMY_RULE.url = MY_URL\n// 正文解析\nif (pageNum == 1) eval(MY_RULE.preRule)\nif (MY_RULE.find_rule.startsWith('js:')) {\n    function getUrl() {\n        return MY_URL\n    }\n\n    function getResCode() {\n        return indexHtml\n    }\n\n    function setResult(el, param1, param2, param3) {\n        param1 = CALLBACK_KEY\n        param2 = MY_RULE\n        param3 = MY_TYPE\n        if (Array.isArray(el.data)) el = el.data\n        log(el)\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\n            let RULE = Object.assign({}, MY_RULE)\n\n            if (!v.url) {\n                return v\n            } else if (v.url.includes('@lazyRule=')) {\n                v.url = v.url.replace('.js:', '.js:\\nObject.assign(MY_RULE||{},' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n                return v\n            } else if (v.url.includes('@rule=')) {\n                let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                v.url = url\n                RULE.detail_find_rule = rule\n                RULE.detail_col_type = MY_RULE.col_type\n            } else if (v.url.startsWith('hiker://page/')) {\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\n                    return v\n                let path = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?.*)?$/)[1],\n                    subPage = MY_RULE.pageList.find(v => v.path == path)\n                RULE.detail_find_rule = subPage.rule\n                RULE.detail_col_type = subPage.col_type\n                RULE.params = v.extra || {}\n            } else if (!MY_RULE.detail_find_rule) { return v }\n            v.extra = { url: v.url, RULE: RULE, pageTitle: v.title  }\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n            return v\n        }))\n        if (!searchMode) myCollection_el.push(searchCount)\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\n    }\n\n    function setHomeResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    function setSearchResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    eval(MY_RULE.find_rule.slice(3))\n} else {\n    let findRule = MY_RULE.find_rule.split(';')\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\n        let [title, url, desc, content, img] = findRule.map((v, i) => {\n                try {\n                    if (v == '*') return ''\n                    else v = (i == 1 || i == 4) ?\n                        parseDom(data, v) :\n                        parseDomForHtml(data, v)\n                    if (i != 1) v = runCode(v)\n                    return v\n                } catch (e) {}\n            }),\n            res = {\n                title: title,\n                url: url,\n                desc: desc,\n                content: content,\n                img: img\n            }\n        if (res.url) {\n            if (res.url.includes('@lazyRule=')) {\n                res.url = res.url.replace('.js:', '.js:\\nObject.assign(MY_RULE||{},' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n            } else if (MY_RULE.detail_find_rule) {\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title  }\n            }\n        }\n        myCollection_el.push(res)\n        if (!searchMode) myCollection_el.push(searchCount)\n    })\n    setResult(myCollection_el)\n}\n","search_url":"hiker://empty##fypage##**","titleColor":"#ff13b66a","group":"①轻合集🔥","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"setItem('myCollection', MY_RULE.title)","pages":"[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"function ClassTab(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + MY_RULE.title + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = getVar('fold_' + this.sign, '')\\n        if (this.fold) el.push({\\n            title: '““””<span style=\\\"color:#049eff\\\">' + (folded ? '▶' : '▼'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n                selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: (selected == now ? '““””<span style=\\\"color:' + this.color + '\\\"><b>' : '') + name,\\n                    url: $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        putVar(sign, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&')\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        if (defaultClass) defaultClass = JSON.stringify({\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        })\\n        else throw new Error('cannot find id: ' + id + ' in classTab: ' + this.sign)\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    getLastClick() {\\n        return JSON.parse(getVar(this.sign, '{}'))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n$.exports = ClassTab\\n\"},{\"col_type\":\"movie_3\",\"name\":\"首页\",\"path\":\"indexLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = parseInt(MY_URL.split('#')[1]),\\n    RULE = MY_PARAMS.RULE,\\n    fyAll = RULE.url.includes('fyAll'),\\n    // 加载ClassTab组件\\n    ClassTab = $.require('hiker://page/ClassTab?rule=' + getItem('myCollection')),\\n    tabHeader = []\\n\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title })\\nif (pageNum == 1) {\\n    addListener('onClose', 'clearVar(\\\"myCollection-searchMode\\\")')\\n    putVar('myCollection-searchMode', RULE.title)\\n    tabHeader.load(myCollection_el)\\n    if (RULE.search_url) myCollection_el.push({\\n        title: \\\"搜索\\\",\\n        desc: \\\"搜你想要的...\\\",\\n        url: '\\\"hiker://search?s=\\\"+input+\\\"&rule=' + getItem('myCollection') + '\\\"',\\n        col_type: \\\"input\\\",\\n    })\\n}\\n// 处理MY_URL和MY_RULE\\nMY_RULE.version = RULE.version\\nMY_RULE.group = RULE.group\\nMY_RULE.title = RULE.title\\nMY_RULE.ua = RULE.ua\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.find_rule\\nMY_RULE.detail_find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, indexHtml } = urlParse(RULE.url, pageNum, (url) => {\\n    url[0] = fyAll ? url[0].replace(/fyAll/g, '$${fyAll}') : url[0].replace(/fy(class|area|year|sort)/g, '$${fy$1}')\\n    url[0] = tabHeader.setUrl(url[0])\\n})\\nMY_RULE.url = MY_URL\\n// 正文解析\\nif (pageNum == 1) eval(MY_RULE.preRule)\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url) {\\n                return v\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nObject.assign(MY_RULE||{},' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                RULE.detail_find_rule = rule\\n                RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let path = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?.*)?$/)[1],\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path)\\n                RULE.detail_find_rule = subPage.rule\\n                RULE.detail_col_type = subPage.col_type\\n                RULE.params = v.extra || {}\\n            } else if (!MY_RULE.detail_find_rule) { return v }\\n            v.extra = { url: v.url, RULE: RULE, pageTitle: v.title }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n\\n    function setHomeResult(a, param1, param2, param3) {\\n        setResult(a, param1, param2, param3)\\n    }\\n\\n    function setSearchResult(a, param1, param2, param3) {\\n        setResult(a, param1, param2, param3)\\n    }\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) {}\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nObject.assign(MY_RULE||{},' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title  }\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"详情\",\"path\":\"detailLoad\",\"rule\":\"js:\\nvar myCollection_el = []\\n\\n// 处理MY_URL和MY_RULE\\nlet RULE = MY_PARAMS.RULE\\nMY_RULE.version = RULE.version\\nMY_RULE.group = RULE.group\\nMY_RULE.title = RULE.title\\nMY_RULE.url = MY_URL\\nMY_RULE.ua = RULE.ua\\nMY_RULE.col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = RULE.pageList\\nMY_RULE.pages = RULE.pages\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = RULE.params\\n// 解析正文\\nif(MY_PARAMS.pageTitle) setPageTitle(MY_PARAMS.pageTitle)\\neval(MY_RULE.preRule)\\nsetLastChapterRule(MY_RULE.last_chapter_rule)\\nMY_PARAMS = MY_RULE.params\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url) {\\n                return v\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nObject.assign(MY_RULE||{},' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                RULE.detail_find_rule = rule\\n                RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let path = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?.*)?$/)[1],\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path)\\n                RULE.detail_find_rule = subPage.rule\\n                RULE.detail_col_type = subPage.col_type\\n                RULE.params = v.extra || {}\\n            } else { return v }\\n            v.extra = { url: v.url, RULE: RULE }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n\\n    function setHomeResult(a, param1, param2, param3) {\\n        setResult(a, param1, param2, param3)\\n    }\\n\\n    function setSearchResult(a, param1, param2, param3) {\\n        setResult(a, param1, param2, param3)\\n    }\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    const { runCode } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(getResCode(), findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) {}\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url && res.url.includes('@lazyRule='))\\n            res.url = res.url.replace('.js:', '.js:\\\\nObject.assign(MY_RULE||{},' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"数据载入\",\"path\":\"dataLoad\",\"rule\":\"//真正获取数据的逻辑\\nfunction load() {\\n    let url = 'http://hiker.nokia.press/hikerule/rulelist.json?id=1721',\\n        d = []\\n    try {\\n        d = fetch(url)\\n        if (url.startsWith('hiker://page/'))\\n            d = JSON.parse(d).rule\\n        d = JSON.parse(d)\\n    } catch (e) {\\n        d = []\\n    }\\n    return d.filter((v) => { return v.title != MY_RULE.title && v.author != '轻合集生成器' })\\n}\\n//检查间隔，默认一天\\nlet min = 60 * 24 * 1\\n\\nlet data = []\\nlet time = getItem('updatetime', '0')\\ntime = parseInt(time)\\nlet now = new Date().getTime()\\nif (now - time > 1000 * 60 * min) {\\n    log('更新了数据')\\n    setItem('updatetime', '' + now)\\n    data = load()\\n    saveFile('data.json', JSON.stringify(data))\\n} else {\\n    log('没有更新数据')\\n    data = JSON.parse(readFile('data.json'))\\n}\\n$.exports = data\\n\"},{\"col_type\":\"movie_3\",\"name\":\"工具集\",\"path\":\"utility\",\"rule\":\"$.exports = {\\n    runCode: function(rule) {log(rule)\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    },\\n    urlParse: function(url, pageNum, func) {\\n        url = url.split(';').map((v) => v.replace(/；；/g, ';'))\\n        if (func) func(url)\\n        url[0] = url[0].replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n        url[0] = /^(.*?)(?:\\\\[firstPage=(.*?)\\\\])?$/.exec(url[0])\\n        url[0] = runCode(url[0][2] && pageNum == 1 ? url[0][2] : url[0][1])\\n        let options = { headers: { 'Content-Type': 'text/plain; charst=UTF-8' }, method: url[1] }\\n        // post方法时转换参数\\n        if (/^post$/i.test(options['method'])) {\\n            let [oriUrl, body] = url[0].split('?')\\n            url[0] = oriUrl.replace(/？？/g, '?')\\n            if (body.startsWith('JsonBody=')) body = body.slice(9)\\n            options['body'] = body\\n        }\\n        if (url[2]) options.headers['Content-Type'] = options.headers['Content-Type'].slice(0, 19) + url[2]\\n        if (url[3]) url[3].match(/{(.*)}/)[1].split('&&').forEach((v) => {\\n            let [key, value] = v.split('@')\\n            options.headers[key] = runCode(value)\\n        })\\n        // 添加全局UA\\n        if (!options.headers['User-Agent']) {\\n            if (MY_RULE.ua == 'pc')\\n                options.headers['User-Agent'] = PC_UA\\n            else if (MY_RULE.ua == 'mobile')\\n                options.headers['User-Agent'] = MOBILE_UA\\n        }\\n        return { MY_URL: url[0], indexHtml: fetch(url[0], options) }\\n    }\\n}\\n\"}]"},{"last_chapter_rule":"","pageList":[{"col_type":"text_1","name":"ClassTab","path":"ClassTab","rule":"function ClassTab(classArray, params) {\n    Object.assign(this, params)\n    this.arr = classArray.map(v => this.init(v))\n    this.sign = '$' + MY_RULE.title + '_' + (this.name || '') + '_'\n    this.color = this.color || '#12b668'\n    this.boundary = this.boundary || 'blank_block'\n}\nClassTab.prototype = {\n    constructor: ClassTab,\n    load(el) {\n        let folded = getVar('fold_' + this.sign, '')\n        if (this.fold) el.push({\n            title: '““””<span style=\"color:#049eff\">' + (folded ? '▶' : '▼'),\n            url: $('#noLoading#').lazyRule((sign, folded) => {\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\n                refreshPage(false)\n                return 'hiker://empty'\n            }, this.sign, folded),\n            col_type: 'scroll_button'\n        })\n        let arr = folded ? [this.arr[0]] : this.arr\n        arr.forEach((v) => {\n            let { id, class_name, class_url } = v,\n                selected = JSON.stringify(this.getClass(id))\n            class_name.forEach((name, i) => {\n                let url = class_url[i],\n                    now = JSON.stringify({ name: name, url: url })\n                el.push({\n                    title: (selected == now ? '““””<span style=\"color:' + this.color + '\"><b>' : '') + name,\n                    url: $('#noLoading#').lazyRule((sign, id, now) => {\n                        putVar(sign + id, now)\n                        putVar(sign, now)\n                        refreshPage(false)\n                        return 'hiker://empty'\n                    }, this.sign, id, now),\n                    col_type: 'scroll_button'\n                })\n            })\n            el.push({ col_type: this.boundary })\n        })\n    },\n    init(classObject) {\n        if (typeof classObject.class_name == 'string')\n            classObject.class_name = classObject.class_name.split('&')\n        if (typeof classObject.class_url == 'string')\n            classObject.class_url = classObject.class_url.split('&')\n        return classObject\n    },\n    push(classObject) {\n        this.arr.push(this.init(classObject))\n    },\n    getClass(id) {\n        let defaultClass = this.arr.find(item => item.id == id)\n        if (defaultClass) defaultClass = JSON.stringify({\n            name: defaultClass.class_name[0],\n            url: defaultClass.class_url[0]\n        })\n        else throw new Error('cannot find id: ' + id + ' in classTab: ' + this.sign)\n        return JSON.parse(getVar(this.sign + id, defaultClass))\n    },\n    getLastClick() {\n        return JSON.parse(getVar(this.sign, '{}'))\n    },\n    setUrl(url) {\n        return url.replace(/\\$\\{([^}]*)\\}/g, (_, id) => this.getClass(id).url)\n    }\n}\n$.exports = ClassTab\n"},{"col_type":"movie_3","name":"首页","path":"indexLoad","rule":"js:\nlet myCollection_el = [],\n    pageNum = parseInt(MY_URL.split('#')[1]),\n    RULE = MY_PARAMS.RULE,\n    fyAll = RULE.url.includes('fyAll'),\n    // 加载ClassTab组件\n    ClassTab = $.require('hiker://page/ClassTab?rule=' + getItem('myCollection')),\n    tabHeader = []\n\nif (RULE.class_name) tabHeader.push({\n    id: fyAll ? 'fyAll' : 'fyclass',\n    class_name: RULE.class_name,\n    class_url: RULE.class_url\n})\nif (RULE.area_name) tabHeader.push({\n    id: fyAll ? 'fyAll' : 'fyarea',\n    class_name: RULE.area_name,\n    class_url: RULE.area_url\n})\nif (RULE.year_name) tabHeader.push({\n    id: fyAll ? 'fyAll' : 'fyyear',\n    class_name: RULE.year_name,\n    class_url: RULE.year_url\n})\nif (RULE.sort_name) tabHeader.push({\n    id: fyAll ? 'fyAll' : 'fysort',\n    class_name: RULE.sort_name,\n    class_url: RULE.sort_url\n})\ntabHeader = new ClassTab(tabHeader, { name: RULE.title })\nif (pageNum == 1) {\n    addListener('onClose', 'clearVar(\"myCollection-searchMode\")')\n    putVar('myCollection-searchMode', RULE.title)\n    tabHeader.load(myCollection_el)\n    if (RULE.search_url) myCollection_el.push({\n        title: \"搜索\",\n        desc: \"搜你想要的...\",\n        url: '\"hiker://search?s=\"+input+\"&rule=' + getItem('myCollection') + '\"',\n        col_type: \"input\",\n    })\n}\n// 处理MY_URL和MY_RULE\nMY_RULE.version = RULE.version\nMY_RULE.group = RULE.group\nMY_RULE.title = RULE.title\nMY_RULE.ua = RULE.ua\nMY_RULE.col_type = RULE.col_type\nMY_RULE.detail_col_type = RULE.detail_col_type\nMY_RULE.find_rule = RULE.find_rule\nMY_RULE.detail_find_rule = RULE.detail_find_rule\nMY_RULE.preRule = RULE.preRule\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\nMY_RULE.params = {}\n\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nvar { MY_URL, indexHtml } = urlParse(RULE.url, pageNum, (url) => {\n    url[0] = fyAll ? url[0].replace(/fyAll/g, '$${fyAll}') : url[0].replace(/fy(class|area|year|sort)/g, '$${fy$1}')\n    url[0] = tabHeader.setUrl(url[0])\n})\nMY_RULE.url = MY_URL\n// 正文解析\nif (pageNum == 1) eval(MY_RULE.preRule)\nif (MY_RULE.find_rule.startsWith('js:')) {\n    function getUrl() {\n        return MY_URL\n    }\n\n    function getResCode() {\n        return indexHtml\n    }\n\n    function setResult(el, param1, param2, param3) {\n        param1 = CALLBACK_KEY\n        param2 = MY_RULE\n        param3 = MY_TYPE\n        if (Array.isArray(el.data)) el = el.data\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\n            let RULE = Object.assign({}, MY_RULE)\n            v.col_type = v.col_type || MY_RULE.col_type\n\n            if (!v.url) {\n                return v\n            } else if (v.url.includes('@rule=')) {\n                let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                v.url = url\n                RULE.detail_find_rule = rule\n                RULE.detail_col_type = MY_RULE.col_type\n            } else if (v.url.startsWith('hiker://page/')) {\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\n                    return v\n                let path = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?.*)?$/)[1],\n                    subPage = MY_RULE.pageList.find((v) => v.path == path)\n                RULE.detail_find_rule = subPage.rule\n                RULE.detail_col_type = subPage.col_type\n                RULE.params = v.extra || {}\n            } else if (v.url.includes('@lazyRule=')) {\n                v.url = v.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n                return v\n            } else if (!MY_RULE.detail_find_rule) { return v }\n            v.extra = { url: v.url, RULE: RULE, pageTitle: v.title }\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n            return v\n        }))\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\n    }\n\n    function setHomeResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    function setSearchResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    eval(MY_RULE.find_rule.slice(3))\n} else {\n    let findRule = MY_RULE.find_rule.split(';')\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\n        let [title, img, desc, url] = findRule.map((v, i) => {\n                try {\n                    if (v == '*') return ''\n                    else v = (i == 1 || i == 3) ?\n                        parseDom(data, v) :\n                        parseDomForHtml(data, v)\n                    if (i != 3) v = runCode(v)\n                    return v\n                } catch (e) {}\n            }),\n            res = {\n                title: title,\n                url: url,\n                desc: desc,\n                img: img,\n                col_type: MY_RULE.col_type\n            }\n        if (res.url) {\n            if (res.url.includes('@lazyRule=')) {\n                res.url = res.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n            } else if (MY_RULE.detail_find_rule) {\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title  }\n            }\n        }\n        myCollection_el.push(res)\n    })\n    setResult(myCollection_el)\n}\n"},{"col_type":"movie_3","name":"详情","path":"detailLoad","rule":"js:\nvar myCollection_el = []\n\n// 处理MY_URL和MY_RULE\nlet RULE = MY_PARAMS.RULE\nMY_RULE.version = RULE.version\nMY_RULE.group = RULE.group\nMY_RULE.title = RULE.title\nMY_RULE.url = MY_URL\nMY_RULE.ua = RULE.ua\nMY_RULE.col_type = RULE.detail_col_type\nMY_RULE.find_rule = RULE.detail_find_rule\nMY_RULE.preRule = RULE.preRule\nMY_RULE.pageList = RULE.pageList\nMY_RULE.pages = RULE.pages\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\nMY_RULE.params = RULE.params\n// 解析正文\nif(MY_PARAMS.pageTitle) setPageTitle(MY_PARAMS.pageTitle)\neval(MY_RULE.preRule)\nsetLastChapterRule(MY_RULE.last_chapter_rule)\nMY_PARAMS = MY_RULE.params\nif (MY_RULE.find_rule.startsWith('js:')) {\n    function setResult(el, param1, param2, param3) {\n        param1 = CALLBACK_KEY\n        param2 = MY_RULE\n        param3 = MY_TYPE\n        if (Array.isArray(el.data)) el = el.data\n\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\n            let RULE = Object.assign({}, MY_RULE)\n            v.col_type = v.col_type || MY_RULE.col_type\n\n            if (!v.url) {\n                return v\n            } else if (v.url.includes('@rule=')) {\n                let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                v.url = url\n                RULE.detail_find_rule = rule\n                RULE.detail_col_type = MY_RULE.col_type\n            } else if (v.url.startsWith('hiker://page/')) {\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\n                    return v\n                let path = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?.*)?$/)[1],\n                    subPage = MY_RULE.pageList.find((v) => v.path == path)\n                RULE.detail_find_rule = subPage.rule\n                RULE.detail_col_type = subPage.col_type\n                RULE.params = v.extra || {}\n            } else if (v.url.includes('@lazyRule=')) {\n                v.url = v.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n                return v\n            } else { return v }\n            v.extra = { url: v.url, RULE: RULE }\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n            return v\n        }))\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\n    }\n\n    function setHomeResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    function setSearchResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    eval(MY_RULE.find_rule.slice(3))\n} else {\n    const { runCode } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\n    let findRule = MY_RULE.find_rule.split(';')\n    parseDomForArray(getResCode(), findRule.shift()).forEach((data) => {\n        let [title, img, desc, url] = findRule.map((v, i) => {\n                try {\n                    if (v == '*') return ''\n                    else v = (i == 1 || i == 3) ?\n                        parseDom(data, v) :\n                        parseDomForHtml(data, v)\n                    if (i != 3) v = runCode(v)\n                    return v\n                } catch (e) {}\n            }),\n            res = {\n                title: title,\n                url: url,\n                desc: desc,\n                img: img,\n                col_type: MY_RULE.col_type\n            }\n        if (res.url && res.url.includes('@lazyRule='))\n            res.url = res.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n        myCollection_el.push(res)\n    })\n    setResult(myCollection_el)\n}\n"},{"col_type":"movie_3","name":"数据载入","path":"dataLoad","rule":"//真正获取数据的逻辑\nfunction load() {\n    let url = 'http://hiker.nokia.press/hikerule/rulelist.json?id=2040',\n        d = []\n    try {\n        d = fetch(url)\n        if (url.startsWith('hiker://page/'))\n            d = JSON.parse(d).rule\n        d = JSON.parse(d)\n    } catch (e) {log(e.message)\n        d = []\n    }\n    return d.filter((v) => { return v.title != MY_RULE.title && v.author != '轻合集生成器' })\n}\n//检查间隔，默认一天\nlet min = 60 * 24 * 1\n\nlet data = []\nlet time = getItem('updatetime', '0')\ntime = parseInt(time)\nlet now = new Date().getTime()\nif (now - time > 1000 * 60 * min) {\n    log('更新了数据')\n    setItem('updatetime', '' + now)\n    data = load()\n    saveFile('data.json', JSON.stringify(data))\n} else {\n    log('没有更新数据')\n    data = JSON.parse(readFile('data.json'))\n}\n$.exports = data\n"},{"col_type":"movie_3","name":"工具集","path":"utility","rule":"$.exports = {\n    runCode: function(rule) {log(rule)\n        try {\n            let [input, code] = rule.split('.js:')\n            return code ? eval(code) : rule\n        } catch (e) { return rule }\n    },\n    urlParse: function(url, pageNum, func) {\n        url = url.split(';').map((v) => v.replace(/；；/g, ';'))\n        if (func) func(url)\n        url[0] = url[0].replace(/fypage(?:@(-?\\d+)@)?(?:\\*(\\d+)@)?/, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\n        url[0] = /^(.*?)(?:\\[firstPage=(.*?)\\])?$/.exec(url[0])\n        url[0] = runCode(url[0][2] && pageNum == 1 ? url[0][2] : url[0][1])\n        let options = { headers: { 'Content-Type': 'text/plain; charst=UTF-8' }, method: url[1] }\n        // post方法时转换参数\n        if (/^post$/i.test(options['method'])) {\n            let [oriUrl, body] = url[0].split('?')\n            url[0] = oriUrl.replace(/？？/g, '?')\n            if (body.startsWith('JsonBody=')) body = body.slice(9)\n            options['body'] = body\n        }\n        if (url[2]) options.headers['Content-Type'] = options.headers['Content-Type'].slice(0, 19) + url[2]\n        if (url[3]) url[3].match(/{(.*)}/)[1].split('&&').forEach((v) => {\n            let [key, value] = v.split('@')\n            options.headers[key] = runCode(value)\n        })\n        // 添加全局UA\n        if (!options.headers['User-Agent']) {\n            if (MY_RULE.ua == 'pc')\n                options.headers['User-Agent'] = PC_UA\n            else if (MY_RULE.ua == 'mobile')\n                options.headers['User-Agent'] = MOBILE_UA\n        }\n        return { MY_URL: url[0], indexHtml: fetch(url[0], options) }\n    }\n}\n"}],"title":"轻合集·Q","author":"小棉袄🌞&永远の明日","version":72,"url":"hiker://empty","col_type":"icon_2_round","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nlet el = [{\n    title: '清除缓存,立即更新 <small>(基于远程仓库,不要频繁点击)',\n    url: $().lazyRule(() => {\n        clearItem('updatetime')\n        refreshPage(true)\n        return 'toast://已更新'\n    }),\n    img: 'hiker://images/icon1',\n    col_type: 'avatar'\n}]\nel.push({\n    url: '\"hiker://search?s=\"+input+\"&rule=' + getItem('myCollection') + '\"',\n    desc: '搜你想要的...',\n    title: '搜索',\n    col_type: 'input'\n})\nconst data = $.require('hiker://page/dataLoad?rule=' + getItem('myCollection'))\nsetResult(el.concat(data.map((v) => {\n    let fypage = /^[^;]*?fypage.*?(;.*)?$/.test(v.url) ? 'fypage' : '1'\n    return {\n        title: v.title,\n        url: 'hiker://page/indexLoad?#' + fypage + '#noHistory#',\n        img: v.icon,\n        extra: { RULE: v }\n    }\n})))","searchFind":"js:\nlet myCollection_el = [],\n    searchMode = getVar('myCollection-searchMode', ''),\n    [_, pageNum, keyword] = MY_URL.split('##'),\n    RULE = $.require('hiker://page/dataLoad?rule=' + getItem('myCollection')).filter((v) => v.search_url)\npageNum = parseInt(pageNum)\nif (!searchMode && pageNum > RULE.length) setResult([])\n\nlet searchCount = { title: '⬆ 已搜索了' + pageNum + '个小程序 ⬆\\n⬇ 下面还有' + (RULE.length - pageNum) + '个小程序 ⬇' }\nRULE = searchMode ? RULE.find((v) => v.title == searchMode) : RULE[pageNum - 1]\n// 处理MY_URL和MY_RULE\nMY_RULE.version = RULE.version\nMY_RULE.group = RULE.group\nMY_RULE.title = RULE.title\nMY_RULE.ua = RULE.ua\nMY_RULE.col_type = RULE.col_type\nMY_RULE.detail_col_type = RULE.sdetail_col_type\nMY_RULE.find_rule = RULE.searchFind\nMY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\nMY_RULE.preRule = RULE.preRule\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\nMY_RULE.params = {}\n\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nvar { MY_URL, indexHtml } = urlParse(RULE.search_url, searchMode ? pageNum : 1, (url) => {\n    url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\*\\*/g, encodeStr(keyword, url[2]))\n})\nMY_RULE.url = MY_URL\n// 正文解析\nif (pageNum == 1) eval(MY_RULE.preRule)\nif (MY_RULE.find_rule.startsWith('js:')) {\n    function getUrl() {\n        return MY_URL\n    }\n\n    function getResCode() {\n        return indexHtml\n    }\n\n    function setResult(el, param1, param2, param3) {\n        param1 = CALLBACK_KEY\n        param2 = MY_RULE\n        param3 = MY_TYPE\n        if (Array.isArray(el.data)) el = el.data\n        log(el)\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\n            let RULE = Object.assign({}, MY_RULE)\n\n            if (!v.url) {\n                return v\n            } else if (v.url.includes('@rule=')) {\n                let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                v.url = url\n                RULE.detail_find_rule = rule\n                RULE.detail_col_type = MY_RULE.col_type\n            } else if (v.url.startsWith('hiker://page/')) {\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\n                    return v\n                let path = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?.*)?$/)[1],\n                    subPage = MY_RULE.pageList.find(v => v.path == path)\n                RULE.detail_find_rule = subPage.rule\n                RULE.detail_col_type = subPage.col_type\n                RULE.params = v.extra || {}\n            } else if (v.url.includes('@lazyRule=')) {\n                v.url = v.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n                return v\n            } else if (!MY_RULE.detail_find_rule) { return v }\n            v.extra = { url: v.url, RULE: RULE, pageTitle: v.title  }\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n            return v\n        }))\n        if (!searchMode) myCollection_el.push(searchCount)\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\n    }\n\n    function setHomeResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    function setSearchResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    eval(MY_RULE.find_rule.slice(3))\n} else {\n    let findRule = MY_RULE.find_rule.split(';')\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\n        let [title, url, desc, content, img] = findRule.map((v, i) => {\n                try {\n                    if (v == '*') return ''\n                    else v = (i == 1 || i == 4) ?\n                        parseDom(data, v) :\n                        parseDomForHtml(data, v)\n                    if (i != 1) v = runCode(v)\n                    return v\n                } catch (e) {}\n            }),\n            res = {\n                title: title,\n                url: url,\n                desc: desc,\n                content: content,\n                img: img\n            }\n        if (res.url) {\n            if (res.url.includes('@lazyRule=')) {\n                res.url = res.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n            } else if (MY_RULE.detail_find_rule) {\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title  }\n            }\n        }\n        myCollection_el.push(res)\n        if (!searchMode) myCollection_el.push(searchCount)\n    })\n    setResult(myCollection_el)\n}\n","search_url":"hiker://empty##fypage##**","group":"①轻合集🔥","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"setItem('myCollection', MY_RULE.title)\n// UA，==>，rule和lazyRule嵌套问题\n// 分组\n// 导入导出，删除，排序，简单编辑？？基于远程会自动更新","pages":"[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"function ClassTab(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + MY_RULE.title + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = getVar('fold_' + this.sign, '')\\n        if (this.fold) el.push({\\n            title: '““””<span style=\\\"color:#049eff\\\">' + (folded ? '▶' : '▼'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n                selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: (selected == now ? '““””<span style=\\\"color:' + this.color + '\\\"><b>' : '') + name,\\n                    url: $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        putVar(sign, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&')\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        if (defaultClass) defaultClass = JSON.stringify({\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        })\\n        else throw new Error('cannot find id: ' + id + ' in classTab: ' + this.sign)\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    getLastClick() {\\n        return JSON.parse(getVar(this.sign, '{}'))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n$.exports = ClassTab\\n\"},{\"col_type\":\"movie_3\",\"name\":\"首页\",\"path\":\"indexLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = parseInt(MY_URL.split('#')[1]),\\n    RULE = MY_PARAMS.RULE,\\n    fyAll = RULE.url.includes('fyAll'),\\n    // 加载ClassTab组件\\n    ClassTab = $.require('hiker://page/ClassTab?rule=' + getItem('myCollection')),\\n    tabHeader = []\\n\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title })\\nif (pageNum == 1) {\\n    addListener('onClose', 'clearVar(\\\"myCollection-searchMode\\\")')\\n    putVar('myCollection-searchMode', RULE.title)\\n    tabHeader.load(myCollection_el)\\n    if (RULE.search_url) myCollection_el.push({\\n        title: \\\"搜索\\\",\\n        desc: \\\"搜你想要的...\\\",\\n        url: '\\\"hiker://search?s=\\\"+input+\\\"&rule=' + getItem('myCollection') + '\\\"',\\n        col_type: \\\"input\\\",\\n    })\\n}\\n// 处理MY_URL和MY_RULE\\nMY_RULE.version = RULE.version\\nMY_RULE.group = RULE.group\\nMY_RULE.title = RULE.title\\nMY_RULE.ua = RULE.ua\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.find_rule\\nMY_RULE.detail_find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, indexHtml } = urlParse(RULE.url, pageNum, (url) => {\\n    url[0] = fyAll ? url[0].replace(/fyAll/g, '$${fyAll}') : url[0].replace(/fy(class|area|year|sort)/g, '$${fy$1}')\\n    url[0] = tabHeader.setUrl(url[0])\\n})\\nMY_RULE.url = MY_URL\\n// 正文解析\\nif (pageNum == 1) eval(MY_RULE.preRule)\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                RULE.detail_find_rule = rule\\n                RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let path = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?.*)?$/)[1],\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path)\\n                RULE.detail_find_rule = subPage.rule\\n                RULE.detail_col_type = subPage.col_type\\n                RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\\n                return v\\n            } else if (!MY_RULE.detail_find_rule) { return v }\\n            v.extra = { url: v.url, RULE: RULE, pageTitle: v.title }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n\\n    function setHomeResult(a, param1, param2, param3) {\\n        setResult(a, param1, param2, param3)\\n    }\\n\\n    function setSearchResult(a, param1, param2, param3) {\\n        setResult(a, param1, param2, param3)\\n    }\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) {}\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title  }\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"详情\",\"path\":\"detailLoad\",\"rule\":\"js:\\nvar myCollection_el = []\\n\\n// 处理MY_URL和MY_RULE\\nlet RULE = MY_PARAMS.RULE\\nMY_RULE.version = RULE.version\\nMY_RULE.group = RULE.group\\nMY_RULE.title = RULE.title\\nMY_RULE.url = MY_URL\\nMY_RULE.ua = RULE.ua\\nMY_RULE.col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = RULE.pageList\\nMY_RULE.pages = RULE.pages\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = RULE.params\\n// 解析正文\\nif(MY_PARAMS.pageTitle) setPageTitle(MY_PARAMS.pageTitle)\\neval(MY_RULE.preRule)\\nsetLastChapterRule(MY_RULE.last_chapter_rule)\\nMY_PARAMS = MY_RULE.params\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                RULE.detail_find_rule = rule\\n                RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let path = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?.*)?$/)[1],\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path)\\n                RULE.detail_find_rule = subPage.rule\\n                RULE.detail_col_type = subPage.col_type\\n                RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\\n                return v\\n            } else { return v }\\n            v.extra = { url: v.url, RULE: RULE }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n\\n    function setHomeResult(a, param1, param2, param3) {\\n        setResult(a, param1, param2, param3)\\n    }\\n\\n    function setSearchResult(a, param1, param2, param3) {\\n        setResult(a, param1, param2, param3)\\n    }\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    const { runCode } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(getResCode(), findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) {}\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url && res.url.includes('@lazyRule='))\\n            res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"数据载入\",\"path\":\"dataLoad\",\"rule\":\"//真正获取数据的逻辑\\nfunction load() {\\n    let url = 'http://hiker.nokia.press/hikerule/rulelist.json?id=2040',\\n        d = []\\n    try {\\n        d = fetch(url)\\n        if (url.startsWith('hiker://page/'))\\n            d = JSON.parse(d).rule\\n        d = JSON.parse(d)\\n    } catch (e) {log(e.message)\\n        d = []\\n    }\\n    return d.filter((v) => { return v.title != MY_RULE.title && v.author != '轻合集生成器' })\\n}\\n//检查间隔，默认一天\\nlet min = 60 * 24 * 1\\n\\nlet data = []\\nlet time = getItem('updatetime', '0')\\ntime = parseInt(time)\\nlet now = new Date().getTime()\\nif (now - time > 1000 * 60 * min) {\\n    log('更新了数据')\\n    setItem('updatetime', '' + now)\\n    data = load()\\n    saveFile('data.json', JSON.stringify(data))\\n} else {\\n    log('没有更新数据')\\n    data = JSON.parse(readFile('data.json'))\\n}\\n$.exports = data\\n\"},{\"col_type\":\"movie_3\",\"name\":\"工具集\",\"path\":\"utility\",\"rule\":\"$.exports = {\\n    runCode: function(rule) {log(rule)\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    },\\n    urlParse: function(url, pageNum, func) {\\n        url = url.split(';').map((v) => v.replace(/；；/g, ';'))\\n        if (func) func(url)\\n        url[0] = url[0].replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n        url[0] = /^(.*?)(?:\\\\[firstPage=(.*?)\\\\])?$/.exec(url[0])\\n        url[0] = runCode(url[0][2] && pageNum == 1 ? url[0][2] : url[0][1])\\n        let options = { headers: { 'Content-Type': 'text/plain; charst=UTF-8' }, method: url[1] }\\n        // post方法时转换参数\\n        if (/^post$/i.test(options['method'])) {\\n            let [oriUrl, body] = url[0].split('?')\\n            url[0] = oriUrl.replace(/？？/g, '?')\\n            if (body.startsWith('JsonBody=')) body = body.slice(9)\\n            options['body'] = body\\n        }\\n        if (url[2]) options.headers['Content-Type'] = options.headers['Content-Type'].slice(0, 19) + url[2]\\n        if (url[3]) url[3].match(/{(.*)}/)[1].split('&&').forEach((v) => {\\n            let [key, value] = v.split('@')\\n            options.headers[key] = runCode(value)\\n        })\\n        // 添加全局UA\\n        if (!options.headers['User-Agent']) {\\n            if (MY_RULE.ua == 'pc')\\n                options.headers['User-Agent'] = PC_UA\\n            else if (MY_RULE.ua == 'mobile')\\n                options.headers['User-Agent'] = MOBILE_UA\\n        }\\n        return { MY_URL: url[0], indexHtml: fetch(url[0], options) }\\n    }\\n}\\n\"}]","icon":"hiker://images/icon1"},{"last_chapter_rule":"","pageList":[{"col_type":"text_1","name":"ClassTab","path":"ClassTab","rule":"function ClassTab(classArray, params) {\n    Object.assign(this, params)\n    this.arr = classArray.map(v => this.init(v))\n    this.sign = '$' + MY_RULE.title + '_' + (this.name || '') + '_'\n    this.color = this.color || '#12b668'\n    this.boundary = this.boundary || 'blank_block'\n}\nClassTab.prototype = {\n    constructor: ClassTab,\n    load(el) {\n        let folded = getVar('fold_' + this.sign, '')\n        if (this.fold) el.push({\n            title: '““””<span style=\"color:#049eff\">' + (folded ? '▶' : '▼'),\n            url: $('#noLoading#').lazyRule((sign, folded) => {\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\n                refreshPage(false)\n                return 'hiker://empty'\n            }, this.sign, folded),\n            col_type: 'scroll_button'\n        })\n        let arr = folded ? [this.arr[0]] : this.arr\n        arr.forEach((v) => {\n            let { id, class_name, class_url } = v,\n                selected = JSON.stringify(this.getClass(id))\n            class_name.forEach((name, i) => {\n                let url = class_url[i],\n                    now = JSON.stringify({ name: name, url: url })\n                el.push({\n                    title: (selected == now ? '““””<span style=\"color:' + this.color + '\"><b>' : '') + name,\n                    url: $('#noLoading#').lazyRule((sign, id, now) => {\n                        putVar(sign + id, now)\n                        putVar(sign, now)\n                        refreshPage(false)\n                        return 'hiker://empty'\n                    }, this.sign, id, now),\n                    col_type: 'scroll_button'\n                })\n            })\n            el.push({ col_type: this.boundary })\n        })\n    },\n    init(classObject) {\n        if (typeof classObject.class_name == 'string')\n            classObject.class_name = classObject.class_name.split('&')\n        if (typeof classObject.class_url == 'string')\n            classObject.class_url = classObject.class_url.split('&')\n        return classObject\n    },\n    push(classObject) {\n        this.arr.push(this.init(classObject))\n    },\n    getClass(id) {\n        let defaultClass = this.arr.find(item => item.id == id)\n        if (defaultClass) defaultClass = JSON.stringify({\n            name: defaultClass.class_name[0],\n            url: defaultClass.class_url[0]\n        })\n        else throw new Error('cannot find id: ' + id + ' in classTab: ' + this.sign)\n        return JSON.parse(getVar(this.sign + id, defaultClass))\n    },\n    getLastClick() {\n        return JSON.parse(getVar(this.sign, '{}'))\n    },\n    setUrl(url) {\n        return url.replace(/\\$\\{([^}]*)\\}/g, (_, id) => this.getClass(id).url)\n    }\n}\n$.exports = ClassTab\n"},{"col_type":"movie_3","name":"首页","path":"indexLoad","rule":"js:\nlet myCollection_el = [],\n    pageNum = parseInt(MY_URL.split('#')[1]),\n    RULE = MY_PARAMS.RULE,\n    fyAll = RULE.url.includes('fyAll'),\n    // 加载ClassTab组件\n    ClassTab = $.require('hiker://page/ClassTab?rule=' + getItem('myCollection')),\n    tabHeader = []\n\nif (RULE.class_name) tabHeader.push({\n    id: fyAll ? 'fyAll' : 'fyclass',\n    class_name: RULE.class_name,\n    class_url: RULE.class_url\n})\nif (RULE.area_name) tabHeader.push({\n    id: fyAll ? 'fyAll' : 'fyarea',\n    class_name: RULE.area_name,\n    class_url: RULE.area_url\n})\nif (RULE.year_name) tabHeader.push({\n    id: fyAll ? 'fyAll' : 'fyyear',\n    class_name: RULE.year_name,\n    class_url: RULE.year_url\n})\nif (RULE.sort_name) tabHeader.push({\n    id: fyAll ? 'fyAll' : 'fysort',\n    class_name: RULE.sort_name,\n    class_url: RULE.sort_url\n})\ntabHeader = new ClassTab(tabHeader, { name: RULE.title })\nif (pageNum == 1) {\n    addListener('onClose', 'clearVar(\"myCollection-searchMode\")')\n    putVar('myCollection-searchMode', RULE.title)\n    tabHeader.load(myCollection_el)\n    if (RULE.search_url) myCollection_el.push({\n        title: \"搜索\",\n        desc: \"搜你想要的...\",\n        url: '\"hiker://search?s=\"+input+\"&rule=' + getItem('myCollection') + '\"',\n        col_type: \"input\",\n    })\n}\n// 处理MY_URL和MY_RULE\nMY_RULE.version = RULE.version\nMY_RULE.group = RULE.group\nMY_RULE.title = RULE.title\nMY_RULE.ua = RULE.ua\nMY_RULE.col_type = RULE.col_type\nMY_RULE.detail_col_type = RULE.detail_col_type\nMY_RULE.find_rule = RULE.find_rule\nMY_RULE.detail_find_rule = RULE.detail_find_rule\nMY_RULE.preRule = RULE.preRule\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\nMY_RULE.params = {}\n\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nvar { MY_URL, indexHtml } = urlParse(RULE.url, pageNum, (url) => {\n    url[0] = fyAll ? url[0].replace(/fyAll/g, '$${fyAll}') : url[0].replace(/fy(class|area|year|sort)/g, '$${fy$1}')\n    url[0] = tabHeader.setUrl(url[0])\n})\nMY_RULE.url = MY_URL\n// 正文解析\nif (pageNum == 1) eval(MY_RULE.preRule)\nif (MY_RULE.find_rule.startsWith('js:')) {\n    function getUrl() {\n        return MY_URL\n    }\n\n    function getResCode() {\n        return indexHtml\n    }\n\n    function setResult(el, param1, param2, param3) {\n        param1 = CALLBACK_KEY\n        param2 = MY_RULE\n        param3 = MY_TYPE\n        if (Array.isArray(el.data)) el = el.data\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\n            let RULE = Object.assign({}, MY_RULE)\n            v.col_type = v.col_type || MY_RULE.col_type\n\n            if (!v.url) {\n                return v\n            } else if (v.url.includes('@lazyRule=')) {\n                v.url = v.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n                return v\n            } else if (v.url.includes('@rule=')) {\n                let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                v.url = url\n                RULE.detail_find_rule = rule\n                RULE.detail_col_type = MY_RULE.col_type\n            } else if (v.url.startsWith('hiker://page/')) {\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\n                    return v\n                let path = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?.*)?$/)[1],\n                    subPage = MY_RULE.pageList.find((v) => v.path == path)\n                RULE.detail_find_rule = subPage.rule\n                RULE.detail_col_type = subPage.col_type\n                RULE.params = v.extra || {}\n            } else if (!MY_RULE.detail_find_rule) { return v }\n            v.extra = { url: v.url, RULE: RULE, pageTitle: v.title }\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n            return v\n        }))\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\n    }\n\n    function setHomeResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    function setSearchResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    eval(MY_RULE.find_rule.slice(3))\n} else {\n    let findRule = MY_RULE.find_rule.split(';')\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\n        let [title, img, desc, url] = findRule.map((v, i) => {\n                try {\n                    if (v == '*') return ''\n                    else v = (i == 1 || i == 3) ?\n                        parseDom(data, v) :\n                        parseDomForHtml(data, v)\n                    if (i != 3) v = runCode(v)\n                    return v\n                } catch (e) {}\n            }),\n            res = {\n                title: title,\n                url: url,\n                desc: desc,\n                img: img,\n                col_type: MY_RULE.col_type\n            }\n        if (res.url) {\n            if (res.url.includes('@lazyRule=')) {\n                res.url = res.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n            } else if (MY_RULE.detail_find_rule) {\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title  }\n            }\n        }\n        myCollection_el.push(res)\n    })\n    setResult(myCollection_el)\n}\n"},{"col_type":"movie_3","name":"详情","path":"detailLoad","rule":"js:\nvar myCollection_el = []\n\n// 处理MY_URL和MY_RULE\nlet RULE = MY_PARAMS.RULE\nMY_RULE.version = RULE.version\nMY_RULE.group = RULE.group\nMY_RULE.title = RULE.title\nMY_RULE.url = MY_URL\nMY_RULE.ua = RULE.ua\nMY_RULE.col_type = RULE.detail_col_type\nMY_RULE.find_rule = RULE.detail_find_rule\nMY_RULE.preRule = RULE.preRule\nMY_RULE.pageList = RULE.pageList\nMY_RULE.pages = RULE.pages\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\nMY_RULE.params = RULE.params\n// 解析正文\nif(MY_PARAMS.pageTitle) setPageTitle(MY_PARAMS.pageTitle)\neval(MY_RULE.preRule)\nsetLastChapterRule(MY_RULE.last_chapter_rule)\nMY_PARAMS = MY_RULE.params\nif (MY_RULE.find_rule.startsWith('js:')) {\n    function setResult(el, param1, param2, param3) {\n        param1 = CALLBACK_KEY\n        param2 = MY_RULE\n        param3 = MY_TYPE\n        if (Array.isArray(el.data)) el = el.data\n\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\n            let RULE = Object.assign({}, MY_RULE)\n            v.col_type = v.col_type || MY_RULE.col_type\n\n            if (!v.url) {\n                return v\n            } else if (v.url.includes('@lazyRule=')) {\n                v.url = v.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n                return v\n            } else if (v.url.includes('@rule=')) {\n                let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                v.url = url\n                RULE.detail_find_rule = rule\n                RULE.detail_col_type = MY_RULE.col_type\n            } else if (v.url.startsWith('hiker://page/')) {\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\n                    return v\n                let path = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?.*)?$/)[1],\n                    subPage = MY_RULE.pageList.find((v) => v.path == path)\n                RULE.detail_find_rule = subPage.rule\n                RULE.detail_col_type = subPage.col_type\n                RULE.params = v.extra || {}\n            } else { return v }\n            v.extra = { url: v.url, RULE: RULE }\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n            return v\n        }))\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\n    }\n\n    function setHomeResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    function setSearchResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    eval(MY_RULE.find_rule.slice(3))\n} else {\n    const { runCode } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\n    let findRule = MY_RULE.find_rule.split(';')\n    parseDomForArray(getResCode(), findRule.shift()).forEach((data) => {\n        let [title, img, desc, url] = findRule.map((v, i) => {\n                try {\n                    if (v == '*') return ''\n                    else v = (i == 1 || i == 3) ?\n                        parseDom(data, v) :\n                        parseDomForHtml(data, v)\n                    if (i != 3) v = runCode(v)\n                    return v\n                } catch (e) {}\n            }),\n            res = {\n                title: title,\n                url: url,\n                desc: desc,\n                img: img,\n                col_type: MY_RULE.col_type\n            }\n        if (res.url && res.url.includes('@lazyRule='))\n            res.url = res.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n        myCollection_el.push(res)\n    })\n    setResult(myCollection_el)\n}\n"},{"col_type":"movie_3","name":"数据载入","path":"dataLoad","rule":"//真正获取数据的逻辑\nfunction load() {\n    let url = 'http://hiker.nokia.press/hikerule/dev/json_list?name=569617079',\n        d = []\n    try {\n        d = fetch(url)\n        if (url.startsWith('hiker://page/'))\n            d = JSON.parse(d).rule\n        d = JSON.parse(d)\n    } catch (e) {\n        d = []\n    }\n    return d.filter((v) => { return v.title != MY_RULE.title && !v.title.includes(\"模板\") && v.author != '轻合集生成器' })\n}\n//检查间隔，默认一天\nlet min = 60 * 24 * 1\n\nlet data = []\nlet time = getItem('updatetime', '0')\ntime = parseInt(time)\nlet now = new Date().getTime()\nif (now - time > 1000 * 60 * min) {\n    log('更新了数据')\n    setItem('updatetime', '' + now)\n    data = load()\n    saveFile('data.json', JSON.stringify(data))\n} else {\n    log('没有更新数据')\n    data = JSON.parse(readFile('data.json'))\n}\n$.exports = data\n"},{"col_type":"movie_3","name":"工具集","path":"utility","rule":"$.exports = {\n    runCode: function(rule) {log(rule)\n        try {\n            let [input, code] = rule.split('.js:')\n            return code ? eval(code) : rule\n        } catch (e) { return rule }\n    },\n    urlParse: function(url, pageNum, func) {\n        url = url.split(';').map((v) => v.replace(/；；/g, ';'))\n        if (func) func(url)\n        url[0] = url[0].replace(/fypage(?:@(-?\\d+)@)?(?:\\*(\\d+)@)?/, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\n        url[0] = /^(.*?)(?:\\[firstPage=(.*?)\\])?$/.exec(url[0])\n        url[0] = runCode(url[0][2] && pageNum == 1 ? url[0][2] : url[0][1])\n        let options = { headers: { 'Content-Type': 'text/plain; charst=UTF-8' }, method: url[1] }\n        // post方法时转换参数\n        if (/^post$/i.test(options['method'])) {\n            let [oriUrl, body] = url[0].split('?')\n            url[0] = oriUrl.replace(/？？/g, '?')\n            if (body.startsWith('JsonBody=')) body = body.slice(9)\n            options['body'] = body\n        }\n        if (url[2]) options.headers['Content-Type'] = options.headers['Content-Type'].slice(0, 19) + url[2]\n        if (url[3]) url[3].match(/{(.*)}/)[1].split('&&').forEach((v) => {\n            let [key, value] = v.split('@')\n            options.headers[key] = runCode(value)\n        })\n        // 添加全局UA\n        if (!options.headers['User-Agent']) {\n            if (MY_RULE.ua == 'pc')\n                options.headers['User-Agent'] = PC_UA\n            else if (MY_RULE.ua == 'mobile')\n                options.headers['User-Agent'] = MOBILE_UA\n        }\n        return { MY_URL: url[0], indexHtml: fetch(url[0], options) }\n    }\n}\n"}],"title":"轻音乐·Q","author":"轻合集生成器","version":72,"url":"hiker://empty","col_type":"icon_2_round","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nlet el = [{\n    title: '清除缓存,立即更新 <small>(基于远程仓库,不要频繁点击)',\n    url: $().lazyRule(() => {\n        clearItem('updatetime')\n        refreshPage(true)\n        return 'toast://已更新'\n    }),\n    img: 'hiker://images/icon1',\n    col_type: 'avatar'\n}]\nel.push({\n    url: '\"hiker://search?s=\"+input+\"&rule=' + getItem('myCollection') + '\"',\n    desc: '搜你想要的...',\n    title: '搜索',\n    col_type: 'input'\n})\nconst data = $.require('hiker://page/dataLoad?rule=' + getItem('myCollection'))\nsetResult(el.concat(data.map((v) => {\n    let fypage = /^[^;]*?fypage.*?(;.*)?$/.test(v.url) ? 'fypage' : '1'\n    return {\n        title: v.title,\n        url: 'hiker://page/indexLoad?#' + fypage + '#noHistory#',\n        img: v.icon,\n        extra: { RULE: v }\n    }\n})))","searchFind":"js:\nlet myCollection_el = [],\n    searchMode = getVar('myCollection-searchMode', ''),\n    [_, pageNum, keyword] = MY_URL.split('##'),\n    RULE = $.require('hiker://page/dataLoad?rule=' + getItem('myCollection')).filter((v) => v.search_url)\npageNum = parseInt(pageNum)\nif (!searchMode && pageNum > RULE.length) setResult([])\n\nlet searchCount = { title: '⬆ 已搜索了' + pageNum + '个小程序 ⬆\\n⬇ 下面还有' + (RULE.length - pageNum) + '个小程序 ⬇' }\nRULE = searchMode ? RULE.find((v) => v.title == searchMode) : RULE[pageNum - 1]\n// 处理MY_URL和MY_RULE\nMY_RULE.version = RULE.version\nMY_RULE.group = RULE.group\nMY_RULE.title = RULE.title\nMY_RULE.ua = RULE.ua\nMY_RULE.col_type = RULE.col_type\nMY_RULE.detail_col_type = RULE.sdetail_col_type\nMY_RULE.find_rule = RULE.searchFind\nMY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\nMY_RULE.preRule = RULE.preRule\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\nMY_RULE.params = {}\n\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nvar { MY_URL, indexHtml } = urlParse(RULE.search_url, searchMode ? pageNum : 1, (url) => {\n    url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\*\\*/g, encodeStr(keyword, url[2]))\n})\nMY_RULE.url = MY_URL\n// 正文解析\nif (pageNum == 1) eval(MY_RULE.preRule)\nif (MY_RULE.find_rule.startsWith('js:')) {\n    function getUrl() {\n        return MY_URL\n    }\n\n    function getResCode() {\n        return indexHtml\n    }\n\n    function setResult(el, param1, param2, param3) {\n        param1 = CALLBACK_KEY\n        param2 = MY_RULE\n        param3 = MY_TYPE\n        if (Array.isArray(el.data)) el = el.data\n        log(el)\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\n            let RULE = Object.assign({}, MY_RULE)\n\n            if (!v.url) {\n                return v\n            } else if (v.url.includes('@lazyRule=')) {\n                v.url = v.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n                return v\n            } else if (v.url.includes('@rule=')) {\n                let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                v.url = url\n                RULE.detail_find_rule = rule\n                RULE.detail_col_type = MY_RULE.col_type\n            } else if (v.url.startsWith('hiker://page/')) {\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\n                    return v\n                let path = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?.*)?$/)[1],\n                    subPage = MY_RULE.pageList.find(v => v.path == path)\n                RULE.detail_find_rule = subPage.rule\n                RULE.detail_col_type = subPage.col_type\n                RULE.params = v.extra || {}\n            } else if (!MY_RULE.detail_find_rule) { return v }\n            v.extra = { url: v.url, RULE: RULE, pageTitle: v.title  }\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n            return v\n        }))\n        if (!searchMode) myCollection_el.push(searchCount)\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\n    }\n\n    function setHomeResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    function setSearchResult(a, param1, param2, param3) {\n        setResult(a, param1, param2, param3)\n    }\n\n    eval(MY_RULE.find_rule.slice(3))\n} else {\n    let findRule = MY_RULE.find_rule.split(';')\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\n        let [title, url, desc, content, img] = findRule.map((v, i) => {\n                try {\n                    if (v == '*') return ''\n                    else v = (i == 1 || i == 4) ?\n                        parseDom(data, v) :\n                        parseDomForHtml(data, v)\n                    if (i != 1) v = runCode(v)\n                    return v\n                } catch (e) {}\n            }),\n            res = {\n                title: title,\n                url: url,\n                desc: desc,\n                content: content,\n                img: img\n            }\n        if (res.url) {\n            if (res.url.includes('@lazyRule=')) {\n                res.url = res.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\n            } else if (MY_RULE.detail_find_rule) {\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title  }\n            }\n        }\n        myCollection_el.push(res)\n        if (!searchMode) myCollection_el.push(searchCount)\n    })\n    setResult(myCollection_el)\n}\n","search_url":"hiker://empty##fypage##**","group":"①轻合集🔥","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"setItem('myCollection', MY_RULE.title)","pages":"[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"function ClassTab(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + MY_RULE.title + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = getVar('fold_' + this.sign, '')\\n        if (this.fold) el.push({\\n            title: '““””<span style=\\\"color:#049eff\\\">' + (folded ? '▶' : '▼'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n                selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: (selected == now ? '““””<span style=\\\"color:' + this.color + '\\\"><b>' : '') + name,\\n                    url: $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        putVar(sign, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&')\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        if (defaultClass) defaultClass = JSON.stringify({\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        })\\n        else throw new Error('cannot find id: ' + id + ' in classTab: ' + this.sign)\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    getLastClick() {\\n        return JSON.parse(getVar(this.sign, '{}'))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n$.exports = ClassTab\\n\"},{\"col_type\":\"movie_3\",\"name\":\"首页\",\"path\":\"indexLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = parseInt(MY_URL.split('#')[1]),\\n    RULE = MY_PARAMS.RULE,\\n    fyAll = RULE.url.includes('fyAll'),\\n    // 加载ClassTab组件\\n    ClassTab = $.require('hiker://page/ClassTab?rule=' + getItem('myCollection')),\\n    tabHeader = []\\n\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title })\\nif (pageNum == 1) {\\n    addListener('onClose', 'clearVar(\\\"myCollection-searchMode\\\")')\\n    putVar('myCollection-searchMode', RULE.title)\\n    tabHeader.load(myCollection_el)\\n    if (RULE.search_url) myCollection_el.push({\\n        title: \\\"搜索\\\",\\n        desc: \\\"搜你想要的...\\\",\\n        url: '\\\"hiker://search?s=\\\"+input+\\\"&rule=' + getItem('myCollection') + '\\\"',\\n        col_type: \\\"input\\\",\\n    })\\n}\\n// 处理MY_URL和MY_RULE\\nMY_RULE.version = RULE.version\\nMY_RULE.group = RULE.group\\nMY_RULE.title = RULE.title\\nMY_RULE.ua = RULE.ua\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.find_rule\\nMY_RULE.detail_find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, indexHtml } = urlParse(RULE.url, pageNum, (url) => {\\n    url[0] = fyAll ? url[0].replace(/fyAll/g, '$${fyAll}') : url[0].replace(/fy(class|area|year|sort)/g, '$${fy$1}')\\n    url[0] = tabHeader.setUrl(url[0])\\n})\\nMY_RULE.url = MY_URL\\n// 正文解析\\nif (pageNum == 1) eval(MY_RULE.preRule)\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url) {\\n                return v\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                RULE.detail_find_rule = rule\\n                RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let path = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?.*)?$/)[1],\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path)\\n                RULE.detail_find_rule = subPage.rule\\n                RULE.detail_col_type = subPage.col_type\\n                RULE.params = v.extra || {}\\n            } else if (!MY_RULE.detail_find_rule) { return v }\\n            v.extra = { url: v.url, RULE: RULE, pageTitle: v.title }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n\\n    function setHomeResult(a, param1, param2, param3) {\\n        setResult(a, param1, param2, param3)\\n    }\\n\\n    function setSearchResult(a, param1, param2, param3) {\\n        setResult(a, param1, param2, param3)\\n    }\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) {}\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title  }\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"详情\",\"path\":\"detailLoad\",\"rule\":\"js:\\nvar myCollection_el = []\\n\\n// 处理MY_URL和MY_RULE\\nlet RULE = MY_PARAMS.RULE\\nMY_RULE.version = RULE.version\\nMY_RULE.group = RULE.group\\nMY_RULE.title = RULE.title\\nMY_RULE.url = MY_URL\\nMY_RULE.ua = RULE.ua\\nMY_RULE.col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = RULE.pageList\\nMY_RULE.pages = RULE.pages\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = RULE.params\\n// 解析正文\\nif(MY_PARAMS.pageTitle) setPageTitle(MY_PARAMS.pageTitle)\\neval(MY_RULE.preRule)\\nsetLastChapterRule(MY_RULE.last_chapter_rule)\\nMY_PARAMS = MY_RULE.params\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url) {\\n                return v\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                RULE.detail_find_rule = rule\\n                RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let path = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?.*)?$/)[1],\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path)\\n                RULE.detail_find_rule = subPage.rule\\n                RULE.detail_col_type = subPage.col_type\\n                RULE.params = v.extra || {}\\n            } else { return v }\\n            v.extra = { url: v.url, RULE: RULE }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n\\n    function setHomeResult(a, param1, param2, param3) {\\n        setResult(a, param1, param2, param3)\\n    }\\n\\n    function setSearchResult(a, param1, param2, param3) {\\n        setResult(a, param1, param2, param3)\\n    }\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    const { runCode } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(getResCode(), findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) {}\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url && res.url.includes('@lazyRule='))\\n            res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ title: MY_RULE.title, pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');')\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"数据载入\",\"path\":\"dataLoad\",\"rule\":\"//真正获取数据的逻辑\\nfunction load() {\\n    let url = 'http://hiker.nokia.press/hikerule/dev/json_list?name=569617079',\\n        d = []\\n    try {\\n        d = fetch(url)\\n        if (url.startsWith('hiker://page/'))\\n            d = JSON.parse(d).rule\\n        d = JSON.parse(d)\\n    } catch (e) {\\n        d = []\\n    }\\n    return d.filter((v) => { return v.title != MY_RULE.title && !v.title.includes(\\\"模板\\\") && v.author != '轻合集生成器' })\\n}\\n//检查间隔，默认一天\\nlet min = 60 * 24 * 1\\n\\nlet data = []\\nlet time = getItem('updatetime', '0')\\ntime = parseInt(time)\\nlet now = new Date().getTime()\\nif (now - time > 1000 * 60 * min) {\\n    log('更新了数据')\\n    setItem('updatetime', '' + now)\\n    data = load()\\n    saveFile('data.json', JSON.stringify(data))\\n} else {\\n    log('没有更新数据')\\n    data = JSON.parse(readFile('data.json'))\\n}\\n$.exports = data\\n\"},{\"col_type\":\"movie_3\",\"name\":\"工具集\",\"path\":\"utility\",\"rule\":\"$.exports = {\\n    runCode: function(rule) {log(rule)\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    },\\n    urlParse: function(url, pageNum, func) {\\n        url = url.split(';').map((v) => v.replace(/；；/g, ';'))\\n        if (func) func(url)\\n        url[0] = url[0].replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n        url[0] = /^(.*?)(?:\\\\[firstPage=(.*?)\\\\])?$/.exec(url[0])\\n        url[0] = runCode(url[0][2] && pageNum == 1 ? url[0][2] : url[0][1])\\n        let options = { headers: { 'Content-Type': 'text/plain; charst=UTF-8' }, method: url[1] }\\n        // post方法时转换参数\\n        if (/^post$/i.test(options['method'])) {\\n            let [oriUrl, body] = url[0].split('?')\\n            url[0] = oriUrl.replace(/？？/g, '?')\\n            if (body.startsWith('JsonBody=')) body = body.slice(9)\\n            options['body'] = body\\n        }\\n        if (url[2]) options.headers['Content-Type'] = options.headers['Content-Type'].slice(0, 19) + url[2]\\n        if (url[3]) url[3].match(/{(.*)}/)[1].split('&&').forEach((v) => {\\n            let [key, value] = v.split('@')\\n            options.headers[key] = runCode(value)\\n        })\\n        // 添加全局UA\\n        if (!options.headers['User-Agent']) {\\n            if (MY_RULE.ua == 'pc')\\n                options.headers['User-Agent'] = PC_UA\\n            else if (MY_RULE.ua == 'mobile')\\n                options.headers['User-Agent'] = MOBILE_UA\\n        }\\n        return { MY_URL: url[0], indexHtml: fetch(url[0], options) }\\n    }\\n}\\n\"}]","icon":""},{"last_chapter_rule":"body&&Text","pageList":[],"title":"乌龟影院","author":"","version":0,"url":"https://www.wuguiyy.com/type/fyAll-fypage/","col_type":"movie_3","class_name":" 电影 & 电视剧 & 综艺 & 动漫 ","class_url":"dianying&lianxuju&zongyi&dongman","area_name":"动作片&喜剧片&爱情片&科幻片&恐怖片&剧情片&战争片&纪录片&其他","area_url":"dongzuopian&xijupian&aiqingpian&kehuanpian&kongbupian&juqingpian&zhanzhengpian&jilupian&qitapian","sort_name":"","year_name":"国产剧&港台剧&日韩剧&欧美剧&","sort_url":"","year_url":"guochanju&gangtaiju&rihanju&oumeiju&","find_rule":"body&&.stui-vodlist__thumb;a&&title;a&&data-original;.text-right&&Text;a&&href","searchFind":"","search_url":"https://www.wuguiyy.com/search/-------------/?wd=**&submit=","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"movie_1","detail_find_rule":"js:\nvar res ={};\nvar d=[];\nvar html=getResCode();\nd.push({\ndesc:\"258&&float\",\ncol_type:\"x5_webview_single\"});\n\ntry{\nvar des_pic =parseDom(html, '.lazyload&&data-original');\n}catch(e){\nvar des_pic ='';\n}\n\ntry{\nvar des_desc = parseDomForHtml(html, '.detail-content&&Text');\n}catch(e){\nvar des_desc ='没有正确获取剧情简介！';\n}\n\nvar arts = parseDomForArray(html,'body&&.b:not(:contains(排行榜)):not(:contains(简介)):not(:contains(喜欢))');\nvar tabs = [];\nfor (var i in arts) {\n    tabs.push(parseDomForHtml(arts[i], 'h3&&Text'))\n}\n\nvar conts = parseDomForArray(html, 'body&&.stui-content__playlist');\nvar lists =[];\nfor (var i in conts) {\n    lists.push(parseDomForArray(conts[i], 'ul&&li'))\n}\n\nvar lazy =\n`@lazyRule=.stui-player__video&&script&&Html.js:eval(input.replace(/player_.*?={/,\"player_aaaa={\"));var fm=player_aaaa.from;var url=player_aaaa.url;if(fm=='msp'|url.includes(\"html\")){refreshX5WebView(\"https://api.leduotv.com/wp-api/ifr.php?vid=\"+url);\"toast://parsing\"}else{url}`\n\nd.push({\ntitle:'共有'+arts.length+'条线路\\n如果无法正常显示，请点击此处访问原网页',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: MY_URL,\n col_type: 'movie_1_vertical_pic'\n});\n\nfunction setTabs(tabs, vari) {\n        d.push({\n            title: '‘‘线路’’',\n            url: `#noLoading#@lazyRule=.js:let conf = getVar('折叠');if(conf=='关'){putVar({key:'折叠', value:'开'});}else{putVar({key:'折叠', value:'关'})};refreshPage(false);'#noHistory#hiker://empty';'toast://已切换折叠状态'`,\n            col_type: 'text_center_1'\n        })\nif (getVar('折叠') == '开'||getVar('折叠') == '') {\n        var title = '';\n        for (var i = 0; i < tabs.length; i++) {\n            var url = \"hiker://empty@lazyRule=.js:putVar('\" + vari + \"', '\" + i + \"');refreshPage();'toast://成功更换线路！'\";\n            d.push({\n                title: tabs[i] + (getVar(vari, '0') == i ? '✅' : ''),\n                url: url,\n                col_type: tabs.length > 2 ? 'text_2' : 'text_2'\n            })\n        }\n        d.push({\n            col_type: 'line_blank'\n        })\n    }\n}\n    function setLists(lists, index) {\n        d.push({\n            title: '‘‘选集’’',\n            url: `#noLoading#@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'#noHistory#hiker://empty';'toast://已切换排序'`,\n            col_type: 'text_center_1'\n        })\n        var list = lists[index];\n\nif (getVar('shsort') == '1') {\n            for (var j = list.length - 1; j >= 0; j--) {\n                d.push({\n                title: parseDomForHtml(list[j], 'Text'),\n                url: parseDom(list[j], 'a&&href') + lazy,\n                col_type: list.length > 3 ? 'text_3' : 'text_2'\n                });\n            }\n        } else {\n            for (var j = 0; j < list.length; j++) {\n                d.push({\n                title: parseDomForHtml(list[j], 'a&&Text'),\n                url: parseDom(list[j], 'a&&href') + lazy,\n                col_type: list.length > 3 ? 'text_3' : 'text_2'\n                });\n            }\n        }\n    }\nsetTabs(tabs, MY_URL);\nsetLists(lists, getVar(MY_URL, '0'));\n\nd.push({title: '<br>', col_type: 'rich_text'});\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[]"},{"last_chapter_rule":"","pageList":[],"title":"📺尘落电影网.H","author":"嗨又是我","version":0,"url":"https://m.chenluo.cc/vodshow/fyclass-fyarea-fysort------fypage---fyyear.html","col_type":"movie_3","class_name":"电视剧&电影&综艺&动漫&动画片&电影解说&","class_url":"lianxuju&dianying&zongyi&dongman&donghuapian&dianyingjieshuo","area_name":"地区&大陆&香港&台湾&美国&法国&英国&日本&韩国&德国&泰国&印度&意大利&西班牙&加拿大&其他","area_url":"&大陆&香港&台湾&美国&法国&英国&日本&韩国&德国&泰国&印度&意大利&西班牙&加拿大&其他","sort_name":"人气&时间&评分","year_name":"年代&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"hits&time&score","year_url":"&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":"js:\nvar d = [];\n\nvar list = parseDomForArray(getResCode(), 'body&&.hl-vod-list.clearfix&&li');\n\nfor (var i in list) {\n    d.push({\n        title: parseDomForHtml(list[i], 'a&&title'),\n        desc: parseDomForHtml(list[i], '.hl-lc-1&&Text'),\n        pic_url: parseDom(list[i], 'a&&data-original'),\n        url: parseDom(list[i], 'a&&href')+'#immersiveTheme#',\n        col_type: 'movie_3'\n    });\n}\nsetResult(d);","searchFind":"js:\nvar d = [];\n\nvar list = parseDomForArray(getResCode(), 'body&&.hl-theme-by362695000&&li');\n\nfor (var i in list) {\n\n    d.push({\n        title: parseDomForHtml(list[i], 'a&&title'),\n        desc: parseDomForHtml(list[i], '.hl-lc-1&&Text'),\n        pic_url: parseDom(list[i], 'a&&data-original'),\n        url: parseDom(list[i], 'a&&href')+'#immersiveTheme#',\n        content: parseDomForHtml(list[i], 'p,-1&&Text')\n    });\n}\nsetResult(d);","search_url":"https://m.chenluo.cc/vodsearch/**----------fypage---.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"movie_1_vertical_pic","detail_find_rule":"js:\nvar d = [];\nvar html = getResCode();\n\n\nvar code = parseDomForHtml(html, 'body&&div.hl-detail-content&&Html');\n\nvar 标题 = parseDomForHtml(code, 'ul&&li,4&&Text') + '\\n' + parseDomForHtml(code, 'ul&&li,1&&Text') + '\\n' + parseDomForHtml(code, 'ul&&li,6&&Text');\n\nvar 演员 = parseDomForHtml(code, 'ul&&li,2&&Text');\n演员 = 演员.substring(0, 演员.length-1);\nif (演员.length > 20) {\n    演员 = 演员.replace(演员, 演员.substring(0, 20) + \"...\");\n}\nvar 副标题 = parseDomForHtml(code, 'ul&&li,5&&Text') + '\\n' + 演员;\n\nvar 封面 = parseDomForHtml(code, 'span&&data-original');\n\nd.push({\n  title: 标题.replace(/\\//g,\"　\"),\n  desc: 副标题,\n  pic_url: 封面,\n  url: MY_URL,\n  col_type: 'movie_1_vertical_pic_blur'\n});\n//影片信息\n\n\nvar 简介 = parseDomForHtml(code, 'ul&&li,11&&Text') + '\\n';\n\nd.push({\n  title: 简介.replace(\"　　\",\"\").replace(\"简介：\",\"　　\"),\n  col_type: 'long_text'\n});\n//影片简介\n\n\nvar 线路 = parseDomForArray(html, 'body&&div.hl-plays-from&&a');\n\nvar 分集 = parseDomForArray(html, 'body&&ul.hl-plays-list');\n\n\nvar lazy = `@lazyRule=.js:var url = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);url.url`;\n//通用二级视频地址解析\n\nfor (var i = 0; i < 分集.length; i++) {\n\n  var 路线名 = \"‘‘\" + parseDomForHtml(线路[i], 'Text') + \"’’\";\n\n  d.push({\n    title: 路线名,\n    url: '',\n    col_type: 'text_center_1'\n  })\n\n  var 集数 = parseDomForArray(分集[i], 'ul&&li');\n  for (var ii = 0; ii < 集数.length; ii++) {\n\n    d.push({\n      title: parseDomForHtml(集数[ii], 'a&&Text'),\n      url: parseDom(集数[ii], 'a&&href') + lazy,\n      col_type: 集数.length > 3 ? 'text_3' : 'text_2'\n    });\n\n  }\n\n}\n//添加选集信息\n\n\nd.push({\n  title: '\\n',\n  col_type: 'long_text'\n});\n//在尾部加多行空格\n\n\nsetResult(d);\n","sdetail_col_type":"text_2","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[]"},{"last_chapter_rule":"","pageList":[],"title":"爱美剧","author":"似水流年","version":0,"url":"https://91mjw.com/fyAll/page/fypage","col_type":"movie_3","class_name":"全部&最近&纪录&真人秀","class_url":"all&last-update&category/jilupian&category/zhenrenxiu","area_name":"科幻&动作&喜剧&动画&恐怖&悬疑","area_url":"category/all_mj/kehuanpian&category/all_mj/dongzuopian&category/all_mj/xijupian&category/all_mj/donghuapian&category/all_mj/kongbupian&category/all_mj/xuanyipian","sort_name":"","year_name":"空白多向下↓拉刷新一次","sort_url":"","year_url":"空白多向下↓拉刷新一次","find_rule":".m-movies&&.u-movie;h2&&Text;img&&data-original;.zhuangtai&&Text;a&&href","searchFind":".m-movies&&.u-movie;h2&&Text;a&&href;.zhuangtai&&Text","search_url":"https://91mjw.com/page/fypage?s=**","titleColor":"","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":".vlink&&a;a&&Text;;;a&&id.js:\"https://91mjw.com/vplay/\"+input+\".html\"+`@lazyRule=.js:var b = fetch(input,{})；；var m = b.match(/vid=(.*?)m3u8/g)[0].split('\\\"')[1]；；decodeURIComponent(m)`","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[]"},{"firstHeader":"class","pageList":[],"title":"葡萄影视🆉","author":"佐手&路遥","version":1,"url":"https://m.putaoys.com/vod/list/fyAll/index-fypage.html[firstPage=https://m.putaoys.com/vod/list/fyAll/]","col_type":"movie_3","class_name":"国产剧&韩国剧&欧美剧&日本剧&台湾&香港剧&泰国剧&海外剧","class_url":"guochanju&hanguoju&oumeiju&ribenju&taiwanju&xianggangju&taiguoju&haiwaiju","area_name":"网络电影&喜剧&爱情&动作&科幻&剧情&战争&恐怖","area_url":"weidianying&xijupian&aiqingpian&dongzuopian&kehuanpian&juqingpian&zhanzhengpian&kongbupian","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":".picTxt&&li;.sTit&&Text;img&&data-src;.emScore&&Text;a&&href","searchFind":".ulPicTxt&&li;.sTit&&Text;a&&href;.sDes&&Text;.sStyle&&Text;img&&data-src","search_url":"https://m.putaoys.com/index.php?s=vod-search&wd=**","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//简介\nvar des_desc = parseDom(getResCode(), 'body&&.movieintro&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), 'body&&.posterPic&&img&&src');\n//线路\nvar tabs = parseDom(getResCode(), 'body&&dt&&Html').match(/id=[\\s\\S]*?<\\/span/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&.tabCon&&Html').match(/ulNumList[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[1].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = list.length-1; j>=0; j--) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'https://m.putaoys.com/'+list[j].split('href=\"')[1].split('\"')[0],\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":""},{"pageList":[],"title":"白熊","author":"小白","version":0,"url":"https://www.woobm.cn/index.php/vod/show/area/fyarea/id/fyclass/page/fypage/year/fyyear.html","col_type":"movie_3","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"大陆&香港&台湾&法国&美国&英国&日本&韩国&德国&泰国&其他","area_url":"大陆&香港&台湾&法国&美国&英国&日本&韩国&德国&泰国&其他","sort_name":"","year_name":"2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":".fed-list-info&&li;.fed-list-title&&Text;a&&data-original;.fed-list-remarks&&Text;a&&href","searchFind":"body&&.fed-deta-info;h1&&Text;a&&href;.fed-list-remarks&&Text;.fed-part-esan&&Text;a&&data-original","search_url":"https://www.woobm.cn/vod/search/page/fypage/wd/**.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.fed-part-esan&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.fed-list-pics&&data-original');\n//线路\nvar tabs = parseDom(getResCode(), 'body&&.fed-drop-tops&&Html').match(/href=[\\s\\S]*?<\\/a/g);\n//选集\nvar conts = parseDom(getResCode(), '.fed-drop-btms&&Html').match(/class=\\\"fed-part-rows\\\">[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[1].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'https://www.woobm.cn'+list[j].split('href=\"')[1].split('\"')[0]+ '@lazyRule=iframe&&data-play.js:url = base64Decode(input.slice(3))'\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":""},{"pageList":[],"title":"87","author":"小白","version":0,"url":"http://www.qianshihouse.com/fbs/fyclass--------fypage---fyyear.html","col_type":"movie_3","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"","area_url":"","sort_name":"","year_name":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.stui-vodlist&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.pic-text&&Text'),\r\n       pic_url: parseDom(list[j], 'a&&data-original'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":".stui-vodlist__media&&li;a&&title;a&&href;.pic-text&&Text;p,-2&&Text;a&&data-original","search_url":"http://www.qianshihouse.com/srh/**----------fypage---.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.stui-content__detail&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.lazyload&&data-original');\n//线路\nvar tabs = parseDom(getResCode(), 'body&&Html').match(/h3[\\s\\S]*?<\\/h3/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"stui-content__playlist[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[2].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'http://www.qianshihouse.com'+list[j].split('href=\"')[1].split('\"')[0]+`@lazyRule=.stui-player__video&&script&&Html.js:eval(input);player_data.url`,\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":""},{"pageList":[],"title":"干饭","author":"戏太深&小白","version":0,"url":"https://www.ganfantv.com/show/fyclass-fyarea-------fypage---fyyear.html","col_type":"movie_3","class_name":"电影&连续剧&综艺&动漫","class_url":"dianying&dianshiju&zongyi&dongman","area_name":"大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","area_url":"大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","sort_name":"","year_name":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":".stui-vodlist&&li;h4&&Text;.lazyload&&data-original;.pic-text&&Text;a&&href.js:input.replace('detail','play').replace('.html','-1-1.html')","searchFind":".stui-vodlist&&li;h4&&Text;a&&href.js:input.replace('detail','play').replace('.html','-1-1.html');.pic-text&&Text;;.lazyload&&data-original","search_url":"https://www.ganfantv.com/search/**----------fypage---.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\nvar html = getResCode();\n\n\nd.push({\n    desc: '240&&float',\n    col_type: 'x5_webview_single'\n});\n\n//动态解析\ntry {\n    var lazy = `@lazyRule=body&&.embed-responsive&&script&&Html.js:eval(input);if(player_aaaa.url.indexOf('.html')==-1){player_aaaa.url}else{refreshX5WebView('https://vip.parwix.com:4433/player/?url='+player_aaaa.url);'toast://缓冲中……'}`;\n} catch(e) {}\n\n//线路列表\nvar tabs = parseDomForArray(html, '.play-tab&&li');\n\n//播放列表\nvar conts = parseDomForArray(html, 'body&&.stui-play__list');\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n\turl: getUrl(),\n\tcol_type: 'text_1'\n});\n\nfor (var i in tabs) {\n\n    //线路名称\n    try {\n        d.push({\n            title: parseDomForHtml(tabs[i], 'li&&Text'),\n            col_type: 'long_text'\n        });\n    } catch(e) {}\n\n    //选集列表\n    var list = parseDomForArray(conts[i], 'ul&&li');\n\n    for (var j in list) {\n        //选集名称以及播放链接\n        try {\n            d.push({\n                title: parseDomForHtml(list[j], 'a&&Text'),\n                url: parseDom(list[j], 'a&&href') + lazy,\n                col_type: list.length > 2 ? 'text_3': 'text_2'\n            });\n        } catch(e) {}\n    }\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":""},{"pageList":[],"title":"星辰2","author":"小白","version":0,"url":"http://www.qhddj.com.cn/xcyyshow/fyclass-fyarea-------fypage---.html","col_type":"movie_3","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"内地&香港&台湾&法国&美国&英国&日本&韩国&德国&泰国&其他","area_url":"内地&香港&台湾&法国&美国&英国&日本&韩国&德国&泰国&其他","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":".stui-vodlist&&li;a&&title;a&&data-original;.pic-text&&Text;a&&href","searchFind":".stui-vodlist&&li;a&&title;a&&href;.pic-text&&Text;;a&&data-original","search_url":"http://www.qhddj.com.cn/xcyysearch/**----------fypage---.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.desc&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.lazyload&&data-original');\n//线路\nvar tabs = parseDom(getResCode(), 'body&&Html').match(/h3[\\s\\S]*?<\\/h3/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"stui-content__playlist[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[1].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'http://www.qhddj.com.cn'+list[j].split('href=\"')[1].split('\"')[0]+ '@lazyRule=html&&.embed-responsive&&script&&Html.js:eval(input)；；var jsurl = player_aaaa.url;var jssp = jsurl.split(\"\\/share\")[0];var json = fetch(jsurl,{});jsurl.indexOf(\"m3u8\")>-1?jsurl:jssp+json.split(\\'main = \"\\')[1].split(\\'\"\\')[0]'\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":""},{"firstHeader":"class","pageList":[],"title":"小草2","author":"小白","version":0,"url":"http://www.hzjzxh.org/show-fyclass--------fypage---fyyear.html","col_type":"movie_3_marquee","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"","area_url":"","sort_name":"","year_name":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.myui-vodlist&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.pic-text&&Text'),\r\n       pic_url: parseDom(list[j], 'a&&data-original'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":".myui-vodlist__media&&li;a&&title;a&&href;.pic-text&&Text;p,-2&&Text;a&&data-original","search_url":"http://www.hzjzxh.org/search-**----------fypage---.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.myui-content__detail&&p,-1&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.lazyload&&data-original');\n//线路\nvar tabs = parseDom(getResCode(), '.nav-tabs&&Html').match(/data-toggle=[\\s\\S]*?<\\/a/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"myui-content__list[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[1].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'http://www.hzjzxh.org'+list[j].split('href=\"')[1].split('\"')[0]+`@lazyRule=.embed-responsive&&script&&Html.js:eval(input);var jsurl = player_aaaa.url;var jssp = jsurl.split(\"\\/share\")[0];var json = fetch(jsurl,{});jsurl.indexOf(\"m3u8\")>-1?jsurl:jssp+json.split(\\'main = \"\\')[1].split(\\'\"\\')[0]`,\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"firstHeader":"class","pageList":[],"title":"咪咪","author":"小白","version":1,"url":"http://mimitv.live/index.php/vod/show/id/fyclass/page/fypage/year/fyyear.html","col_type":"movie_3_marquee","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"","area_url":"","sort_name":"","year_name":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":".vodlist&&li;a&&title;a&&data-original;.pic_text&&Text;a&&href.js:input.replace('detail','play').replace('.html','/sid/1/nid/1.html')","searchFind":"","search_url":"","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n// 线路\nvar tabs = parseDom(getResCode(), '.play_source_tab&&Html').match(/a[\\s\\S]*?<\\/a>/g);\n// 集数\nvar conts = parseDom(getResCode(), '.playlist&&Html').match(/\"playlist_notfull[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n\turl: getUrl(),\n\tcol_type: 'text_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[3].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'http://mimitv.live' + list[j].split('href=\"')[1].split('\"')[0]+'@lazyRule=.embed-responsive&&script&&Html.js:eval(input)；；player_aaaa.url',\n\t\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"firstHeader":"class","pageList":[],"title":"乐途","author":"小白","version":0,"url":"https://www.letudy.com/pg/fyAll/page/fypage.html","col_type":"movie_3_marquee","class_name":"电影&连续剧&综艺&动漫","class_url":"dianying&dsj&zongyi&dongman","area_name":"动作片&喜剧片&爱情片&科幻片&恐怖片&剧情片","area_url":"dongzuopian&xijupian&aiqingpian&kehuanpian&kongbupian&juqingpian","sort_name":"","year_name":"国产剧&香港剧&台湾剧&韩国剧&日本剧&欧美剧","sort_url":"","year_url":"gcj&xgj&twj&hgj&rbj&omj","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.index-area&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.other&&Text'),\r\n       pic_url: parseDom(list[j], '.lazy&&data-original'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":".index-area&&li;a&&title;a&&href;.other&&Text;.actor&&Text;.lazy&&data-original","search_url":"https://www.letudy.com/vodsearch**/page/fypage.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.ee&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.lazy&&data-original');\n//线路\nvar tabs = parseDom(getResCode(), 'body&&Html').match(/\"intro[\\s\\S]*?<\\/font/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"videourl[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[2].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'https://www.letudy.com'+list[j].split('href=\"')[1].split('\"')[0]+`@lazyRule=.player&&script&&Html.js:eval(input);decodeURIComponent(base64Decode(player_aaaa.url))`,\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"firstHeader":"class","pageList":[],"title":"九州","author":"小白","version":0,"url":"http://www.jiuzhou911.com/search.php?page=fypage&searchtype=5&tid=fyclass&area=fyarea&year=fyyear","col_type":"movie_3_marquee","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"全部&大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","area_url":"&大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","sort_name":"","year_name":"全部&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.channel&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.other&&Text'),\r\n       pic_url: parseDom(list[j], '.lazy&&data-original'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":".sul&&li;a&&title;h4&&a&&href;p,0&&Text;p,-1&&Text;img&&data-original","search_url":"http://www.jiuzhou911.com/search.php?page=fypage&searchword=**","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.cdes1&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.img&&img&&src');\n//线路\nvar tabs = parseDom(getResCode(), '.row-l&&Html').match(/h2[\\s\\S]*?<\\/h2/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"stab_list[\\s\\S]*?<\\/div>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[1].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'http://www.jiuzhou911.com'+list[j].split('href=\"')[1].split('\"')[0]+`@lazyRule=.playerall&&script&&Html.js:eval(input);now`,\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"firstHeader":"class","pageList":[],"title":"木瓜2","author":"小白","version":1,"url":"https://www.zpdyw.com/index.php/vodtype/fyAll-fypage.html","col_type":"movie_3_marquee","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"","area_url":"","sort_name":"","year_name":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.stui-vodlist&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.pic-text&&Text'),\r\n       pic_url: parseDom(list[j], 'a&&data-original'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){} \r\nres.data = d;\r\nsetHomeResult(res);","searchFind":".stui-vodlist&&li;a&&title;a&&href;;.pic-text&&Text;a&&data-original","search_url":"https://www.zpdyw.com/vod/s**/page/fypage.html","titleColor":"#003399","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.stui-content__desc&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.lazyload&&data-original');\n//线路\nvar tabs = parseDom(getResCode(), 'body&&Html').match(/h3[\\s\\S]*?<\\/h3/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"stui-content__playlist[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[1].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'https://www.zpdyw.com'+list[j].split('href=\"')[1].split('\"')[0]+`@lazyRule=.embed-responsive&&script&&Html.js:eval(input);var jsurl = player_data.url;var jssp = jsurl.split(\"\\/share\")[0];var json = fetch(jsurl,{});jsurl.indexOf(\"m3u8\")>-1?jsurl:jssp+json.split(\\'main = \"\\')[1].split(\\'\"\\')[0]`,\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"firstHeader":"class","pageList":[],"title":"彩云","author":"小白","version":0,"url":"https://www.cclsu.com/vodshow/fyclass-fyarea-------fypage---fyyear.html","col_type":"movie_3_marquee","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"全部&大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","area_url":"&大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","sort_name":"","year_name":"全部&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.myui-vodlist&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.pic-text&&Text'),\r\n       pic_url: parseDom(list[j], 'a&&data-original'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":".myui-vodlist__media&&li;a&&title;a&&href;.pic-text&&Text;p,-2&&Text;a&&data-original","search_url":"https://www.cclsu.com/vodsearch/**----------fypage---.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.myui-vodlist__bd&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.lazyload&&data-original');\n//线路\nvar tabs = parseDom(getResCode(), 'body&&Html').match(/data-toggle=[\\s\\S]*?<\\/a/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"myui-content__list[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[1].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'https://www.cclsu.com'+list[j].split('href=\"')[1].split('\"')[0]+`@lazyRule=.embed-responsive&&script&&Html.js:eval(input);player_aaaa.url`,\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"firstHeader":"class","pageList":[],"title":"爱迪","author":"小白","version":1,"url":"https://aidi.tv/show/fyclass--------fypage---fyyear.html","col_type":"movie_3_marquee","class_name":"连续剧&电影&综艺&动漫","class_url":"lianxuju&dianying&zongyi&dongman","area_name":"","area_url":"","sort_name":"","year_name":"全部&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.vodlist&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.pic_text&&Text'),\r\n       pic_url: parseDom(list[j], 'a&&data-original'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":".vodlist&&li;a&&title;a&&href;.pic_text&&Text;p,-1&&Text;a&&data-original","search_url":"https://aidi.tv/vsearch/**----------fypage---.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.desc&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.lazyload&&data-original');\n//线路\nvar tabs = parseDom(getResCode(), '.play_source_tab&&Html').match(/i[\\s\\S]*?<\\/a/g);\n//选集\nvar conts = parseDom(getResCode(), '.play_source&&Html').match(/playlist_notfull[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[3].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: list[j].split('href=\"')[1].split('\"')[0]+`@lazyRule=.js:var url=JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]).url;url.indexOf('http')==-1?request('https://aidi.tv/addons/dplayer/?url='+url,{}).match(/vodurl = '(.*?)'/)[1]:url+'#isVideo=true#'`\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"firstHeader":"class","pageList":[],"title":"E4","author":"小白","version":1,"url":"http://www.dusheys.com/so/fyclass-fyarea-------fypage---fyyear/","col_type":"movie_3","class_name":"电影&连续剧&综艺&动漫","class_url":"dianying&juji&zy&dm","area_name":"大陆&香港&台湾&法国&美国&英国&日本&韩国&德国&泰国&其他","area_url":"大陆&香港&台湾&法国&美国&英国&日本&韩国&德国&泰国&其他","sort_name":"","year_name":"2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":".col-ul-list&&li;img&&alt;img&&data-src;.qingxidu&&Text;a&&href","searchFind":".col-ul-list&&li;img&&alt;a&&href;.qingxidu&&Text;small&&Text;img&&data-src","search_url":"http://www.dusheys.com/vod/search/page/fypage/wd/**/","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.mv_content&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.ibox_img&&img&&src');\n//线路\nvar tabs = parseDom(getResCode(), 'body&&Html').match(/pc_ico_2[\\s\\S]*?<span/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"bofang_tlist[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[2].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'http://www.dusheys.com'+list[j].split('href=\"')[1].split('\"')[0]+`@lazyRule=#iframe_box&&script,1&&Html.js:eval(input);player_data.url`,\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"pc","preRule":""},{"firstHeader":"class","pageList":[],"title":"882","author":"小白","version":0,"url":"https://www.88kandy.com/vodshow/fyclass-fyarea-------fypage---fyyear.html","col_type":"movie_3_marquee","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"全部&大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","area_url":"&大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","sort_name":"","year_name":"全部&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.stui-vodlist&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.pic-text&&Text'),\r\n       pic_url: parseDom(list[j], 'a&&data-original'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":".stui-vodlist__media&&li;a&&title;a&&href;.pic-text&&Text;p,-2&&Text;a&&data-original","search_url":"https://www.88kandy.com/vodsearch/**----------fypage---.html","titleColor":"#ff148e8e","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.desc&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.lazyload&&data-original');\n//线路\nvar tabs = parseDom(getResCode(), 'body&&Html').match(/h3[\\s\\S]*?<\\/h3/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"stui-content__playlist[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[2].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'https://www.88kandy.com'+list[j].split('href=\"')[1].split('\"')[0]+`@lazyRule=.stui-player__video&&script&&Html.js:eval(input);player_aaaa.url`,\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"firstHeader":"class","pageList":[],"title":"人","author":"小白","version":0,"url":"http://www.ldssz.com/vodshow/fyclass-fyarea-------fypage---fyyear.html","col_type":"movie_3_marquee","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","area_url":"大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","sort_name":"","year_name":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.stui-vodlist&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.pic-text&&Text'),\r\n       pic_url: parseDom(list[j], 'a&&data-original'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":".stui-vodlist__media&&li;a&&title;a&&href;.pic-text&&Text;p,-2&&Text;a&&data-original","search_url":"http://www.ldssz.com/vodsearch/**----------fypage---.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\nvar html = getResCode();\nvar tabs = parseDomForArray(html, '.nav-tabs&&li');\nvar conts = parseDomForArray(html, 'body&&.stui-content__playlist');\nvar desc = parseDomForHtml(html, '.desc&&Text');\nvar fftq ='';\nvar lazy = `@lazyRule=.stui-player__video&&script&&Html.js:eval(input);if(getVar('magedn$local')=='0'){putVar('fftq',player_aaaa.url);refreshPage();'toast://切换选集成功！'}else{player_aaaa.url}`;\nif(getVar('fftq')==''){\nd.push({\n    title: parseDomForHtml(html, '.data&&Text').replace('地区','\\n地区').replace('年份','\\n年份'),\n    desc: parseDomForHtml(html,'.data,2&&Text'),\n    pic_url: parseDom(html, '.lazyload&&data-original'),\n    url: MY_URL,\n    col_type: 'movie_1_vertical_pic'\n});\n}else{\n\nd.push({\n   url:getVar('fftq'),\n\t\tcol_type: 'x5_webview_single'\n});\nputVar('fftq','');\n}\nd.push({col_type:\"rich_text\",title:`<small>当前模式为：<a href=\"hiker://empty@lazyRule=.js:putVar('magedn$local',getVar('magedn$local')=='1'?'0':'1');refreshPage();'toast://已切换模式';\">`+(getVar('magedn$local')=='1'?\"默认播放器\":\"X5播放器\")+\"</a></small>\"});\nd.push({col_type:'blank_block'});\nfor (var i in conts) {\n    var list = parseDomForArray(conts[i], 'ul&&li');\n    if (list != null) {\n        d.push({\n            title: parseDomForHtml(tabs[i], 'a&&Text'),\n            col_type: 'long_text'\n        });\n  for (var j in list) {\n   d.push({\n     title: parseDomForHtml(list[j],'a&&Text'),\n     url: parseDom(list[j],'a&&href') + lazy,\n       col_type: list.length >2?'text_3':'text_2'\n            });\n        }\n    }\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"firstHeader":"class","pageList":[],"title":"嘛哩","author":"小白","version":0,"url":"https://malimali.cc/vodshow/fyclass--------fypage---fyyear.html","col_type":"movie_3_marquee","class_name":"日韩动漫&国产动漫&欧美动漫","class_url":"10&9&11","area_name":"","area_url":"","sort_name":"","year_name":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.listbox&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.score&&Text'),\r\n       pic_url: parseDom(list[j], 'img&&data-echo'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":".searchbox&&li;a&&title;a&&href;;;","search_url":"https://malimali.cc/vodsearch/**----------fypage---.html;get;UTF-8;{User-Agent@Mozilla/5.0 (Linux；； Android 11；； MI 9 Build/RKQ1.200826.002；； wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/87.0.4280.141 Mobile Safari/537.36","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.intro&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.thumb&&img&&src');\n//线路\nvar tabs = parseDom(getResCode(), '.column-lft&&Html').match(/strong[\\s\\S]*?<\\/strong/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"rec-list[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[1].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'https://malimali.cc'+list[j].split('href=\"')[1].split('\"')[0]+`@lazyRule=.player&&script&&Html.js:eval(input);player_aaaa.url`,\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"pageList":[],"title":"千叶","author":"小白","version":2,"url":"http://www.qydy6.com/sx/fyclassfl/lx/nianffypageen-fyyear.html","col_type":"movie_3_marquee","class_name":"连续剧&电影&综艺&动漫","class_url":"lianxuju&dianying&zongyi&dongman","area_name":"","area_url":"","sort_name":"警告：视频顶部滚动的文字信息均属诈骗信息，请勿相信和打开，切记切记！！","year_name":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.vodlist&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.pic_text&&Text'),\r\n       pic_url: parseDom(list[j], 'a&&data-original'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":".vodlist&&li;a&&title;a&&href;.pic_text&&Text;p,-1&&Text;a&&data-original","search_url":"http://www.qydy6.com/search/**----------fypage---.html","titleColor":"#ff148e8e","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.desc&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.lazyload&&data-original');\n//线路\nvar tabs = parseDom(getResCode(), '.play_source_tab&&Html').match(/a[\\s\\S]*?<\\/a/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"playlist_full[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[3].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'http://www.qydy6.com'+list[j].split('href=\"')[1].split('\"')[0]+`@lazyRule=.embed-responsive&&script&&Html.js:eval(input);player_aaaa.url`,\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"firstHeader":"class","pageList":[],"title":"泡泡","author":"小白","version":0,"url":"https://www.chinaqualitytest.com/ppys5show/fyclass-fyarea-------fypage---fyyear.html","col_type":"movie_3_marquee","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"全部&大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","area_url":"&大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","sort_name":"","year_name":"全部&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.stui-vodlist&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.pic-text&&Text'),\r\n       pic_url: parseDom(list[j], 'img&&src'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":".stui-vodlist__media&&li;a&&title;a&&href;.pic-text&&Text;p,-1&&Text;img&&src","search_url":"https://www.chinaqualitytest.com/ppys5search/**----------fypage---.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '#desc&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.stui-vodlist__thumb&&img&&src');\n//线路\nvar tabs = parseDom(getResCode(), 'body&&Html').match(/h3[\\s\\S]*?<\\/h3/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"stui-content__playlist[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[1].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'https://www.chinaqualitytest.com'+list[j].split('href=\"')[1].split('\"')[0]+`@lazyRule=.embed-responsive&&script&&Html.js:eval(input);player_data.url`,\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"firstHeader":"class","pageList":[],"title":"神马","author":"小白","version":0,"url":"https://www.3s8m.com/show/fyclass-fyarea-------fypage---fyyear.html","col_type":"movie_3_marquee","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","area_url":"大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","sort_name":"","year_name":"2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), 'body&&.box-item');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.hdtag&&Text'),\r\n       pic_url: parseDom(list[j], 'a&&img&&src'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":"body&&.box-item;a&&title;a&&href;.hdtag&&Text;em&&Text;a&&img&&src","search_url":"https://www.3s8m.com/search/**----------fypage---.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.summary&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.con-pic&&img&&src');\n//线路\nvar tabs = parseDom(getResCode(), '.play-list&&Html').match(/\"mbnone[\\s\\S]*?<\\/strong/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"dslist-group[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'movie_1_vertical_pic'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: '线路'+(i+1),\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'https://www.3s8m.com'+list[j].split('href=\"')[1].split('\"')[0]+'@lazyRule=html&&.player&&script&&Html.js:eval(input)；；player_aaaa.url'\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"firstHeader":"class","pageList":[],"title":"放放","author":"小白","version":0,"url":"http://www.ourxh.com/vodshow/fyclass--------fypage---fyyear.html","col_type":"movie_3_marquee","class_name":"连续剧&电影&综艺&动漫","class_url":"teleplay&movie&variety&anime","area_name":"","area_url":"","sort_name":"","year_name":"全部&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.myui-vodlist&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.pic-text&&Text'),\r\n       pic_url: parseDom(list[j], 'a&&data-original'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":".myui-vodlist__media&&li;a&&title;a&&href;.pic-text&Text;p,-2&&Text;a&&data-original","search_url":"http://www.ourxh.com/vodsearch/**----------fypage---.html**","titleColor":"#ff148e8e","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.sketch&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.lazyload&&data-original');\n//线路\nvar tabs = parseDom(getResCode(), 'body&&Html').match(/data-toggle=[\\s\\S]*?<\\/a/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"myui-content__list[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[1].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'http://www.ourxh.com'+list[j].split('href=\"')[1].split('\"')[0]+`@lazyRule=.embed-responsive&&script&&Html.js:eval(input);player_aaaa.url`,\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"firstHeader":"class","pageList":[],"title":"pilipali","author":"小白","version":1,"url":"http://pilipali.cc/vod/show/id/fyclass/page/fypage.html","col_type":"movie_3_marquee","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.tv-list&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.v-tips&&Text'),\r\n       pic_url: parseDom(list[j], 'img&&data-src'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":"body&&.item;img&&alt;a&&href;.v-tips&&Text;.p_intro&&Text;img&&src","search_url":"http://pilipali.cc/vod/search/page/fypage/wd/**.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.infor_intro&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.v-pic&&img&&src');\n//线路\nvar tabs = parseDom(getResCode(), '.play_source_tab&&Html').match(/a[\\s\\S]*?<\\/a/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"play_num_list[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[1].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'http://pilipali.cc'+list[j].split('href=\"')[1].split('\"')[0]+`@lazyRule=.iplays&&script&&Html.js:eval(input);player_aaaa.url`,\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"firstHeader":"class","pageList":[],"title":"花语","author":"小白","version":0,"url":"http://www.uv798.com/show/fyclass/area/fyarea/page/fypage/year/fyyear.html","col_type":"movie_3_marquee","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","area_url":"大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","sort_name":"","year_name":"全部&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.myui-vodlist&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.pic-text&&Text'),\r\n       pic_url: parseDom(list[j], 'a&&data-original'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":".myui-vodlist__media&&li;a&&title;a&&href;.pic-text&&Text;p,-2&&Text;a&&data-original","search_url":"http://www.uv798.com/vodsearch/**----------fypage---.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\nvar html = getResCode();\nvar tabs = parseDomForArray(html, '.nav-tabs&&li');\nvar conts = parseDomForArray(html, 'body&&.myui-content__list');\nvar desc = parseDomForHtml(html, '.sketch&&Text');\nd.push({\n    title: parseDomForHtml(html, '.data&&Text').replace(/ /g,'\\n'),\n    desc: parseDomForHtml(html,'.data,2&&Text'),\n    pic_url: parseDom(html, '.myui-content__thumb&&img&&data-original'),\n    url: MY_URL,\n    col_type: 'movie_1_vertical_pic'\n});\n    if (desc.length > 60) {\n            desc = desc.replace(desc, desc.substring(0, 60) + \"......\");\n      }\n\nd.push({\n          title: desc,\n          col_type: 'long_text'\n});\n\nfor (var i in conts) {\n    var list = parseDomForArray(conts[i], 'ul&&li');\n    if (list != null) {\n        d.push({\n            title: parseDomForHtml(tabs[i], 'a&&Text'),\n            col_type: 'long_text'\n        });\n  for (var j in list) {\n   d.push({\n     title: parseDomForHtml(list[j],'a&&Text'),\n     url: parseDom(list[j], 'a&&href') + `@lazyRule=.embed-responsive&&script&&Html.js:eval(input);player_data.url`,\n       col_type: list.length >3?'text_3':'text_2'\n            });\n        }\n    }\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"pageList":[],"title":"文职","author":"小白","version":0,"url":"http://m.wenzhi.org/sort/fyclass-fypage.html","col_type":"movie_3","class_name":"电影&电视剧&综艺&动漫&","class_url":"1&2&3&4","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":".picTxt&&li;\na&&title;\na&&img&&data-src;\n.emScore&&Text;\na&&href","searchFind":".picTxt&&li;\na&&title;\na&&href;\n.emScore&&Text;\n*;\nimg&&data-src","search_url":"http://m.wenzhi.org/search.php?page=fypage&searchword=**","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), 'body&&.tabCon,1&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.posterPic&&img&&src');\n//线路\nvar tabs = parseDom(getResCode(), '.tabt3&&Html').match(/span[\\s\\S]*?<\\/span/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/ulNumList[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[1].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'http://m.wenzhi.org'+list[j].split('href=\"')[1].split('\"')[0] + `@lazyRule=.wrap1&&script&&Html.js:eval(input);now`\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"pc","preRule":""},{"firstHeader":"class","pageList":[],"title":"热火","author":"小白","version":1,"url":"http://m.rehuo.net/RHS/area/fyarea/id/fyclass/page/fypage/year/fyyear/","col_type":"movie_3_marquee","class_name":"连续剧&电影&动漫&综艺","class_url":"2&1&4&3","area_name":"大陆&香港&台湾&法国&美国&英国&日本&韩国&德国&泰国&其他","area_url":"大陆&香港&台湾&法国&美国&英国&日本&韩国&德国&泰国&其他","sort_name":"","year_name":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":"js:\nvar res = {};\nvar d = [];\ntry {\n    var list = parseDomForArray(getResCode(), '.stui-vodlist&&li');\n    for (var i in list) {\n        d.push({\n            title: parseDomForHtml(list[i], 'a&&title'),\n            pic_url: parseDom(list[i], 'a&&data-original'),\n            desc: parseDomForHtml(list[i], '.pic-text&&Text'),\n            url: parseDom(list[i], 'a&&href')\n        })\n    }\n} catch(e) {}\nres.data = d;\nsetHomeResult(res);","searchFind":".stui-vodlist__media&&li;a&&title;a&&href;.pic-text&&Text;p,-1&&Text;a&&data-original","search_url":"http://m.rehuo.net/RHSO/page/fypage/wd/**/","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"movie_1","detail_find_rule":"js:\nvar res = {};\nvar d = [];\nvar html = getResCode();\n\nd.push({\n    desc: '240&&float',\n    col_type: 'x5_webview_single'\n});\n\n//动态解析\ntry {\n    var lazy = `@lazyRule=body&&.embed-responsive&&script&&Html.js:eval(input);if(player_aaaa.url.indexOf('.html')==-1){player_aaaa.url}else{refreshX5WebView(' http://m.199cn.cn/live_qjx/jx.html?url='+player_aaaa.url);'toast://缓冲中……'}`;\n} catch(e) {}\n\n//详情\ntry {\n    var Rule = MY_URL+`@rule=js:let res={};let d=[];let html=getResCode();let otherInfo=parseDomForArray(html,'.stui-content__detail&&p');for(let i=0;i<otherInfo.length-1;i++){if(i==0){let setInfo=parseDomForHtml(otherInfo[i],'p&&Text').match(/(分类：.*)(地区：.*)(年份：.*)/);for(let j=1;j<setInfo.length;j++){d.push({title:setInfo[j],col_type:'long_text'})}}else{d.push({title:parseDomForHtml(otherInfo[i],'p,1&&Text'),col_type:'long_text'})}}d.push({title:'简介：'+parseDomForHtml(html,'p,2&&Text').replace(/　/g,''),col_type:'long_text'});res.data=d;setResult(res);`;\n} catch(e) {}\n\n//简介\ntry {\n    var des_desc = parseDomForHtml(html, '.desc&&Text').replace(/　/g, '');\n} catch(e) {}\n\n//封面\ntry {\n    var des_pic = parseDom(html, '.lazyload&&data-original');\n} catch(e) {}\n\n//线路列表\nvar tabs = parseDomForArray(html, 'body&&.container,1&&.bottom-line');\n\n//播放列表\nvar conts = parseDomForArray(html, 'body&&.stui-content__playlist');\n\nd.push({\n    title: '共' + conts.length + '条线路\\n\\n点击查看详情',\n    desc: des_desc,\n    pic_url: des_pic,\n    url: Rule,\n    col_type: 'movie_1_vertical_pic'\n});\n\nfor (var i in tabs) {\n\n    //线路名称\n    try {\n        d.push({\n            title: parseDomForHtml(tabs[i], 'Text'),\n            col_type: 'long_text'\n        });\n    } catch(e) {}\n\n    //选集列表\n    var list = parseDomForArray(conts[i], 'ul&&li');\n\n    for (var j in list) {\n        //选集名称以及播放链接\n        try {\n            d.push({\n                title: parseDomForHtml(list[j], 'a&&Text'),\n                url: parseDom(list[j], 'a&&href') + lazy,\n                col_type: list.length > 2 ? 'text_3': 'text_2'\n            });\n        } catch(e) {}\n    }\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"auto","preRule":""},{"last_chapter_rule":"","pageList":[],"title":"天龙影院","author":"香雅情","version":4,"url":"http://www.tianlong3.cn/wap/fyclass_rankhot-fypage.html","col_type":"movie_3","class_name":"电影&电视剧&动漫&综艺","class_url":"movie/dianying&tv/dianshi&dongman/dongman&zongyi/zongyi","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":".content&&ul&&li;.biaoti&&Text;img&&src;.fr&&Text;a&&href","searchFind":".content&&li;.biaoti&&Text;a&&href;.fl&&Text;.fr&&Text;img&&src","search_url":"http://www.tianlong3.cn/wap/seacher.php?wd=**","titleColor":"","group":"②影视🖥","detail_col_type":"text_2","detail_find_rule":"js:\nvar res = {};\nvar d = [];\nd.push({\n    title: '',\n    desc: '255&&float',\n    url: '',\n    col_type: 'x5_webview_single'\n});\nrefreshX5WebView('');\nvar lazy = $('').lazyRule(() => {\n    //return 'x5WebView://' + (input)\n    return input\n});\nvar html = getResCode();\n\nif (!fetch(\"hiker://files/cache/tianlong.txt\", {})) {\n    jk = '默认$$https://jx.quanmingjiexi.com/?url=';\n} else {\n    jk = fetch(\"hiker://files/cache/tianlong.txt\", {})\n}\n\nd.push({\n    title: '线路选择  当前' + jk.replace('$$', '  '),\n    url: `hiker://empty@lazyRule=.js:putVar('tlcollap', getVar('tlcollap','1')=='1'?'0':'1');refreshPage();'toast://折叠/展开成功！'`,\n    col_type: 'text_1'\n});\n\nif (getVar('tlcollap', '1') == '1') {\n    var xlu = [\"https://jx.quanmingjiexi.com/?url=\", \"https://123.1dior.cn/?url=\", \"https://www.administratorw.com/video.php?url=\", \"http://jx.mw0.cc/?url=\", \"https://jx.m3u8.tv/jiexi/?url=\"];\n    for (let j = 0; j < xlu.length; j++) {\n        let xlname = '线路' + (j + 1);\n        let xlurl = xlu[j];\n        d.push({\n            title: xlname,\n            url: xlname + '$$' + xlurl + `@lazyRule=.js:writeFile(\"hiker://files/cache/tianlong.txt\",input);refreshPage();'toast://切换成功，等待刷新页面。'`,\n            col_type: 'scroll_button'\n        });\n    }\n}\n\nvar conts = parseDomForArray(html, '.p_r,0&&ul');\n\nd.push({\n    col_type: 'line'\n})\n\nfor (var i = 0; i < conts.length; i++) {\n    var list = parseDomForArray(conts[i], 'body&&a');\n\n    if (list != null) {\n        d.push({\n            title: '列表' + (i + 1) + '/' + conts.length + '👇🏻',\n            col_type: 'text_1'\n        });\n        for (var j = 0; j < list.length; j++) {\n            d.push({\n                title: parseDomForHtml(list[j], \"a&&Text\"),\n                url: jk.split('$$')[1] + parseDomForHtml(list[j], \"a&&href\").split('?')[0] + lazy,\n                col_type: 'flex_button'\n            });\n        }\n    }\n}\n\n//二级模板\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_2","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[]"},{"pageList":[],"title":"58影视𝙯","author":"佐手丶","version":1,"url":"https://www.52dgm.cn/index.php/vod/type/id/fyAll/page/fypage.html;get;UTF-8;{User-Agent@Mozilla/5.0}","col_type":"movie_3","class_name":"全部&国产剧&港台剧&日韩剧&欧美剧","class_url":"2&13&14&15&16","area_name":"电影&动漫&综艺","area_url":"1&4&3","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":".stui-vodlist&&li;a&&title;img&&src;.pic-text&&Text!更新;a&&href","searchFind":".stui-vodlist__media&&li;a&&title;a&&href;.pic-text&&Text;.detail--h3--&&Text;a&&data-original","search_url":"https://www.52dgm.cn/index.php/vod/search.html?wd=**&submit=;get;UTF-8;{User-Agent@Mozilla/5.0}","titleColor":"#ff13b66a","group":"②影视🖥","detail_col_type":"movie_1","detail_find_rule":"js:\nvar d = [];\nvar html = getResCode();\n\nvar lazy =\n`@lazyRule=.stui-player__video&&script&&Html.js:eval(input.replace(/player_.*?={/,'player_aaaa={'));var url=decodeURIComponent(player_aaaa.url);if(url.indexOf('.html')!=-1){request('https://jx.yunboys.cn/?url='+url).match(/\t\"url\":\"(.*?)\"/)[1]}else{url+\"#isVideo=true#\"}`;\n\nvar arts = parseDomForArray(html,'body&&h3');\nvar tabs = [];\nfor (var i in arts) {\n    tabs.push(parseDomForHtml(arts[i], '.title&&Text'))\n}\nvar conts = parseDomForArray(html, 'body&&.stui-content__playlist');\nvar lists =[];\nfor (var i in conts) {\n    lists.push(parseDomForArray(conts[i], 'ul&&li'))\n}\n\nd.push({\npic_url: parseDom(html, '.lazyload&&src'),\ntitle: '共有'+conts.length+'线路'+'☞勿信水印广告zzz⃤',\nurl: MY_URL,\ncol_type: 'pic_1'\n});\n\nvar des_desc = parseDomForHtml(html, '.detail&&p,-3&&Text');\nd.push({\n          title: des_desc.length > 50 ? des_desc.replace(des_desc, des_desc.substring(0, 50) +'...‘‘’’<font color=\"#0aa344\">详情</font></small>') : des_desc,\n          url: 'hiker://empty#' + parseDomForHtml(html,'.detail&&p,-3&&Html').split('/h1>')[0].replace(/;/g,'').replace(/<li/g,'<br><ul') + `@rule=js:var res = {}; var d = [];d.push({title: MY_URL.split('hiker://empty#')[1],col_type: 'rich_text'});res.data = d; setHomeResult(res);`,     \n          col_type: 'text_1'\n});\n\nfunction setTabs(tabs, vari) {\n        d.push({\n            title: '‘‘线路’’',\n            url: `@lazyRule=.js:let conf = getVar('折叠');if(conf=='关'){putVar({key:'折叠', value:'开'});}else{putVar({key:'折叠', value:'关'})};refreshPage(false);'toast://切换成功'`,\n            col_type: 'flex_button'\n        })\nif (getVar('折叠') == '开'||getVar('折叠') == '') {\n        var title = '';\n        for (var i = 0; i < tabs.length; i++) {\n            var url = \"@lazyRule=.js:putVar('\" + vari + \"', '\" + i + \"');refreshPage(false);'toast://切换成功！'\";\n            d.push({\n                title: tabs[i] + (getVar(vari, '0') == i ? '✅' : ''),\n                url: url,\n                col_type: 'flex_button'\n            })\n        }\n        d.push({\n            col_type: 'line_blank'\n        })\n    }\n}\n    function setLists(lists, index) {\n        d.push({\n            title: '‘‘选集’’',\n            url: `@lazyRule=.js:let conf = getVar('shsort');if(conf==' - 逆序'){putVar({key:'shsort', value:' - 正序'});}else{putVar({key:'shsort', value:' - 逆序'})};refreshPage(false);'toast://切换排序成功'`,\n            col_type: 'flex_button'\n        })\n        var list = lists[index];\n\nif (getVar('shsort') == ' - 逆序') {\n            for (var j = list.length - 1; j >= 0; j--) {\n                d.push({\n                title: parseDomForHtml(list[j], 'Text'),\n                url: parseDom(list[j], 'a&&href') + lazy,\n                col_type: 'flex_button'\n                });\n            }\n        } else {\n            for (var j = 0; j < list.length; j++) {\n                d.push({\n                title: parseDomForHtml(list[j], 'a&&Text'),\n                url: parseDom(list[j], 'a&&href') + lazy,\n                col_type: 'flex_button'\n                });\n            }\n        }\n    }\nsetTabs(tabs, MY_URL);\nsetLists(lists, getVar(MY_URL, '0'));\n\nd.push({title: '<br>', col_type: 'rich_text'});\n\nsetResult(d);\n","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":""},{"pageList":[],"title":"林祥","author":"小白","version":0,"url":"https://www.qqlinxiang.cn/index.php/vod/show/area/fyarea/id/fyclass/page/fypage/year/fyyear.html","col_type":"movie_3_marquee","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","area_url":"大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","sort_name":"","year_name":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":".mo-main-info&&.mo-cols-rows,2&&li;.mo-situ-name&&Text;a&&data-original;.mo-situ-rema&&Text;a&&href","searchFind":"body&&.mo-deta-info;h1&&Text;a&&href;.mo-situ-rema&&Text;li,-1&&Html;a&&data-original","search_url":"https://www.qqlinxiang.cn/index.php/vod/search/page/fypage/wd/**.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.mo-tabs-item&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.mo-situ-pics&&data-original');\n//线路\nvar tabs = parseDom(getResCode(), '.mo-sort-head&&h2&&Html').match(/a[\\s\\S]*?<\\/a/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"mo-movs-item[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[3].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'https://www.qqlinxiang.cn'+list[j].split('href=\"')[1].split('\"')[0]+`@lazyRule=.mo-play-load&&data-play.js:url = base64Decode(input.slice(3))`,\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"pageList":[],"title":"西瓜𝙯","author":"佐手丶","version":2,"url":"http://www.xiguashare.com/h-fyAll-fypage.html[firstPage=http://www.xiguashare.com/h-fyAll.html]","col_type":"movie_3","class_name":"国产&港剧&韩剧&欧美&美剧&英剧&日剧&热搜&偶像&言情&古装&家庭理论&美剧&韩剧&日剧&港台&泰剧&喜剧&科幻&悬疑&动作&剧情&内地&热门&热搜&热门更新&最新更新&最新发布","class_url":"hottvguochan&hottvgangju&hottvhanju&hottvoumei&hottvmeiju&hottvyingju&hottvriju&topsearchtv&topsearchtvouxiang&topsearchtvyanqing&topsearchtvguzhuan&topsearchtvjiatinglunli&topsearchtvmeiju&topsearchtvhangju&topsearchtvriju&topsearchtvgangtai&topsearchtvtaiju&topsearchtvxiju&topsearchtvkehuan&topsearchtvxuanyi&topsearchtvdongzuo&topsearchtvjuqing&topsearchtvneidi&hottv&topsearchtv&hotupdatetv&newupdatetv&newpublishtv","area_name":"热门&热门更新&经典&高分&冷门佳片&华语&欧美&韩国&日本&动作&喜剧&爱情&科幻&悬疑&恐怖","area_url":"hotmovie&hotupdatemovie&hotmoviejingdian&hotmoviegaofen&hotmovielenmenjiapian&hotmoviehuayu&hotmovieoumei&hotmoviehanguo&hotmovieriben&hotmoviedonzuo&hotmoviexiju&hotmovieaiqing&hotmoviekehuan&hotmoviexuanyi&hotmoviekongbu","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"body&&.col-xs-12;h3&&Text;img&&src;.newest||.small&&Text;a&&href","searchFind":"body&&.col-xs-12;h3&&Text;a&&href;.small&&Text;.desc-wrapper&&Text;img&&src","search_url":"http://www.xiguashare.com/q-**","titleColor":"#ff13b66a","group":"②影视🖥","detail_col_type":"movie_1","detail_find_rule":"js:\nvar d = [];\nvar html = getResCode();\n\nvar lazy =\n`@lazyRule=.embed-responsive&&iframe&&src;if(url.indexOf('.html')!=-1){request('https://jx.yunboys.cn/?url='+url).match(/\t\"url\":\"(.*?)\"/)[1]}else{url+\"#isVideo=true#\"}`;\n\nvar arts = parseDomForArray(html,'body&&.tab-item');\nvar tabs = [];\nfor (var i in arts) {\n    tabs.push(parseDomForHtml(arts[i], '.tab-item&&Text').replace('',''))\n}\nvar conts = parseDomForArray(html, 'body&&.play-list');\nvar lists =[];\nfor (var i in conts) {\n    lists.push(parseDomForArray(conts[i], 'ul&&li'))\n}\n\nd.push({\npic_url: parseDom(html, '.thumbnail&&img&&src'),\ntitle: '共有'+conts.length+'线路'+'☞勿信水印广告zzz⃤',\nurl: MY_URL,\ncol_type: 'pic_1'\n});\n\nvar des_desc = parseDomForHtml(html, '.desc-wrapper&&Text');\nd.push({\n          title: des_desc.length > 50 ? des_desc.replace(des_desc, des_desc.substring(0, 50) +'...‘‘’’<font color=\"#0aa344\">详情</font></small>') : des_desc,\n          url: 'hiker://empty#' + parseDomForHtml(html,'body&&.desc-wrapper&&Html').split('/h1>')[0].replace(/;/g,'').replace(/<li/g,'<br><ul') + `@rule=js:var res = {}; var d = [];d.push({title: MY_URL.split('hiker://empty#')[1],col_type: 'rich_text'});res.data = d; setHomeResult(res);`,     \n          col_type: 'text_1'\n});\n\nfunction setTabs(tabs, vari) {\n        d.push({\n            title: '‘‘线路’’',\n            url: `@lazyRule=.js:let conf = getVar('折叠');if(conf=='关'){putVar({key:'折叠', value:'开'});}else{putVar({key:'折叠', value:'关'})};refreshPage(false);'toast://切换成功'`,\n            col_type: 'flex_button'\n        })\nif (getVar('折叠') == '开'||getVar('折叠') == '') {\n        var title = '';\n        for (var i = 0; i < tabs.length; i++) {\n            var url = \"@lazyRule=.js:putVar('\" + vari + \"', '\" + i + \"');refreshPage(false);'toast://切换成功！'\";\n            d.push({\n                title: tabs[i] + (getVar(vari, '0') == i ? '✅' : ''),\n                url: url,\n                col_type: 'flex_button'\n            })\n        }\n        d.push({\n            col_type: 'line_blank'\n        })\n    }\n}\n    function setLists(lists, index) {\n        d.push({\n            title: '‘‘选集’’',\n            url: `@lazyRule=.js:let conf = getVar('shsort');if(conf==' - 逆序'){putVar({key:'shsort', value:' - 正序'});}else{putVar({key:'shsort', value:' - 逆序'})};refreshPage(false);'toast://切换排序成功'`,\n            col_type: 'flex_button'\n        })\n        var list = lists[index];\n\nif (getVar('shsort') == ' - 逆序') {\n            for (var j = list.length - 1; j >= 0; j--) {\n                d.push({\n                title: parseDomForHtml(list[j], 'Text'),\n                url: parseDom(list[j], 'a&&href'),\n                col_type: 'flex_button'\n                });\n            }\n        } else {\n            for (var j = 0; j < list.length; j++) {\n                d.push({\n                title: parseDomForHtml(list[j], 'a&&Text'),\n                url: parseDom(list[j], 'a&&href'),\n                col_type: 'flex_button'\n                });\n            }\n        }\n    }\nsetTabs(tabs, MY_URL);\nsetLists(lists, getVar(MY_URL, '0'));\n\nd.push({title: '<br>', col_type: 'rich_text'});\n\nsetResult(d);\n\n\n","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":""},{"firstHeader":"class","pageList":[],"title":"乌鱼","author":"小白","version":0,"url":"https://www.858guakao.com/list/fyclass-fypage.html","col_type":"movie_3_marquee","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.myui-vodlist&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.pic-text&&Text'),\r\n       pic_url: parseDom(list[j], 'a&&data-original'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":".myui-vodlist__media&&li;a&&title;a&&href;.pic-text&&Text;p,-2&&Text;a&&data-original","search_url":"https://www.858guakao.com/search/**----------fypage---.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.desc&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.lazyload&&data-original');\n//线路\nvar tabs = parseDom(getResCode(), '.nav-tabs&&.item&&Html').match(/data-toggle=[\\s\\S]*?<\\/a/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"myui-content__list[\\s\\S]*?<\\/div>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[1].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'https://www.858guakao.com'+list[j].split('href=\"')[1].split('\"')[0]+`@lazyRule=.embed-responsive&&script&&Html.js:eval(input);player_data.url`,\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"last_chapter_rule":"","pageList":[],"title":"凌晨恐怖𝙯","author":"佐手丶","version":0,"url":"http://www.vodlc.com/m/list.php?tid=fyclass&TotalResult=271&PageNo=fypage","col_type":"movie_3","class_name":"内地恐怖电影&港台恐怖电影&欧美恐怖电影&日韩恐怖电影&其他恐怖电影&VIP大片电影","class_url":"1&2&3&4&5&6","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":".activity-list&&li;a&&title;img&&data-original;.price&&Text;a&&href.js:input.replace('view','http://www.vodlc.com/m/view')","searchFind":"","search_url":"","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":""},{"pageList":[],"title":"鬼片之家","author":"佐手丶","version":0,"url":"https://www.guipian456.com/type/fyAll_fypage.html[firstPage=https://www.guipian456.com/type/fyAll.html]","col_type":"movie_3","class_name":"鬼片&林正英&恐怖片&电视剧","class_url":"1&2&3&11","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"body&&.col-md-4;.text-overflow&&Text;span&&style.js:input.replace('/uploads','https://www.guipian456.com/uploads').replace('.html','');.title&&span&&Text;a&&href","searchFind":"body&&.col-md-12;a&&title;a&&href;.text-overflow&&span&&Text;.subtitle&&Text;span&&style.js:input.replace('/uploads','https://www.guipian456.com/uploads')","search_url":"https://www.guipian456.com/search.php?page=2&searchword=**&searchtype=","titleColor":"#ff13b66a","group":"②影视🖥","detail_col_type":"movie_1","detail_find_rule":"js:\nvar d = [];\nvar html = getResCode();\n\nvar lazy =\n`@lazyRule=.player-wrapper&&script&&Html.js:eval(input.replace(/player_.*?={/,'player_aaaa={'));var url=decodeURIComponent(base64Decode(player_aaaa.url));if(url.indexOf('.html')!=-1){request('https://jx.yunboys.cn/?url='+url).match(/\t\"url\":\"(.*?)\"/)[1]}else{url+\"#isVideo=true#\"}`;\n\nvar arts = parseDomForArray(html,'body&&.layout-head>h4,:-1');\nvar tabs = [];\nfor (var i in arts) {\n    tabs.push(parseDomForHtml(arts[i], 'h4&&Text').replace('',''))\n}\nvar conts = parseDomForArray(html, 'body&&.playlist');\nvar lists =[];\nfor (var i in conts) {\n    lists.push(parseDomForArray(conts[i], '.playlist&&li'))\n}\n\nd.push({\npic_url: parseDom(html, '.media-cover&&style').replace('/uploads','https://www.guipian456.com/uploads'),\ntitle: '共有'+conts.length+'线路'+'☞勿信水印广告zzz⃤',\nurl: MY_URL,\ncol_type: 'text_1'\n});\n\nvar des_desc = parseDomForHtml(html, '.content-des&&Text');\nd.push({\n          title: des_desc.length > 50 ? des_desc.replace(des_desc, des_desc.substring(0, 50) +'...‘‘’’<font color=\"#0aa344\">详情</font></small>') : des_desc,\n          url: 'hiker://empty#' + parseDomForHtml(html,'body&&.content-des&&Html').split('/h1>')[0].replace(/;/g,'').replace(/<li/g,'<br><ul') + `@rule=js:var res = {}; var d = [];d.push({title: MY_URL.split('hiker://empty#')[1],col_type: 'rich_text'});res.data = d; setHomeResult(res);`,     \n          col_type: 'text_1'\n});\n\nfunction setTabs(tabs, vari) {\n        d.push({\n            title: '‘‘线路’’',\n            url: `@lazyRule=.js:let conf = getVar('折叠');if(conf=='关'){putVar({key:'折叠', value:'开'});}else{putVar({key:'折叠', value:'关'})};refreshPage(false);'toast://切换成功'`,\n            col_type: 'flex_button'\n        })\nif (getVar('折叠') == '开'||getVar('折叠') == '') {\n        var title = '';\n        for (var i = 0; i < tabs.length; i++) {\n            var url = \"@lazyRule=.js:putVar('\" + vari + \"', '\" + i + \"');refreshPage(false);'toast://切换成功！'\";\n            d.push({\n                title: tabs[i] + (getVar(vari, '0') == i ? '✅' : ''),\n                url: url,\n                col_type: 'flex_button'\n            })\n        }\n        d.push({\n            col_type: 'line_blank'\n        })\n    }\n}\n    function setLists(lists, index) {\n        d.push({\n            title: '‘‘选集’’',\n            url: `@lazyRule=.js:let conf = getVar('shsort');if(conf==' - 逆序'){putVar({key:'shsort', value:' - 正序'});}else{putVar({key:'shsort', value:' - 逆序'})};refreshPage(false);'toast://切换排序成功'`,\n            col_type: 'flex_button'\n        })\n        var list = lists[index];\n\nif (getVar('shsort') == ' - 逆序') {\n            for (var j = list.length - 1; j >= 0; j--) {\n                d.push({\n                title: parseDomForHtml(list[j], 'Text'),\n                url: parseDom(list[j], 'a&&href') + lazy,\n                col_type: 'flex_button'\n                });\n            }\n        } else {\n            for (var j = 0; j < list.length; j++) {\n                d.push({\n                title: parseDomForHtml(list[j], 'a&&Text'),\n                url: parseDom(list[j], 'a&&href'),\n                col_type: 'flex_button'\n                });\n            }\n        }\n    }\nsetTabs(tabs, MY_URL);\nsetLists(lists, getVar(MY_URL, '0'));\n\nd.push({title: '<br>', col_type: 'rich_text'});\n\nsetResult(d);\n\n\n","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":""},{"firstHeader":"class","pageList":[],"title":"大师","author":"小白","version":1,"url":"https://dsys2021.com/vodshow/fyclass-fyarea-------fypage---fyyear.html","col_type":"movie_3_marquee","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","area_url":"大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","sort_name":"","year_name":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.myui-vodlist&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.pic-text&&Text'),\r\n       pic_url: parseDom(list[j], 'a&&data-original'),\r\n       url: parseDom(list[j],'a&&href').replace('vodplay','voddetail').split(/\\/1-/)[0],\n\n\r\n  });\n\n//https://dsys2021.com/vodplay/w1jhehqab/1-y13kt1h.html\n//https://dsys2021.com/voddetail/w1jhehqab.html\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":"","search_url":"","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {}; var d = [];\nvar html = getResCode();\n\n//影片信息\ntry{\n   var JJ = '简介：'+parseDomForHtml(html,'.myui-panel_bd&&.data&&Text');\n   var img = parseDomForHtml(html,'.lazyload&&src');\n   var so1 = 'hiker://search?s='+parseDomForHtml(html,'h1&&Text')+'&group=①影视';\n   d.push({\n       title: parseDomForHtml(html,'.myui-content__detail&&p,3&&Text')+'\\n'+parseDomForHtml(html,'.myui-content__detail&&p,4&&Text'),\n       desc: parseDomForHtml(html,'.myui-content__detail&&p,2&&Text'),\n       img: img,\nurl:getUrl(),\n      // url: img,\n       col_type: 'movie_1_vertical_pic'\n   });\n   d.push({\n       title: JJ.length > 56 ? JJ.replace(JJ, JJ.substring(0, 56) + '...‘‘’’<small><font color=\"blue\">查看详情</font></small>') : JJ,\n       url: 'hiker://empty#' + JJ + `@rule=js:var res = {}; var d = [];d.push({title: MY_URL.split('hiker://empty#')[1],col_type: 'long_text'});res.data = d; setHomeResult(res);`,\n       col_type: 'text_1'\n   });\n}catch(e){ }\n\n//线路和选集\ntry{\n   var conts = parseDomForArray(html, 'body&&.myui-content__list');\n   var dplayer = `@lazyRule=.js:var code=parseDom(fetch(input,{}),'.embed-responsive&&script&&Html');eval(code);var U=player_data.url;U`;\n\n   for (var i = 0; i < conts.length; i++) {\n        var list = parseDomForArray(conts[i], 'ul&&li');\n        var line = parseDomForHtml(html, 'li&&Text');\n      if (list != null) {\n         d.push({col_type: 'line_blank'});\n         d.push({\n             title: '‘‘'+line+'’’' + '\\t\\t' + (i + 1) + '／' + conts.length +'                       ',\n             url: so1,\n             col_type: 'text_1'\n         });\n         for (var j = 0; j  < list.length; j++) {\n              var jm = parseDomForHtml(list[j], 'a&&Text');\n            d.push({\n                title: jm,\n                url: parseDom(list[j], 'a&&href') + dplayer,\n                col_type: jm.length >5 ? 'text_2' : 'text_3'\n            });\n         }\n      }\n   }\n   d.push({title: '<br>', col_type: 'rich_text'});\n}catch(e){ }\n\nres.data=d; setHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"pc","preRule":""},{"pageList":[],"title":"哔嘀🆉","author":"佐手","version":6,"url":"https://bde4.cc/s/all/fypagefyAll","col_type":"movie_3","class_name":"不限&电影&电视剧","class_url":"&?type=0&?type=1","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"body&&.card;.header&&Text;img&&src;.ep||.rate&&Text;a&&href","searchFind":"body&&.card;.content&&a&&title;a&&href;.meta&&Text;.description&&Text;img&&src","search_url":"https://bde4.cc/search/**","titleColor":"#ffff7000","group":"②影视🖥","detail_col_type":"movie_1","detail_find_rule":"js:\nvar res ={};\nvar d=[];\nvar html=getResCode();\nvar tabs=parseDomForArray(html,'body&&h4');\nvar conts=parseDomForArray(html,'body&&.info1');\n//setError(conts.length);\n\nvar thumb = parseDom(html, \".image&&src\");\nd.push({\n\t\t\ttitle: '剧情简介：'+'    共'+conts.length+'条线路',\n    desc:parseDomForHtml(html, \".summary&&Text\"),\n    pic_url:thumb,\n    url:thumb,\n\t\tcol_type: 'pic_1'\n});\n\nfor(var i = 0;i<conts.length;i++){\n  var list=parseDomForArray(conts[i],'body&&.secondary');\n  if(list!=null){\n\t\td.push({\n\t\t\ttitle:parseDomForHtml(tabs[i], \"Text\").split('-')[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n//setError(list[0]);\n\n\t\tfor(var j = 0; j<list.length; j++){\n\t\t\td.push({\n\t\t\t\ttitle:parseDomForHtml(list[j], \"a&&Text\"),\n      url:parseDom(list[j], \"a&&href\"),\n     col_type: list.length >3?'text_3':'text_2'\n\t\t\t});\n   }\n\n  }\n}\n\n//二级模板by香雅情\nres.data=d;\nsetHomeResult(res);\n","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":""},{"pageList":[],"title":"童话","author":"小白","version":0,"url":"https://m.tonghuacun.com/list/fyAll-fypage.html","col_type":"movie_3","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"动作&喜剧&剧情&科幻&恐怖&爱情&战争&惊险&冒险","area_url":"5&6&7&8&9&10&11&12&28","sort_name":"","year_name":"内地&港剧&台剧&韩剧&美剧&日剧&海外剧","sort_url":"","year_url":"13&14&15&16&31&32&33","find_rule":".plist&&li;a&&title;a&&img&&src;.set&&Text;a&&href","searchFind":".plist&&li;a&&title;a&&href;.set&&Text;*;a&&img&&src","search_url":"https://m.tonghuacun.com/search.php?searchword=**","titleColor":"#f20c00","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.intro&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.pic&&img&&src');\n//线路\nvar tabs = parseDom(getResCode(), 'body&&Html').match(/class=\"c\"><[\\s\\S]*?<\\/a/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"fjlist[\\s\\S]*?<\\/div>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[2].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'https://m.tonghuacun.com'+list[j].split('href=\"')[1].split('\"')[0]+'@lazyRule=html&&#player-box&&script&&Html.js:eval(input)；；now'\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":""},{"pageList":[],"title":"good","author":"小白","version":0,"url":"https://www.gugooe.com/vodshow/fyclass/area/fyarea/page/fypage/year/fyyear.html","col_type":"movie_3","class_name":"连续剧&电影&综艺&动漫","class_url":"2&1&3&4","area_name":"大陆&香港&台湾&法国&美国&英国&日本&韩国&德国&泰国&其他","area_url":"大陆&香港&台湾&法国&美国&英国&日本&韩国&德国&泰国&其他","sort_name":"","year_name":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":".tv-list&&li;img&&alt;img&&data-src;.v-tips&&Text;a&&href","searchFind":"body&&.item;img&&alt;a&&href;.s_score&&Text;.p_intro&&Text;img&&src","search_url":"https://www.gugooe.com/vod/s**/page/fypage.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.li_intro&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.v-pic&&img&&src');\n//线路\nvar tabs = parseDom(getResCode(), '.play_source_tab&&Html').match(/a[\\s\\S]*?<\\/a/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"play_num_list[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[2].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'https://www.gugooe.com'+list[j].split('href=\"')[1].split('\"')[0]+ `@lazyRule=.iplays&&script&&Html.js:eval(input);var jsurl = player_data.url;var jssp = jsurl.split(\"\\/share\")[0];var json = fetch(jsurl,{});jsurl.indexOf(\"m3u8\")>-1?jsurl:jssp+json.split(\\'main = \"\\')[1].split(\\'\"\\')[0]`,\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"auto","preRule":""},{"pageList":[],"title":"第三","author":"小白","version":0,"url":"http://www.03sj.com/search.php?page=fypage&searchtype=5&tid=fyclass&year=fyyear&area=fyarea","col_type":"movie_3","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"大陆&香港&台湾&日本&韩国&欧美&泰国&其他","area_url":"大陆&香港&台湾&日本&韩国&欧美&泰国&其他","sort_name":"","year_name":"2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":".stui-vodlist&&li;a&&title;a&&data-original;.pic-text&&Text;a&&href","searchFind":"","search_url":"","titleColor":"#f20c00","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.detail-sketch&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.stui-vodlist__thumb&&img&&data-original');\n//线路\nvar tabs = parseDom(getResCode(), 'body&&.container,1&&Html').match(/\"more[\\s\\S]*?<\\/h2/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"stui-content__playlist[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[3].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'http://www.03sj.com'+list[j].split('href=\"')[1].split('\"')[0]+`@lazyRule=.embed-responsive&&script&&Html.js:eval(input);now.indexOf('m3u8')>-1?now:now.split('/share')[0]+fetch(now,{}).match(/main = \"(.*?)\"/)[1]`\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":""},{"pageList":[],"title":"金温","author":"小白","version":0,"url":"http://www.kinwin.net.cn/vodshow/fyclass-fyarea-------fypage---fyyear.html","col_type":"movie_3","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"大陆&香港&台湾&法国&美国&英国&日本&韩国&德国&泰国&其他","area_url":"大陆&香港&台湾&法国&美国&英国&日本&韩国&德国&泰国&其他","sort_name":"","year_name":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":".stui-vodlist&&li;a&&title;a&&data-original;.pic-text&&Text;a&&href","searchFind":"","search_url":"","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n// 线路\nvar tabs = parseDom(getResCode(), 'body&&.play-tab&&Html').match(/li[\\s\\S]*?<\\/li>/g);\n// 集数\nvar conts = parseDom(getResCode(), 'body&&Html').match(/<ul class=\\\"stui-play__list[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n\turl: getUrl(),\n\tcol_type: 'text_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[2].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'http://www.kinwin.net.cn' + list[j].split('href=\"')[1].split('\"')[0]+'@lazyRule=.embed-responsive&&script&&Html.js:eval(input)；；player_data.url',\n\t\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":""},{"pageList":[],"title":"青柠檬","author":"发粪涂墙&小白","version":0,"url":"https://www.qnmtv.com/vodshow/fyAll--------fypage---.html","col_type":"movie_3","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"动作片&喜剧片&爱情片&科幻片&恐怖片&剧情片&战争片","area_url":"6&7&8&9&10&11&12","sort_name":"","year_name":"国产剧&港台剧&日韩剧&欧美剧","sort_url":"","year_url":"13&14&15&16","find_rule":".m-list&&li;a&&title;img&&data-original;.label&&Text;a&&href","searchFind":".m-list&&li;a&&title;a&&href;.label&&Text;.des&&Text;img&&data-original","search_url":"https://www.qnmtv.com/vodsearch/**----------fypage---.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.intro-desc&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.lazy&&data-original');\n//线路\nvar tabs = parseDom(getResCode(), 'body&&Html').match(/\"mod-inner-head[\\s\\S]*?<\\/div/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"juji-list[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[2].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'https://www.qnmtv.com'+list[j].split('href=\"')[1].split('\"')[0]+'@lazyRule=html&&.playBox&&script&&Html.js:eval(input)；；decodeURIComponent(base64Decode(player_aaaa.url))'\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"pageList":[],"title":"私房","author":"小白","version":1,"url":"https://www.sifangdata.com/index.php/vod/show/area/fyarea/id/fyclassqqqqx/page/fypage/year/fyyear.html","col_type":"movie_3","class_name":"连续剧&电影&综艺&动漫","class_url":"b&x&j&s","area_name":"大陆&香港&台湾&法国&美国&英国&日本&韩国&德国&泰国&其他","area_url":"大陆&香港&台湾&法国&美国&英国&日本&韩国&德国&泰国&其他","sort_name":"","year_name":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":".tv-list&&li;a&&title;img&&data-src;.v-tips&&Text;a&&href","searchFind":"body&&.item;img&&alt;a&&href;.v-tips&&Text;.p_intro&&Text;img&&src","search_url":"https://www.sifangdata.com/index.php/vod/search/page/fypage/wd/**.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.li_intro&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.v-pic&&img&&src');\n//线路\nvar tabs = parseDom(getResCode(), '.play_source_tab&&Html').match(/a[\\s\\S]*?<\\/a/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"play_num_list[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[2].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'https://www.sifangdata.com'+list[j].split('href=\"')[1].split('\"')[0]+ `@lazyRule=.iplays&&script&&Html.js:eval(input);var url=player_aaaa.url;url.indexOf('m3u8')!=-1?url:url.split('/share')[0]+fetch(url,{}).match(/url: '(.*?)'/)[1]`,\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"auto","preRule":""},{"pageList":[],"title":"搜猫","author":"小白","version":0,"url":"http://www.smdyx.com/search.php?page=fypage&searchtype=5&area=fyarea&year=fyyear&tid=fyclass","col_type":"movie_3_marquee","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"全部&大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","area_url":"&大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","sort_name":"","year_name":"全部&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.fed-list-info&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], '.fed-list-title&&Text'),\r\n       desc: parseDomForHtml(list[j], '.fed-list-remarks&&Text'),\r\n       pic_url: parseDom(list[j], 'a&&data-original'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":".fed-list-info&&li;.fed-list-title&&Text;a&&href;.fed-list-remarks&&Text;.fed-list-desc&&Text;a&&data-original","search_url":"http://www.smdyx.com/search.php?page=fypage&searchword=**","titleColor":"#f20c00","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.pl-nr&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.fed-list-pics&&data-original');\n//线路\nvar tabs = parseDom(getResCode(), 'body&&Html').match(/fed-part-curs[\\s\\S]*?<\\/strong/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"stui-content__playlist[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[2].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'http://www.smdyx.com'+list[j].split('href=\"')[1].split('\"')[0]+`@lazyRule=.wrap&&script&&Html.js:eval(input);now`,\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"pageList":[],"title":"慕楠","author":"小白","version":0,"url":"https://www.mnvod.tv/index.php/vod/show/id/fyclass/page/fypage/year/fyyear.html","col_type":"movie_3","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"","area_url":"","sort_name":"","year_name":"2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":".fed-list-info&&li;.fed-list-title&&Text;a&&data-original;.fed-list-remarks&&Text;a&&href","searchFind":"body&&.fed-deta-info;h1&&Text;a&&href;.fed-list-remarks&&Text;.fed-part-esan&&Text;a&&data-original","search_url":"https://www.mnvod.tv/index.php/vod/search/page/fypage/wd/**.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.fed-part-esan&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.fed-list-pics&&data-original');\n//线路\nvar tabs = parseDom(getResCode(), 'body&&.fed-drop-tops&&Html').match(/href=[\\s\\S]*?<\\/a/g);\n//选集\nvar conts = parseDom(getResCode(), '.fed-drop-btms&&Html').match(/class=\\\"fed-part-rows\\\">[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[1].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'https://www.mnvod.tv'+list[j].split('href=\"')[1].split('\"')[0]+ '@lazyRule=iframe&&data-play.js:url = base64Decode(input.slice(3))'\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":""},{"pageList":[],"title":"哇有","author":"入戏太深&路遥&小白","version":0,"url":"https://m.wayoutv.com/vodshow/fyAll--------fypage---.html","col_type":"movie_3","class_name":"电影&剧集&综艺&动漫","class_url":"1&2&3&4","area_name":"动作&喜剧&爱情&科幻&恐怖&剧情&战争&动画","area_url":"6&7&8&9&10&11&12&24","sort_name":"警告：与视频内容无关的文字信息均属诈骗信息，请勿相信和打开，切记切记！！！","year_name":"国剧&韩剧&日剧&港剧&台剧&泰剧&美剧&海外剧","sort_url":"","year_url":"13&15&21&14&20&22&16&23","find_rule":".vodlist&&li;a&&title;a&&data-original;.pic_text&&Text;a&&href","searchFind":".vodlist&&li;a&&title;a&&href;.pic_text&&Text;p,-1&&Text;a&&data-original","search_url":"https://www.wayoutv.com/vodsearch/**----------fypage---.html","titleColor":"#f20c00","group":"②影视🖥","detail_col_type":"movie_1","detail_find_rule":"js:\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n\n//特别注意：视频顶部滚动的文字信息均属诈骗信息，请勿相信和打开，切记切记！！！\n\n\nvar res = {};\nvar d = [];\nvar html = getResCode(); \nvar tabs = parseDomForArray(html, '.play_source_tab&&a'); \nvar conts = parseDomForArray(html, 'body&&.playlist_notfull,1:');\nfor (var i = 0; i < conts.length; i++) { \n\tvar list = parseDomForArray(conts[i],\"ul&&a\"); \n\tif (list != null) { \n\t\td.push({ \n\t\t\ttitle: parseDomForHtml(tabs[i],\"Text\"), \n\t\t\tcol_type: 'text_1' \n\t\t}); \n\t\tfor (var j = 0; j < list.length; j++) { \n\t\t\td.push({ \n\t\t\t\ttitle: parseDomForHtml(list[j],\"Text\"), \n\t\t\t\turl: 'https://m.wayoutv.com' + parseDomForHtml(list[j],\"a&&href\")+'@lazyRule=.embed-responsive&&script&&Html.js:eval(input)；；decodeURIComponent(base64Decode(player_aaaa.url))',\ncol_type: list.length >3?'text_3':'text_2' \n\t\t\t}); \n\t\t} \n\t} \n} \nres.data = d; \nsetHomeResult(res);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":""},{"last_chapter_rule":"","pageList":[],"title":"兔子窝APP","author":"","version":9,"url":"http://cj.huimaojia.com:12345/mogai_api.php/v1.vod?type=fyclass&class=fyarea&lang=&area=&year=fyyear&by=fysort&page=fypage&limit=9","col_type":"movie_3","class_name":"电影&电视剧&综艺&动漫&番剧","class_url":"1&2&3&4&30","area_name":"全部&科幻&剧情&悬疑&家庭&动作&喜剧&青春","area_url":"&科幻&剧情&悬疑&家庭&动作&喜剧&青春","sort_name":"最多播放&最近更新&最多收藏&最高评分","year_name":"全部&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010&2009&2008&2007&2006&2005&2004&2003&2002&2001&2000","sort_url":"hits&time&store_num&score","year_url":"&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010&2009&2008&2007&2006&2005&2004&2003&2002&2001&2000","find_rule":"js:\r\nvar res = {};\r\nvar items = [];\r\nvar html = JSON.parse(getResCode());\nvar list = html.data.list;\n\r\n    for (var i = 0; i < list.length; i++) {\r\n        var title = list[i].vod_name;\n        var img = list[i].vod_pic;\r\n        var url = list[i].vod_id;\n        var desc = list[i].vod_remarks;\n        items.push({\r\n            title: title,\n            pic_url: img+'@Referer=',\r\n            url: 'http://cj.huimaojia.com:12345/mogai_api.php/v1.vod/detail?vod_id='+url+'&token=+\"#immersiveTheme#\"',\n            desc: desc\r\n        });\r\n    }\n\r\nres.data = items;\r\nsetHomeResult(res);\n","searchFind":"js:\r\nvar res = {};\r\nvar items = [];\r\nvar html = JSON.parse(getResCode());\nvar list = html.data.list;\n\r\n    for (var i = 0; i < list.length; i++) {\r\n        var title = list[i].vod_name;\n        var img = list[i].vod_pic;\r\n        var url = list[i].vod_id;\n        var content = list[i].vod_content;\n        var desc = list[i].vod_remarks;\r\n        items.push({\r\n            title: title,\n            pic_url: img+'@Referer=',\r\n            url: 'http://cj.huimaojia.com:12345/mogai_api.php/v1.vod/detail?vod_id='+url+'&token=+\"#immersiveTheme#\"',\n            content:content,\n            desc: desc\r\n        });\r\n    }\n\r\nres.data = items;\r\nsetSearchResult(res);\n","search_url":"http://cj.huimaojia.com:12345/mogai_api.php/v1.vod?page=fypage&limit=10&wd=**","group":"②影视🖥","detail_col_type":"movie_1","detail_find_rule":"js:\nvar d = [];\nvar Color = \"#f13b66a\";\n/*\nvar lazy = `@lazyRule=.js:var url = input;if(url.match(/youku|mgtv|ixigua|qq.com|qiyi|migu|bili|sohu|pptv|letv|le/)){eval(\"var config =\" + fetch(\"hiker://files/cache/MyParseSet.json\"));eval(fetch(config.cj));aytmParse(url)}else{url}`;\n*/\n\nfunction lazy(lists, i, j) {\n    let url = lists[i][j].url\n    if (i != 0) {\n        return url + `@lazyRule=.js:` + $.toString(() => {\n            var url = input;\n            if (url.match(/youku|mgtv|ixigua|qq.com|qiyi|migu|bili|sohu|pptv|letv|le/)) {\n                return request('https://jhjx.ptygx.com/?url=' + url).match(/url\":\"(.*?)\"/)[1]\n            } else {\n                return url\n            }\n        })\n    }\n    let ol = lists.filter(it => {\n        let u = it[j].url\n        return !(u.match(/youku|mgtv|ixigua|qq.com|qiyi|migu|bili|sohu|pptv|letv|le/))\n    }).map(it => it[j].url)\n    if (url.match(/youku|mgtv|ixigua|qq.com|qiyi|migu|bili|sohu|pptv|letv|le/)) {\n        return url + `@lazyRule=.js:` + $.toString((others) => {\n            var url = input;\n            let u = request('https://jhjx.ptygx.com/?url=' + url).match(/url\":\"(.*?)\"/)[1]\n            return JSON.stringify({\n                urls: [u].concat(others)\n            })\n        }, ol)\n    }\n    return JSON.stringify({\n        urls: ol\n    })\n}\n\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"' + Color + '\">' + title + '</front></strong>';\n}\nvar html = JSON.parse(getResCode()).data;\nd.push({\n    title: '地区：' + html.vod_area + '    年代：' + html.vod_year + '\\n主演：' + html.vod_actor.substring(0, 10) + '\\n导演：' + html.vod_director.substring(0, 10),\n    img: html.vod_pic.replace('mac', 'https'),\n    desc: '简介：' + html.vod_blurb,\n    url: //\"hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noHistory#\",\n        'http://ljr666.com/' + html.vod_pic,\n    col_type: 'movie_1_vertical_pic_blur'\n});\n\nvar tabs = [];\nvar conts = html.vod_play_list;\nvar lists = [];\nfor (var i in conts) {\n    tabs.push(conts[i].player_info.show)\n    lists.push(conts[i].urls)\n}\n\nfunction setTabs(tabs, vari) {\n\n    for (var i in tabs) {\n        var url = \"#noLoading#@lazyRule=.js:putVar('\" + vari + \"', '\" + i + \"');refreshPage(false);'toast://切换成功！';'#noHistory#hiker://empty'\";\n        d.push({\n            title: getVar(vari, '0') == i ? getHead(tabs[i]) : tabs[i],\n            url: url,\n            col_type: 'scroll_button'\n        })\n    }\n}\n\nfunction setLists(lists, index) {\n    var list = lists[index];\n    for (var j in list) {\n\n        d.push({\n            title: list[j].name.replace(/第|集|话|期/g, ''),\n            url: lazy(lists, index, j),\n            col_type: list.length > 4 ? 'text_5' : 'text_2'\n        });\n    }\n}\nsetTabs(tabs, MY_URL);\nsetLists(lists, getVar(MY_URL, '0'));\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[]","icon":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fc-ssl.duitang.com%2Fuploads%2Fblog%2F201507%2F12%2F20150712203605_krJeY.thumb.1000_0.jpeg&refer=http%3A%2F%2Fc-ssl.duitang.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1638324059&t=82906a9e8279dca2a329ed81d6cc18ff"},{"last_chapter_rule":".name&&span&&Text","pageList":[],"title":"哈哩哈哩","author":"永远の明日","version":4,"url":"http://halihali.icu/#fyclass#fyyear#fysort#fyarea#fypage","col_type":"movie_3","class_name":"动漫 ->番表:&周一&周二&周三&周四&周五&周六&周日&‖ 电影&电视剧&综艺","class_url":"acg&1&2&3&4&5&6&7&mov&tv&zongyi","area_name":"地区:&大陆&日本&美国&英国&韩国&香港&台湾&泰国","area_url":"all&china&japan&american&england&korea&hk&tw&thailand","sort_name":"剧情:&搞笑&经典&热血&催泪&治愈&猎奇&励志&战斗&后宫&机战&恋爱&百合&科幻&奇幻&推理&校园&运动&魔法&历史&伪娘&美少女&萝莉&亲子&青春&冒险&竞技&本分类只适用于动漫","year_name":"年代:&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&更早","sort_url":"0&71&72&73&74&75&76&78&80&81&82&84&85&86&88&89&90&91&94&95&101&102&103&105&107&108&109&0","year_url":"0&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2000","find_rule":"js:\n// halihali.li\nlet [, action, year, plot, area, page] = /^http:\\/\\/halihali.icu\\/#(.*?)#(.*?)#(.*?)#(.*?)#(.*?)$/.exec(MY_URL)\nlet data = []\nif (/^[1-7]$/.exec(action)) {\n  let list = parseDomForArray(fetch('http://halihali.icu/zhougen/', {}), '#con_dm_' + action + '&&span').slice(1)\n  data.push({ col_type: 'line' })\n  list.forEach((v) => data.push({\n    title: parseDomForHtml(v, 'a&&Text'),\n    url: parseDom(v, 'a&&href') + '#immersiveTheme#',\n    col_type: 'text_1'\n  }))\n} else {\n  if (action != 'acg') plot = 0\n  let url = /http:\\/\\/(?:\\d{1,4}\\.){3}\\d{1,4}:\\d{1,5}\\/getsortdata_all_z\\.php/.exec(fetch(MY_URL.replace(/#/g, '/') + '.html', {}))[0]\n  log(fetch(url + '?action=' + action + '&page=' + page + '&year=' + year + '&area=' + area + '&class=' + plot, {}))\n  let list = parseDomForArray(fetch(url + '?action=' + action + '&page=' + page + '&year=' + year + '&area=' + area + '&class=' + plot, {}), 'body&&li')\n  list.forEach((v) => data.push({\n    title: parseDomForHtml(v, 'a&&title'),\n    desc: parseDomForHtml(v, '.img&&Text'),\n    pic_url: parseDom(v, 'img&&src'),\n    url: parseDom(v, 'a&&href') + '#immersiveTheme#'\n  }))\n}\nsetResult(data)","searchFind":"js:\nlet [, url] = /var my_search='(http.*php)'/.exec(getResCode())\nlet list = JSON.parse(fetch(url + '?q=' + MY_URL.split('?searchword=')[1], {}))\nvar data = []\nlist.forEach((v) => data.push({\n  title: v.title,\n  url: 'http://halihali.icu/' + v.url + '#immersiveTheme#',\n  content: '连载集数: ' + v.lianzaijs + '\\n演员: ' + v.star,\n  desc: v.time + ' • ' + v.area,\n  img: v.thumb\n}))\nsetResult(data);","search_url":"http://halihali.icu/search.php?searchword=**","titleColor":"#ff00ff","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nlet html = getResCode()\nsetPageTitle(parseDomForHtml(html, '.lazy&&alt'))\nlet playUrl = fetch(MY_URL.slice(0, -16) + '1.html', {}).match(/<script[^<>]*?src=\"(.*?)\"><\\/script>[^<>]*?<body>/)[1],\n  tabs = fetch(playUrl, {}).match(/var lianzaijs.*?ed=1/g).map((v) => v.match(/\".*?\"/g).map((v) => v.slice(1, -1))),\n  data = []\n\ndata.push({\n  title: parseDomForHtml(html, '.name&&span&&Text') + '\\n共有' + tabs.length + '条线路',\n  desc: parseDomForHtml(html, '.des2--b&&Text'),\n  pic_url: parseDom(html, '.lazy&&data-original'),\n  url: MY_URL,\n  col_type: 'movie_1_vertical_pic_blur'\n});\ntabs.forEach((v, i) => {\n  data.push({\n    title: '线路' + (i + 1) + '    集数:' + v.length,\n    col_type: 'text_center_1'\n  });\n  v.forEach((v) => {\n    let [url,, title] = v.split(',')\n    data.push({\n      title: unescape(title),\n      url: $(url).lazyRule(() => {\n        try {\n          let jx = JSON.parse(fetch('https://1717.ntryjd.net/0526/api.php', { body: 'url=' + input, method: 'POST' })).url\n          return (jx.indexOf('https:') == -1 ? 'https:' + jx : jx) + '#isVideo=true#'\n        } catch (e) { return input }\n      })\n    })\n  })\n})\n\nsetResult(data);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"pc","preRule":"","pages":"[]"},{"last_chapter_rule":"","pageList":[],"title":"雅酷","author":"","version":0,"url":"http://www.cnwisda.com/search.php?page=fypage&searchtype=5&tid=fyclass&area=fyarea&year=fyyear","col_type":"movie_3","class_name":"电影&电视剧&动漫&综艺&||&动作片&爱情片&科幻片&恐怖片&战争片&喜剧片&纪录片&剧情片&||&大陆剧&港台剧&欧美剧&日韩剧","class_url":"1&2&4&3&||&5&6&7&8&9&10&11&12&||&13&14&15&16","area_name":"全部&大陆&香港&台湾&日本&韩国&欧美&泰国&其他","area_url":"&大陆&香港&台湾&日本&韩国&欧美&泰国&其他","sort_name":"","year_name":"全部&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&more","sort_url":"","year_url":"&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&more","find_rule":"body&&#sitebox&&dl;img&&alt;img&&data-original;span,2&&Text;a&&href.js:input +\"#immersiveTheme#\"","searchFind":"body&&#sitebox&&dl;img&&alt;a&&href.js:input +\"#immersiveTheme#\";span,2&&Text;.book_des&&Text;img&&data-original","search_url":"http://www.cnwisda.com/search.php?page=fypage&searchword=**&searchtype=","titleColor":"","group":"②影视🖥","detail_col_type":"movie_1","detail_find_rule":"js:\nvar d = [];\nvar html = getResCode();\nvar _x5 = $.toString(() => {\n    fba.log(fba.getUrls())\n    var urls = _getUrls()\n    for (var i in urls) {\n        if (!urls[i].includes(\"url=\") && urls[i].match(/\\.mp3|\\.mp4|\\.m3u8/)) {\n            fy_bridge_app.log(urls[i])\n            return urls[i]\n        }\n    }\n});\n\n//线路名列表的定位\nvar arts = parseDomForArray(html, 'body&&.newrap_c');\n\n//线路名列表名称的定位\nvar tabs = [];\nfor (var i in arts) {\n    tabs.push(parseDomForHtml(arts[i], 'h2&&Text'))\n}\n\n//播放列表的列表的定位\nvar conts = parseDomForArray(html, 'body&&.chaw_c');\nvar lists = [];\nfor (var i in conts) {\n    lists.push(parseDomForArray(conts[i], 'ul&&li'))\n}\n\nvar 导演 = parseDomForHtml(html, '#bookinfo&&li&&Text');\n\nvar 演员 = parseDomForHtml(html, '#bookinfo&&li,1&&Text');\n\nvar 状态 = parseDomForHtml(html, '#bookinfo&&span&&Text');\n\nvar 更新 = parseDomForHtml(html, '#bookinfo&&li,3&&Text');\n\nvar 图片 = parseDom(html, '#bookinfo&&img&&src');\n\nvar 简介 = parseDomForHtml(html, '#bookinfo&&#bookintro&&Text').replace('展开全部', '');\n\n\n\nvar Color = \"#f13b66a\";\nvar Color1 = \"#098AC1\";\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"' + Color + '\">' + title + '</front></strong>';\n}\nlet line_model = 8;\nlet line_type_model = 'blank_block';\nd.push({\n    title: 导演 + '\\n' + 演员,\n    desc: 状态 + '\\n' + 更新,\n    pic_url: 图片,\n    url: getUrl(),\n    col_type: 'movie_1_vertical_pic_blur'\n});\nd.push({\n    title: '‘‘’’<small><font color=\"#ff148e8e\">简介：' + 简介.substr(0, 55) + '...</font><small><font color=\"red\">详情</font></small></small>',\n    url: 'hiker://empty#' + '\\n' + 简介 + `@rule=js:var res = {}; var d = [];d.push({title:'影片简介：'+ MY_URL.split('hiker://empty#')[1],col_type: 'long_text'});res.data = d; setHomeResult(res);`,\n    col_type: 'text_1'\n});\nfor (let i = 0; i < line_model; i++) {\n    d.push({\n        col_type: line_type_model\n    })\n}\nfunction setTabs(tabs, vari) {\n    for (var i in tabs) {\n        var url = \"#noLoading#@lazyRule=.js:putVar('\" + vari + \"', '\" + i + \"');refreshPage(false);'toast://切换成功！';'#noHistory#hiker://empty'\";\n        d.push({\n            title: getVar(vari, '0') == i ? getHead(tabs[i]) : tabs[i],\n            url: url,\n            col_type: 'scroll_button'\n        })\n    }\n    d.push({\n        col_type: 'line_blank'\n    })\n}\nfunction setLists(lists, index) {\n    d.push({\n        col_type: 'line_blank'\n    })\n}\nif (getVar('shsort') == '1') {\n    var sx = '‘‘’’<font color=\"#0aa344\">排序</font></small>' + '<small><font color=\"#0aa344\">↑</font></small>' + '<small><font color=\"#ff4c00\">↓</font></small>';\n} else {\n    var sx = '‘‘’’<font color=\"#0aa344\">排序</font></small>' + '<small><font color=\"#ff4c00\">↑</font></small>' + '<small><font color=\"#0aa344\">↓</font></small>';\n}\nfunction setLists(lists, index) {\n    d.push({\n        title: '‘‘’’<span style=\"color:' + Color1 + '\"><small>选集列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + sx + '</small>',\n        url: `#noLoading#@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功';'#noHistory#hiker://empty'`,\n        col_type: 'text_center_1'\n    })\n    var list = lists[index];\n\n    if (getVar('shsort') == '1') {\n        try {\n            for (var j = list.length - 1; j >= 0; j--) {\n                d.push({\n                    title: parseDomForHtml(list[j], 'a&&Text').replace(/第|集|话|期/g, ''),\n                    url: \"x5Rule://\"+parseDom(list[j], 'a&&href')  + '@' + _x5,\n                    col_type: list.length > 4 ? 'text_5' : 'text_2'\n                });\n            }\n        } catch (e) {\n            d.push({\n                title: '没有选集哟，不信点图片去看看👀',\n                col_type: 'text_center_1'\n            });\n        }\n    } else {\n        try {\n            for (var j = 0; j < list.length; j++) {\n                d.push({\n                    title: parseDomForHtml(list[j], 'a&&Text').replace(/第|集|话|期/g, ''),\n                    url: \"x5Rule://\"+parseDom(list[j], 'a&&href')  + '@' + _x5,\n                    col_type: list.length > 4 ? 'text_5' : 'text_2'\n                });\n            }\n        } catch (e) {\n            d.push({\n                title: '没有选集哟，不信点图片去看看👀',\n                col_type: 'text_center_1'\n            });\n        }\n\n    }\n}\nsetTabs(tabs, MY_URL);\nsetLists(lists, getVar(MY_URL, '0'));\nd.push({\n    title: '<br>',\n    col_type: 'rich_text'\n});\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"auto","preRule":"","pages":"[]"},{"firstHeader":"class","pageList":[],"title":"雪花","author":"小白","version":0,"url":"https://www.yeshi8.cn/index.php/vod/show/area/fyarea/id/fyclass/page/fypage/year/fyyear.html","col_type":"movie_3_marquee","class_name":"连续剧&电影&综艺&动漫","class_url":"2&1&3&4","area_name":"大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","area_url":"大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","sort_name":"","year_name":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.myui-vodlist&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.pic-text&&Text'),\r\n       pic_url: parseDom(list[j], 'a&&data-original'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":".myui-vodlist__media&&li;a&&title;a&&href;.pic-text&&Text;p,-2&&Text;a&&data-original","search_url":"https://www.yeshi8.cn/index.php/vod/search/page/fypage/wd/**.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\nvar html = getResCode();\nvar tabs = parseDomForArray(html, '.nav-tabs&&li');\nvar conts = parseDomForArray(html, 'body&&.myui-content__list');\nvar desc = parseDomForHtml(html, '.sketch&&Text');\nvar fftq ='';\nvar lazy = `@lazyRule=.myui-player__video&&script&&Html.js:eval(input);if(getVar('magedn$local')=='0'){putVar('fftq',player_data.url);refreshPage();'toast://切换选集成功！'}else{player_data.url}`;\nif(getVar('fftq')==''){\nd.push({\n    title: parseDomForHtml(html, '.data&&Text').replace('地区','\\n地区').replace('年份','\\n年份'),\n    desc: parseDomForHtml(html,'.data,2&&Text'),\n    pic_url: parseDom(html, '.lazyload&&data-original'),\n    url: MY_URL,\n    col_type: 'movie_1_vertical_pic'\n});\n}else{\n\nd.push({\n   url:getVar('fftq'),\n\t\tcol_type: 'x5_webview_single'\n});\nputVar('fftq','');\n}\nd.push({col_type:\"rich_text\",title:`<small>当前模式为：<a href=\"hiker://empty@lazyRule=.js:putVar('magedn$local',getVar('magedn$local')=='1'?'0':'1');refreshPage();'toast://已切换模式';\">`+(getVar('magedn$local')=='1'?\"默认播放器\":\"X5播放器\")+\"</a></small>\"});\nd.push({col_type:'blank_block'});\nfor (var i in conts) {\n    var list = parseDomForArray(conts[i], 'ul&&li');\n    if (list != null) {\n        d.push({\n            title: parseDomForHtml(tabs[i], 'a&&Text'),\n            col_type: 'long_text'\n        });\n  for (var j in list) {\n   d.push({\n     title: parseDomForHtml(list[j],'a&&Text'),\n     url: parseDom(list[j],'a&&href') + lazy,\n       col_type: list.length >2?'text_3':'text_2'\n            });\n        }\n    }\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"last_chapter_rule":"","pageList":[],"title":"禁区影视","author":"","version":0,"url":"https://www.ban.cx/type/fyAll-fypage.html","col_type":"movie_3","class_name":"电影&动作片&喜剧片&爱情片&科幻片&恐怖片&剧情片&战争片&犯罪片&纪录片&动画片","class_url":"dianying&dongzuopian&xijupian&aiqingpian&kehuanpian&kongbupian&juqingpian&zhanzhengpian&fanzuipian&jilupian&donghuanpian","area_name":"连续剧&国产剧&港台剧&日韩剧&欧美剧&海外剧","area_url":"lianxuju&guochanju&gangtaiju&rihanju&oumeiju&haiwaiju","sort_name":"综艺&内地综艺&港台综艺&日韩综艺&欧美综艺","year_name":"动漫&国产动漫&日韩动漫&欧美动漫&其他动漫","sort_url":"zongyi&neidizongyi&gangtaizongyi&rihanzongyi&oumeizongyi","year_url":"dongman&guochandongman&rihandongman&oumeidongman&qitadongman","find_rule":"js:\r\nvar d = [];\nvar list = parseDomForArray(getResCode(), 'body&&.module-item');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], '.lazyloaded&&alt'),\r\n       desc: parseDomForHtml(list[j], '.module-item-text&&Text'),\r\n       img: parseDom(list[j], '.lazyloaded&&data-src')+'@Referer=',\r\n       url: parseDom(list[j], 'a&&href').replace('play','detail').replace('-1-1.html','.html')+\"#immersiveTheme#\"\r\n  });\r\n}\r\nsetResult(d);","searchFind":"js:\nvar d = [];\nvar html = getResCode();\n\nvar list = parseDomForArray(html,'body&&.module-search-item');\n\n    for (var i = 0; i < list.length; i++) {\n        var L = list[i];\n        d.push({\n            title: parseDomForHtml(L, 'img&&alt'),\n            url: parseDom(L, 'a,1&&href')+\"#immersiveTheme#\",\n            desc:  parseDomForHtml(L, '.video-serial&&Text'),\n            content: parseDomForHtml(L, '.video-info-item,2&&Text'),\n            img: parseDom(L, 'img&&data-src'),\n        });\r\n    }\nsetResult(d)","search_url":"https://www.ban.cx/search/page/fypage/wd/**.html","titleColor":"","group":"②影视🖥","detail_col_type":"movie_1","detail_find_rule":"js:var d = [];var html=getResCode();\n\n\n//默认播放地址(需修改)\n\nvar lazy = $(\"\").lazyRule(() => {\n        eval(parseDomForHtml(fetch(input, {\n            headers: {\n                \"User-Agent\": PC_UA\n            }\n        }), \".player-wrapper&&script&&Html\"));\n        var url = player_aaaa.url;\n        if (url.indexOf(\"m3u8\") != -1) {\n            var video = url;\n        } else {\nvar html = 'https://bo.ban.cx/?url=' + url;\nvar play = html.search(/youku|mgtv|ixigua|qq.com|qiyi|migu|bilibili|sohu|pptv|letv|le/) > -1 ? html.replace('https://bo.ban.cx/?url=', 'https://jhpc.manduhu.com/?url='):html;\n            showLoading(\"已开启强力嗅探，请稍候\");\n            var video = \"x5Rule://\" + play + \"@\" + $.toString(() => {\n                var urls = _getUrls();\n                for (var i in urls) {\n                    if (urls[i].match(/.mp3|.mp4|.m3u8|obj/)) {\n                        fy_bridge_app.log(urls[i]);\n                        var urll = urls[i].indexOf('mgtv') > -1 ? urls[i] + ';{User-Agent@Mozilla/5.0 (Windows NT 10.0)}' : urls[i].replace('https://bo.ban.cx/jianghu.php?url=','');\n                        return urll;\n                    }\n                }\n            });\n        }\n        return video;\n});\n//视频标题的定位\ntry{\nvar des_title = parseDomForHtml(html, 'h1&&Text');\n\n}catch(e){\nvar des_title ='没有正确获取到影片名称哟！';\n}\n\n//剧情简介的定位\ntry{\nvar des_desc = parseDomForHtml(html,'.vod_content&&Text');\n\n}catch(e){\nvar des_desc ='没有正确获取到剧情简介哟！';\n}\n\n//视频封面的定位\ntry{\nvar des_pic =parseDom(html,'.lazyload&&data-src');\n\n}catch(e){\nvar des_desc ='没有正确获取到简介图片路径哟！\\n'+des_desc;\n}\n\n//线路名列表的定位\nvar arts = parseDomForArray(html,'body&&.module-tab-item');\n\n\n//播放列表的列表的定位\nvar conts = parseDomForArray(html, 'body&&.scroll-box-y');\n   \nvar lists =[];\nfor (var i in conts) {\n    lists.push(parseDomForArray(conts[i], 'body&&a'))      //' 列表名改'ul&&li'\n}\n\nvar tabs = [];\nfor (var i in conts) {\n    tabs.push(parseDomForHtml(arts[i], 'span&&Text').replace('TX播放','腾讯').replace('QY播放','爱奇艺').replace('YK播放','优酷').replace('LS播放','乐视'))//有可能改Text\n\n}\n\n\n//下面除了获取选集名称例如1,2,3集，有的需要改下\n//有其他不需要修改\n\nd.push({\ntitle:des_title,\ndesc:des_desc,\npic_url:des_pic,\nurl:getUrl(),\ncol_type:'movie_1_vertical_pic_blur'\n});\n\nd.push({\n    col_type: 'line_blank'\n});\nd.push({\n    col_type: 'big_blank_block'\n});\nd.push({\n    col_type: 'big_blank_block'\n});\nd.push({\n    title: (getVar('shsort') == '1') ? '““””<b><span style=\"color: #FF0000\">逆序</span></b>' : '““””<b><span style=\"color: #1aad19\">正序</span></b>',\n    url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\n    col_type: 'scroll_button'\n})\n\nfunction setTabs(tabs, vari) {\n    for (var i in tabs) {\n        var url = \"#noLoading#@lazyRule=.js:putVar('\" + vari + \"', '\" + i + \"');refreshPage(false);'toast://切换成功！';'#noHistory#hiker://empty'\";\n        d.push({\n            title: getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i],\n            url: url,\n            col_type: 'scroll_button'\n        })\n    }\n}\n\nfunction setLists(lists, index) {\n    var list = lists[index];\n    d.push({\n        col_type: 'line_blank'\n    });\n    d.push({\n        col_type: 'big_blank_block'\n    });\n    d.push({\n        col_type: 'big_blank_block'\n    });\n    if (getVar('shsort') == '1') {\n        for (var j = list.length - 1; j >= 0; j--) {\n            var jm = parseDomForHtml(list[j], 'a&&Text').replace(/第(\\d+)集/, '$1').replace('第', '').replace('期', '');\n            d.push({\n                title: jm,\n                url:parseDom(list[j], 'a&&href')  +lazy,\n                col_type: jm.length > 5 ? 'text_2' : 'text_5'\n            });\n        }\n    } else {\n        for (var j = 0; j < list.length; j++) {\n            var jm = parseDomForHtml(list[j], 'a&&Text').replace(/第(\\d+)集/, '$1').replace('第', '').replace('期', '');\n            d.push({\n                title: jm,\n                url:parseDom(list[j], 'a&&href')  +lazy,\n                col_type: jm.length > 5 ? 'text_2' : 'text_5'\n            });\n        }\n    }\n}\nsetTabs(tabs, MY_URL);\nsetLists(lists, getVar(MY_URL, '0'));\nd.push({\n    title: '<br>',\n    col_type: 'rich_text'\n});\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[]"},{"pageList":[],"title":"星辰","author":"小白","version":1,"url":"http://www.pku-pe.org/search.php?page=fypage&searchtype=5&tid=fyAll","col_type":"movie_3_marquee","class_name":"电影&连续剧&综艺&动漫","class_url":"1&2&3&4","area_name":"动作片&喜剧片&爱情片&科幻片&恐怖片&剧情片","area_url":"5&10&6&7&8&12","sort_name":"","year_name":"国产剧&香港剧&欧美剧&日韩剧","sort_url":"","year_url":"13&14&15&16","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.myui-vodlist&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.pic-text&&Text'),\r\n       pic_url: parseDom(list[j], 'a&&data-original'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":".myui-vodlist__media&&li;a&&title;a&&href;.pic-text&&Text;p,-2&&Text;a&&data-original","search_url":"http://www.pku-pe.org/search.php?page=fypage&searchword=**&searchtype=","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.desc&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.lazyload&&data-original');\n//线路\nvar tabs = parseDom(getResCode(), 'body&&Html').match(/data-toggle=[\\s\\S]*?<\\/a/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"myui-content__list[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[1].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'http://www.pku-pe.org'+list[j].split('href=\"')[1].split('\"')[0]+`@lazyRule=.embed-responsive&&script&&Html.js:eval(input);var url=now;url.indexOf('m3u8')!=-1?url:url.split('/share')[0]+fetch(url,{}).match(/url: '(.*?)'/)[1]`,\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"firstHeader":"class","pageList":[],"title":"高真","author":"小白&路遥&Mute","version":0,"url":"https://m.gqxz.com/fyAll/list_fypage.html","col_type":"movie_3_marquee","class_name":"电脑风景&手机风景&电脑美女&手机美女&电脑植物&手机植物&电脑汽车&手机汽车&电脑明星&手机明星&电脑动漫&手机动漫&电脑建筑&手机建筑&电脑动物&手机动物","class_url":"wallpaper/1&mobile/1&wallpaper/2&mobile/2&wallpaper/3&mobile/3&wallpaper/4&mobile/4&wallpaper/5&mobile/5&wallpaper/6&mobile/6&wallpaper/7&mobile/7&wallpaper/8&mobile/8","area_name":"清纯美女&性感美女&日本美女&车模宝贝&丝袜美腿&Cosplay","area_url":"beauty/1&beauty/2&beauty/3&beauty/4&beauty/5&beauty/6","sort_name":"","year_name":"内地女星&内地男星&港台女星&欧美男星&微信头像&男生头像&女生头像&情侣头像","sort_url":"","year_url":"star/1&star/2&star/3&star/4&portrait/1&portrait/2&portrait/3&portrait/4","find_rule":".item&&li;a&&title;img&&src;p&&Text;a&&a&&href.js:input.replace('.html','_fypage.html')","searchFind":"","search_url":"","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"pic_1","detail_find_rule":"#endtext&&p:has(img);;img&&src;;img&&src","sdetail_col_type":"text_3","sdetail_find_rule":"","ua":"auto","preRule":""},{"firstHeader":"class","pageList":[],"title":"66","author":"小白","version":0,"url":"https://www.6666ys.com/vodshow/fyclass-fyarea-------fypage---fyyear/","col_type":"movie_3_marquee","class_name":"连续剧&电影&综艺&动漫","class_url":"2&1&3&4","area_name":"大陆&香港&台湾&日本&美国&泰国&英国&新加坡&其他","area_url":"大陆&香港&台湾&日本&美国&泰国&英国&新加坡&其他","sort_name":"","year_name":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.stui-vodlist&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.pic-text&&Text'),\r\n       pic_url: parseDom(list[j], 'img&&src'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":".stui-vodlist__media&&li;a&&title;a&&href;.pic-text&&Text;p,-2&&Text;a&&data-original","search_url":"https://www.6666ys.com/vodsearch/**----------fypage---/","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.detail&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.lazyload&&src');\n//线路\nvar tabs = parseDom(getResCode(), 'body&&Html').match(/h3[\\s\\S]*?<\\/h3/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"stui-content__playlist[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[1].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'https://www.6666ys.com'+list[j].split('href=\"')[1].split('\"')[0]+'@lazyRule=html&&.stui-player__video&&script&&Html.js:eval(input)；；player_x10d26.url'\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"firstHeader":"class","pageList":[],"title":"极速","author":"小白","version":0,"url":"http://www.162fw.com/vodshow/fyclass-/page/fypage.html","col_type":"movie_3_marquee","class_name":"电影&连续剧&综艺&动漫","class_url":"dy&ds&zy&dm","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.tv-list&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.v-tips&&Text'),\r\n       pic_url: parseDom(list[j], 'img&&data-src'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":"body&&.item;img&&alt;a&&href;.v-tips&&Text;.p_intro&&Text;.item_pic&&img&&src","search_url":"http://www.162fw.com/vodsearch/**----------fypage---.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.txt_list&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.v-pic&&img&&src');\n//线路\nvar tabs = parseDom(getResCode(), 'body&&Html').match(/apiname=[\\s\\S]*?<\\/a/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"play_num_list[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[1].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'http://www.162fw.com'+list[j].split('href=\"')[1].split('\"')[0]+'@lazyRule=html&&.iplays&&script&&Html.js:eval(input)；；player_data.url'\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"firstHeader":"class","pageList":[],"title":"11","author":"小白","version":0,"url":"https://www.dqyjzx.com/vtype-fyAll-fypage.html","col_type":"movie_3","class_name":"","class_url":"","area_name":"动作片&喜剧片&爱情片&科幻片&恐怖片&剧情片&战争片","area_url":"dongzuopian&xijupian&aiqingpian&kehuanpian&kongbupian&juqingpian&zhanzhengpian","sort_name":"","year_name":"国产剧&港剧&日剧&美剧&韩剧","sort_url":"","year_url":"guochanju&gangju&riju&meiju&hanju","find_rule":".jq-ul&&li;\na&&title;img&&src;span&&Text;a&&href","searchFind":".jq-ul&&li;\na&&title;\na&&href;\nspan&&Text;\n;\nimg&&src","search_url":"https://www.dqyjzx.com/vsearch**----------fypage---.html","titleColor":"#fff20c00","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.jq-jieshao&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.dsj-pic&&img&&src');\n//线路\nvar tabs = parseDom(getResCode(), 'body&&Html').match(/h2[\\s\\S]*?<\\/h2/g);\n//选集\nvar conts = parseDom(getResCode(), 'body&&Html').match(/\"juji-con[\\s\\S]*?<\\/ul>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[3].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'https://www.dqyjzx.com'+list[j].split('href=\"')[1].split('\"')[0]+`@lazyRule=iframe&&src.js:input.split('=')[1]`\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"auto","preRule":""},{"pageList":[],"title":"私人","author":"小白","version":0,"url":"http://www.aimm.im/vodshow/fyAll--------fypage---.html","col_type":"movie_3_marquee","class_name":"电影&连续剧&综艺&动漫","class_url":"dianying&dsj&zongyi&dongman","area_name":"动作片&喜剧片&爱情片&科幻片&恐怖片&剧情片","area_url":"6&7&8&9&10&11","sort_name":"","year_name":"国产剧&香港剧&台湾剧&韩国剧&日本剧&欧美剧","sort_url":"","year_url":"13&14&24&15&25&16","find_rule":".vodlist&&li;a&&title;a&&data-original;.pic_text&&Text;a&&href","searchFind":".vodlist&&li;a&&title;a&&href;.pic_text&&Text;p,-1&&Text;a&&data-original","search_url":"http://www.aimm.im/vodsearch/**----------fypage---.html","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\n\n//警告：本规则仅供写源爱好者学习交流。若作他用，后果自负！\n//简介\nvar des_desc = parseDom(getResCode(), '.desc&&Text').replace(getUrl()+\"/\",\"\");\n//图片\nvar des_pic = parseDom(getResCode(), '.lazyload&&data-original');\n//线路\nvar tabs = parseDom(getResCode(), '.play_source_tab&&Html').match(/a[\\s\\S]*?<\\/a/g);\n//选集\nvar conts = parseDom(getResCode(), '.play_source&&Html').match(/playlist_full[\\s\\S]*?<\\/div>/g);\n\nd.push({\n\ttitle: '共有' + conts.length + '条线路',\n desc: des_desc,\n\tpic_url: des_pic,\n\turl: getUrl(),\n\tcol_type: 'pic_1'\n});\n\nfor (var i = 0; i < conts.length; i++) {\n\tvar list = conts[i].match(/<a[\\s\\S]*?<\\/a>/g);\n\tif (list != null) {\n\t\td.push({\n\t\t\ttitle: tabs[i].split(\">\")[3].split(\"<\")[0],\n\t\t\tcol_type: 'text_1'\n\t\t});\n\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\td.push({\n\t\t\t\ttitle: list[j].split('>')[1].split('<')[0],\n\t\t\t\turl: 'http://www.aimm.im'+list[j].split('href=\"')[1].split('\"')[0]+`@lazyRule=.embed-responsive&&script&&Html.js:eval(input);player_data.url`,\n\t\t\t});\n\t\t}\n\t}\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"firstHeader":"class","pageList":[],"title":"999","author":"小白","version":0,"url":"https://www.9999ku.com/vodshow/fyclass/area/fyarea/page/fypage/year/fyyear.html","col_type":"movie_3_marquee","class_name":"电影&连续剧&综艺&动漫","class_url":"dianying&lianxuju&zongyi&dongman","area_name":"大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","area_url":"大陆&韩国&香港&台湾&日本&美国&泰国&英国&新加坡&其他","sort_name":"","year_name":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","sort_url":"","year_url":"2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\ntry{\nvar list = parseDomForArray(getResCode(), '.myui-vodlist&&li');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], 'a&&title'),\r\n       desc: parseDomForHtml(list[j], '.pic-text&&Text'),\r\n       pic_url: parseDom(list[j], 'a&&data-original'),\r\n       url: parseDom(list[j],'a&&href')\r\n  });\r\n}}catch(e){}\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":"js: var json = {};\neval('json=' + getResCode());\nvar res = {};\nvar d = [];\nfor (var i = 0; i < json.list.length; i++)\n{\n var r = {};\n var j = json.list[i];\n r.pic_url ='https://www.9999ku.com/'+j.pic;\n r.url ='https://www.9999ku.com/90detail/' + j.id+'.html';\n r.title = j.name;\n //r.desc = '时长：' + j.vod_remarks + '  播放量：' + j.vod_remarks;\n d.push(r);\n}\nres.data = d;\nsetHomeResult(res)","search_url":"https://www.9999ku.com/index.php/ajax/suggest?mid=1&wd=**&limit=10&timestamp=1615135869380","titleColor":"#ff228be6","group":"②影视🖥","detail_col_type":"text_3","detail_find_rule":"js:\nvar res = {};\nvar d = [];\nvar html = getResCode();\nvar tabs = parseDomForArray(html, '.nav-tabs&&li');\nvar conts = parseDomForArray(html, 'body&&.myui-content__list');\nvar desc = parseDomForHtml(html, '.desc&&Text');\nvar fftq ='';\nvar lazy = `@lazyRule=.myui-player__video&&script&&Html.js:eval(input);if(getVar('magedn$local')=='0'){putVar('fftq',player_aaaa.url);refreshPage();'toast://切换选集成功！'}else{player_aaaa.url}`;\nif(getVar('fftq')==''){\nd.push({\n    title: parseDomForHtml(html, '.data&&Text').replace('地区','\\n地区').replace('年份','\\n年份'),\n    desc: parseDomForHtml(html,'.data,2&&Text'),\n    pic_url: parseDom(html, '.lazyload&&data-original'),\n    url: MY_URL,\n    col_type: 'movie_1_vertical_pic'\n});\n}else{\n\nd.push({\n   url:getVar('fftq'),\n\t\tcol_type: 'x5_webview_single'\n});\nputVar('fftq','');\n}\nd.push({col_type:\"rich_text\",title:`<small>当前模式为：<a href=\"hiker://empty@lazyRule=.js:putVar('magedn$local',getVar('magedn$local')=='1'?'0':'1');refreshPage();'toast://已切换模式';\">`+(getVar('magedn$local')=='1'?\"默认播放器\":\"X5播放器\")+\"</a></small>\"});\nd.push({col_type:'blank_block'});\nfor (var i in conts) {\n    var list = parseDomForArray(conts[i], 'ul&&li');\n    if (list != null) {\n        d.push({\n            title: parseDomForHtml(tabs[i], 'a&&Text'),\n            col_type: 'long_text'\n        });\n  for (var j in list) {\n   d.push({\n     title: parseDomForHtml(list[j],'a&&Text'),\n     url: parseDom(list[j],'a&&href') + lazy,\n       col_type: list.length >2?'text_3':'text_2'\n            });\n        }\n    }\n}\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"auto","preRule":""},{"last_chapter_rule":"","pageList":[],"title":"蓝莓影视断插♔","author":"蓝莓果酱UX","version":7,"url":"https://lanmeiguojiang.com/index.php/vod/show/by/fysort/fyarea/id/fyclass/page/fypage/fyyear.html","col_type":"movie_3","class_name":"电影&剧集&综艺&动漫&国创&直播&|#|&动作片&喜剧片&爱情片&科幻片&恐怖片&战争片&犯罪片&记录片&悬疑片&惊悚片&冒险片&|#|&港台剧&日韩剧&欧美剧&","class_url":"1&13&3&4&27&42&|#|&6&7&8&9&10&12&20&21&22&30&31&|#|&14&15&16&","area_name":"全部&内地&香港&台湾&美国&法国&英国&日本&韩国&德国&泰国&印度&意大利&西班牙&加拿大&其他","area_url":"&/area/内地&/area/香港&/area/台湾&/area/美国&/area/法国&/area/英国&/area/日本&/area/韩国&/area/德国&/area/泰国&/area/印度&/area/意大利&/area/西班牙&/area/加拿大&/area/其他","sort_name":"时间&人气&评分","year_name":"年代&2021&2020&2019&2018&2017&2016&2015&2014&2013&2012&2011&2010&2009&2008&2007&2006&2005&更早","sort_url":"time&hits&score","year_url":"&year/2021&year/2020&year/2019&year/2018&year/2017&year/2016&year/2015&year/2014&year/2013&year/2012&year/2011&year/2010&year/2009&year/2008&year/2007&year/2006&year/2005&year/2004","find_rule":".module-items&&.module-item;a&&title;img&&data-src;.module-item-caption&&Text;a&&href.js:input +\"#immersiveTheme#\"","searchFind":"js:\nvar d = [];\nvar html = getResCode();\n\nvar list = parseDomForArray(html,'body&&.module-list&&.module-search-item');\n\n    for (var i = 0; i < list.length; i++) {\n        var L = list[i];\n        d.push({\n            title: parseDomForHtml(L, 'img&&alt'),\n            url: parseDom(L, 'a,1&&href')+\"#immersiveTheme#\",\n            desc:  parseDomForHtml(L, '.video-info&&a&&Text'),\n            content: parseDomForHtml(L, '.video-info-main&&.video-info-item,2&&Text'),\n            img: parseDom(L, 'img&&data-src'),\n        });\r\n    }\nsetResult(d)","search_url":"https://lanmeiguojiang.com/index.php/vod/search/page/fypage/wd/**.html","group":"②影视🖥","detail_col_type":"movie_1","detail_find_rule":"js:var d = [];var html=getResCode();\n\nvar jsUrl = fetch('hiker://files/cache/MyParseSet.json');\n    if(jsUrl == '' || !fetch(JSON.parse(jsUrl).cj)){var jsFile = fetch('https://code.aliyun.com/AI957/Hiker/raw/master/v/CloudParse-V2_Dn.js');}else{var jsFile = fetch(JSON.parse(jsUrl).cj);}eval(jsFile);\n\n//默认播放地址(需修改)\nvar lazy =\n`@lazyRule=.player-wrapper&&script&&Html.js:eval(input.replace(/player_.*?={/,'player_aaaa={'));var url=decodeURIComponent(player_aaaa.url);if(url.match(/.html/)){var input=url;`+lazy+`}else{url}`;\n\n//地区年份分类主演导演图片\n\nd.push({\n\ttitle: '分类：'+parseDomForHtml(html, '.tag-link,1&&Text').replace(/\\//g,'')+'  '+parseDomForHtml(html, '.tag-link,2&&Text')+'  '+parseDomForHtml(html, '.tag-link,3&&Text').substring(0, 20)+ '\\n' + parseDomForHtml(html,'.video-info-items,1&&Text').replace(/\\//g,' ').replace('  ','').substring(0, 25)+'\\n'+parseDomForHtml(html, '.video-info-items&&Text').replace(/\\//g,' ').replace('  ','').substring(0, 25),\tdesc:  '简介:  '+parseDomForHtml(html,'.zkjj_a&&Text').replace('[收起部分]','').replace('　',''),\n\tpic_url: parseDom(html, '.lazyload&&data-src'),\nurl: setUrl,\ncol_type: 'movie_1_vertical_pic_blur'\n});\n\n\n//线路名列表的定位\nvar arts = parseDomForArray(html,'.module-tab-content&&.module-tab-item');\n\n\n//播放列表的列表的定位\nvar conts = parseDomForArray(html, 'body&&.sort-item');\n   \nvar lists =[];\nfor (var i in conts) {\n    lists.push(parseDomForArray(conts[i], 'div&&a'))      //' 列表名改'ul&&li'\n}\n\nvar tabs = [];\nfor (var i in conts) {\n    tabs.push(parseDomForHtml(arts[i], 'Text').replace(' ',''))//有可能改Text\n\n}\n\n\n//下面除了获取选集名称例如1,2,3集，有的需要改下\n//有其他不需要修改\n\n\n\n//折叠需要用到的\nfunction setTabs(tabs, vari) {\n    for (var i in tabs) {\n        var url = \"#noLoading#@lazyRule=.js:putVar('\" + vari + \"', '\" + i + \"');refreshPage(false);'toast://切换成功！';'#noHistory#hiker://empty'\";\n        d.push({\n            title: getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i],\n            url: url,\n            col_type: 'text_4'\n        })\n    }\n}\n\nfunction setLists(lists, index) {\n    var list = lists[index];\n    d.push({\n        col_type: 'line'\n    });\n    \nd.push({\n    title: (getVar('shsort') == '1') ? '““””<b><span style=\"color: #FF0000\">~◆~正在使用逆序~◆~</span></b>' : '““””<b><span style=\"color: #1aad19\">~◆~正在使用正序~◆~</span></b>',\n    url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\n    col_type: 'text_center_1'\n})\n\n    if (getVar('shsort') == '1') {\n        for (var j = list.length - 1; j >= 0; j--) {\n            var jm = parseDomForHtml(list[j], 'a&&Text').replace(/第(\\d+)集/, '$1').replace('第', '').replace('期', '');\n            d.push({\n                title: jm,\n                url: parseDom(list[j], 'a&&href') + lazy,\n                col_type: jm.length > 5 ? 'text_3' : 'text_5'\n            });\n        }\n    } else {\n        for (var j = 0; j < list.length; j++) {\n            var jm = parseDomForHtml(list[j], 'a&&Text').replace(/第(\\d+)集/, '$1').replace('第', '').replace('期', '');\n            d.push({\n                title: jm,\n                url: parseDom(list[j], 'a&&href') + lazy,\n                col_type: jm.length > 5 ? 'text_3' : 'text_5'\n            });\n        }\n    }\n}\nsetTabs(tabs, MY_URL);\nsetLists(lists, getVar(MY_URL, '0'));\n\n\nd.push({\n    title: '““””<small><font color=#871f78>以上数据来源于网络，如您喜欢，请支持官方</font></small>',\n    desc: '““””<small><font color=#f20c00>此规则仅限学习交流使用，请于导入后24小时内删除，任何组织或个人不得以任何方式方法传播此规则的整体或部分！</font></small>',\n    url: MY_URL,\n    col_type: 'text_center_1'\n});\n\nd.push({ title: '<br>', col_type: 'rich_text' });\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[]","icon":"https://lanmeiguojiang.com/tubiao/movie/1.png"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"正文","path":"content","rule":"js:\nsetResult([{\n    title: MY_PARAMS.title,\n    url: MY_PARAMS.u,\n    desc: \"100%&&float\",\n    col_type: \"x5_webview_single\",\n    extra: {\n        js: $.toString(() => {\n            (function() {\n                if (window.location.href.indexOf(\"/content.php?url=\") < 0) {\n                    return\n                }\n                var nodes = document.getElementsByTagName(\"p\");\n                for (let i = 0; i < nodes.length; i++) {\n                    nodes[i].style.fontSize = '17px';\n                    nodes[i].style.lineHeight = '200%';\n                    nodes[i].style.marginBottom = '25px';\n                    nodes[i].style.transition = 'all .5s';\n                }\n\n                nodes = document.getElementsByClassName(\"el-card__body\");\n                for (let i = 0; i < nodes.length; i++) {\n                    nodes[i].style.padding = '10px';\n                    nodes[i].style.transition = 'all .5s';\n                }\n                nodes = document.getElementsByClassName(\"el-main\");\n                for (let i = 0; i < nodes.length; i++) {\n                    nodes[i].style.padding = '10px';\n                    nodes[i].style.transition = 'all .5s';\n                }\n\n            })();\n        })\n    }\n}])"}],"title":"故事会","author":"","version":5,"url":"http://new-qk.lifves.com/list.php?url=M0QzJWV1c3NpNjIlMTIwMkQzJXJhZXk2MiUyODVlNjY5YmEyMzktOWQ3Yi04NWY0LWUyNjItNzFjM2NkODBEMyVkaUYzJWxpYXRlZEYyJWFnYW1GMiVjcEYyJW1vYy5uYWtpcS5zcGQuZ3N0eGRuakYyJUYyJUEzJXB0dGg=","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\neval(parseDomForHtml(getResCode(), \"body&&script,2&&Html\"));\nlet data = [];\nfor (let i = 0; i < data_list.data_list.length; i++) {\n    let l = data_list.data_list[i];\n    for (let j = 0; j < l.list.length; j++) {\n        let item = l.list[j];\n        data.push({\n            title: item.span,\n            url: \"http://new-qk.lifves.com/intro.php?url=\" + item.link,\n            pic_url: item.img\n        });\n    }\n}\nsetResult(data);","searchFind":"","search_url":"","titleColor":"#ff148e8e","group":"③听、书📻","detail_col_type":"text_1","detail_find_rule":"js:\neval(parseDomForHtml(getResCode(), \"body&&script,2&&Html\").split(\"localStorage\")[0]);\nlet data = [];\nfor (let i = 0; i < page_list.length; i++) {\n    let item = page_list[i];\n    data.push({\n        title: item.title,\n        extra: {\n            u: \"http://new-qk.lifves.com/\" + item.href,\n            title: item.title\n        },\n        url: \"hiker://page/content\",\n    });\n}\nsetResult(data);","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"正文\",\"path\":\"content\",\"rule\":\"js:\\nsetResult([{\\n    title: MY_PARAMS.title,\\n    url: MY_PARAMS.u,\\n    desc: \\\"100%&&float\\\",\\n    col_type: \\\"x5_webview_single\\\",\\n    extra: {\\n        js: $.toString(() => {\\n            (function() {\\n                if (window.location.href.indexOf(\\\"/content.php?url=\\\") < 0) {\\n                    return\\n                }\\n                var nodes = document.getElementsByTagName(\\\"p\\\");\\n                for (let i = 0; i < nodes.length; i++) {\\n                    nodes[i].style.fontSize = '17px';\\n                    nodes[i].style.lineHeight = '200%';\\n                    nodes[i].style.marginBottom = '25px';\\n                    nodes[i].style.transition = 'all .5s';\\n                }\\n\\n                nodes = document.getElementsByClassName(\\\"el-card__body\\\");\\n                for (let i = 0; i < nodes.length; i++) {\\n                    nodes[i].style.padding = '10px';\\n                    nodes[i].style.transition = 'all .5s';\\n                }\\n                nodes = document.getElementsByClassName(\\\"el-main\\\");\\n                for (let i = 0; i < nodes.length; i++) {\\n                    nodes[i].style.padding = '10px';\\n                    nodes[i].style.transition = 'all .5s';\\n                }\\n\\n            })();\\n        })\\n    }\\n}])\"}]","icon":""},{"last_chapter_rule":"","pageList":[],"title":"抽屉听书","author":"","version":0,"url":"https://ubushu.com/category/meitian/page/fypage","col_type":"movie_1_vertical_pic","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n\n  var d=[];\n\n   html=getResCode();\n\n   arr = pdfa(html,\".content-list&&.post\");\n\n   for(let data of arr){\n\n        title = pdfh(data,\"h2&&a&&Text\");\n\n        ctitle = title.match(/《.*?》/) && title.match(/《.*?》/)[0];\n            \n       d.push({\n            title: ctitle ,   \n            desc: \"\\n\\n\"+title.replace(/《.*?》/,\" - \")  ,\n            pic_url: pdfh(data,\"img&&src\") ,   \n            col_type:\"\",\n            url:  pd(data,\"a&&href\"),   \n         })\n    }\n\n   setResult(d);","searchFind":"","search_url":"","titleColor":"","group":"③听、书📻","detail_col_type":"text_2","detail_find_rule":"js:\n\n   var d=[];\n\n   html=getResCode();\n\n   arr = pdfa(html,\".entry-content&&p,1&&a\");\n\n   for(let data of arr){         \n\n      d.push({\n              title: pdfh(data,\"a&&Text\") ,   \n              url:  \"x5Rule://\" +pd(data,\"a&&href\")+\"@\"+$.toString(() => {\n\n    var urls = _getUrls();\n\n    for (var i in urls) {\n\n       let div = document.querySelector(\"mpvoice\");\n\n        if (div != null) {\n                return \"https://res.wx.qq.com/voice/getvoice?mediaid=\"+div.getAttribute(\"voice_encode_fileid\")+\"#isMusic=true#\"\n\n              }\n           }\n       })\n    })\n  }\n\n  setResult(d);","sdetail_col_type":"text_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[]"},{"last_chapter_rule":"js:\nvar html = getResCode();\nvar list = parseDomForArray(html, '.play-list&&ul&&li');\nvar title = parseDomForHtml(list[list.length-1],'a&&Text');\nsetResult('最新：'+title);","pageList":[],"title":"听书宝","author":"","version":0,"url":"http://m.tingshubao.com/list/fyAll_fypage.html[firstPage=http://m.tingshubao.com/list/fyAll.html];get;gb2312","col_type":"movie_1_vertical_pic","class_name":"有声小说&玄幻武侠&都市小说&言情小说&惊悚悬疑&历史军事&网游科幻","class_url":"1&27&28&29&31&32&33","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar res = {};\nvar d = [];\nvar html = getResCode();\n\n//列表\nvar list = parseDomForArray(html, '.book-ol&&li');\n\nfor (var i = 0; i < list.length; i++) {\n\n    d.push({\n        title: '《'+parseDomForHtml(list[i], 'h4&&Text')+'》'+'\\n'+parseDomForHtml(list[i], '.book-meta&&Text'),\n      desc: parseDomForHtml(list[i], '.book-desc&&Text'),\n        pic_url: parseDom(list[i], 'img&&data-original'),\n        url: parseDom(list[i], 'a&&href')+\"#immersiveTheme#\"\r\n\n\n    });\n}\n\nres.data = d;\nsetHomeResult(res);","searchFind":"js:\nvar res = {};\nvar d = [];\nvar html = getResCode();\n\n//列表\nvar list = parseDomForArray(html, '.book-ol&&li');\n\nfor (var i = 0; i < list.length; i++) {\n\n    d.push({\n        title: '《'+parseDomForHtml(list[i], 'h4&&Text')+'》'+'\\n'+parseDomForHtml(list[i], '.book-meta&&Text'),\n      desc: parseDomForHtml(list[i], '.book-desc&&Text'),\n        pic_url: parseDom(list[i], 'img&&data-original'),\n        url: parseDom(list[i], 'a&&href')+\"#immersiveTheme#\"\r\n\n\n    });\n}\n\nres.data = d;\nsetHomeResult(res);","search_url":"http://m.tingshubao.com/search.asp?page=fypage&searchword=**&searchtype=-1;get;gb2312","titleColor":"","group":"③听、书📻","detail_col_type":"movie_1","detail_find_rule":"js:\nvar res = {};\nvar d = [];\nvar html = getResCode();\n\n\nvar _x5 = $.toString(() => {\n    fba.log(fba.getUrls())\n    var urls = _getUrls()\n    for (var i in urls) {\n        if (!urls[i].includes(\"url=\") &&urls[i].match(/\\.mp3|\\.m4a/)) {\n            fy_bridge_app.log(urls[i])\n            return urls[i]\n        }\n    }\n});\n//获取简介\nvar des_desc = '简介：' + parseDomForHtml(html, '.book-des--p&&Text');\n\nd.push({\n\n    //作者、类型等\n    title: parseDomForHtml(html, '.book-rand-a,0&&Text') + '\\n' + parseDomForHtml(html, '.book-des&&p&&Text').replace('播音','\\n播音'),\n\n    //描述\n    desc: parseDomForHtml(html, '.book-rand-a,2&&Text'),\n\n    //图片地址\n    pic_url: parseDom(html, '.book&&img&&src'),\n    url: getUrl(),\n    col_type: 'movie_1_vertical_pic_blur'\n});\n\n//限制简介长度\nif (des_desc.length > 110) {\n    des_desc = des_desc.replace(des_desc, des_desc.substring(0, 110) + \"……\");\n}\n\n//输出简介\nd.push({\n    title: des_desc,\n    col_type: 'long_text'\n});\n\nd.push({\n    col_type: 'line'\n});\n\n//选集列表\nvar list = parseDomForArray(html, '.play-list&&ul&&li:has(a)');\n\n//线路名称\nd.push({\n    title: '播放列表(共' + list.length + '集)',\n    url: 'toast://点什么点 (｡•ˇ‸ˇ•｡)',\n    col_type: 'text_center_1'\n});\n\n//选集名称\nfor (var i in list) {\n\n    var title = parseDomForHtml(list[i], 'a&&Text');\n\n    if (title.length > 16) {\n        title = title.substring(0, 16);\n    }\n\n    d.push({\n        title: title,\n        url: 'x5Rule://' + parseDom(list[i], 'a&&href') + '@' +_x5,\n        col_type: parseDomForHtml(list[0], 'a&&Text').length > 3 ? 'text_2' : 'text_3'\n    });\n}\nfor (var b = 0; b < 5; b++) {\n    d.push({\n        col_type: 'big_blank_block'\n    });\n}\n\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[]"},{"last_chapter_rule":"js:\nvar html = getResCode();\nvar list = parseDomForArray(html, '.playlist&&ul&&li');\nvar title = parseDomForHtml(list[list.length-1],'a&&Text');\nsetResult('最新：'+title);","pageList":[],"title":"88听书","author":"","version":0,"url":"https://www.88tingshu.com/sort/fyAll/fypage.html;get;utf-8;{User-Agent@Windows}","col_type":"movie_1_vertical_pic","class_name":"玄幻&都市&灵异&竞技&军事&鬼故事","class_url":"xuanhuan&dushi&lingyi&jingji&junshi&guigushi","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar res = {};\nvar d = [];\n\nvar html = getResCode();\n\n//列表\nvar list = parseDomForArray(html, '.list-works&&li');\n\nfor (var i = 0; i < list.length; i++) {\n    d.push({\n        title: '《'+parseDomForHtml(list[i], '.list-book-dt&&a&&Text')+'》'+'\\n'+parseDomForHtml(list[i], '.list-book-cs&&Text').split('更新')[0],\n      desc:parseDomForHtml(list[i], '.list-book-cs&&.book-author,-1&&Text').replace('更新情况： ',''),\n        pic_url: parseDom(list[i], 'img&&data-original'),\n        url: parseDom(list[i], 'a&&href')+\"#immersiveTheme#\"\n    });\n}\n\nres.data = d;\nsetHomeResult(res);","searchFind":"js:\nvar res = {};\nvar d = [];\n\nvar html = getResCode();\n\n//列表\nvar list = parseDomForArray(html, '.list-works&&li');\n\nfor (var i = 0; i < list.length; i++) {\n    d.push({\n        title: '《'+parseDomForHtml(list[i], '.list-book-dt&&a&&Text')+'》'+'\\n'+parseDomForHtml(list[i], '.list-book-cs&&Text').split('更新')[0],\n      desc:parseDomForHtml(list[i], '.list-book-cs&&.book-author,-1&&Text').replace('更新情况： ',''),\n        pic_url: parseDom(list[i], 'img&&data-original'),\n        url: parseDom(list[i], 'a&&href')+\"#immersiveTheme#\"\n    });\n}\n\nres.data = d;\nsetHomeResult(res);","search_url":"https://www.88tingshu.com/search.html?searchtype=name&searchword=**&page=fypage","titleColor":"","group":"③听、书📻","detail_col_type":"movie_1","detail_find_rule":"js:\nvar res = {};\nvar d = [];\nvar html = getResCode();\n\nvar _x5 = $.toString(() => {\n    fba.log(fba.getUrls())\n    var urls = _getUrls()\n    for (var i in urls) {\n        if (urls[i].match(/\\.mp3|\\.m4a/)) {\n            fy_bridge_app.log(urls[i])\n             return urls[i]\n        }\n    }\n});\n//获取简介\nvar des_desc = parseDomForHtml(html, '.book-des&&Text');\n\nd.push({\n\n    //作者、类型等\n    title: parseDomForHtml(html, '.book-info&&dd,1&&Text')+'\\n'+parseDomForHtml(html, '.book-info&&dd,2&&Text')+'\\n'+parseDomForHtml(html, '.book-info&&dd,3&&Text'),\n\n    //描述\n    desc:parseDomForHtml(html, '.book-info&&dd,4&&Text'),\n\n    //图片地址\n    pic_url: parseDom(html, '.book-img&&img&&src'),\n    url: getUrl(),\n    col_type: 'movie_1_vertical_pic_blur'\n});\n\n//限制简介长度\nif (des_desc.length > 110) {\n    des_desc = des_desc.replace(des_desc, des_desc.substring(0, 110) + \"……\");\n}\n\n//输出简介\nd.push({\n    title: des_desc,\n    col_type: 'long_text'\n});\n\nd.push({\n    col_type: 'line'\n});\n\n//选集列表\nvar list = parseDomForArray(html, '.playlist&&ul&&li:has(a)');\n\n//线路名称\nd.push({\n    title: '播放列表(共' + list.length + '集)',\n    url: 'toast://点什么点 (｡•ˇ‸ˇ•｡)',\n    col_type: 'text_center_1'\n});\n\n//选集名称\nfor (var i in list) {\n\n    var title = parseDomForHtml(list[i], 'a&&Text');\n\n    if (title.length > 16) {\n        title = title.substring(0, 16);\n    }\n    d.push({\n        title: title,\n        url:'x5Rule://' + parseDom(list[i], 'a&&href') + '@' +_x5,\n        col_type: parseDomForHtml(list[0], 'a&&Text').length > 3 ? 'text_2' : 'text_3'\n    });\n\n}\n\nfor (var b = 0; b < 5; b++) {\n    d.push({\n        col_type: 'big_blank_block'\n    });\n}\n\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"pc","preRule":"","pages":"[]"},{"last_chapter_rule":"js:\nvar html = getResCode();\nvar list = parseDomForArray(html, '.numlist&&ul&&li');\nvar title = parseDomForHtml(list[list.length-1],'a&&Text');\nsetResult('最新：'+title);","pageList":[],"title":"56听书","author":"","version":0,"url":"https://www.ting56.cc/list/fyAll-fypage.html[firstPage=https://www.ting56.cc/list/fyAll.html];get;utf-8;{User-Agent@Windows}","col_type":"movie_1_vertical_pic","class_name":"玄幻&武侠&都市&言情&科幻&推理&恐怖&惊悚","class_url":"1&2&3&4&5&6&7&8","area_name":"历史&军事&网游&官商&评书&相声&文学","area_url":"9&10&11&12&13&16&32","sort_name":"","year_name":"儿童&穿越&娱乐&笑话&戏曲&其它&百家讲坛","sort_url":"","year_url":"14&28&33&30&31&15&29","find_rule":"js:\nvar res = {};\nvar d = [];\nvar html = getResCode();\n\n//列表\nvar list = parseDomForArray(html, '.clist&&ul&&li');\n\nfor (var i = 0; i < list.length; i++) {\n\n    d.push({\n        title: '《'+parseDomForHtml(list[i], 'li&&Text').split('时间')[0].replace('作者','》\\n作者').replace('播音','\\n播音'),\n      desc:'最后更新'+parseDomForHtml(list[i], 'li&&Text').split('时间')[1].split('推荐')[0],\n        pic_url: parseDom(list[i], 'img&&src'),\n        url: parseDom(list[i], 'a&&href')+\"#immersiveTheme#\"\r\n\n\n    });\n}\n\nres.data = d;\nsetHomeResult(res);","searchFind":"js:\nvar res = {};\nvar d = [];\nvar html = getResCode();\n\n//列表\nvar list = parseDomForArray(html, '.clist&&ul&&li');\n\nfor (var i = 0; i < list.length; i++) {\n\n    d.push({\n        title: '《'+parseDomForHtml(list[i], 'li&&Text').split('时间')[0].replace('作者','》\\n作者').replace('播音','\\n播音'),\n      desc:'最后更新'+parseDomForHtml(list[i], 'li&&Text').split('时间')[1].split('推荐')[0],\n        pic_url: parseDom(list[i], 'img&&src'),\n        url: parseDom(list[i], 'a&&href')+\"#immersiveTheme#\"\r\n\n\n    });\n}\n\nres.data = d;\nsetHomeResult(res);","search_url":"https://www.ting56.cc/search.php?searchword=**","titleColor":"","group":"③听、书📻","detail_col_type":"movie_1","detail_find_rule":"js:\nvar res = {};\nvar d = [];\nvar html = getResCode();\n\nvar _x5 = $.toString(() => {\n    fba.log(fba.getUrls())\n    var urls = _getUrls()\n    for (var i in urls) {\n        if (!urls[i].includes(\"url=\") &&urls[i].match(/\\.mp3|\\.m4a/)) {\n            fy_bridge_app.log(urls[i])\n            return urls[i]\n        }\n    }\n});\n//获取简介\nvar des_desc = '简介：' + parseDomForHtml(html, '.introbox&&Text');\n\nd.push({\n\n    //作者、类型等\n    title: '类型'+parseDomForHtml(html, '.conlist&&Text').split('类型')[1].split('人气')[0].replace('更新','\\n更新').replace('播音','\\n播音'),\n\n    //描述\n    desc:'状态'+ parseDomForHtml(html, '.conlist&&Text').split('状态')[1].split('推荐')[0],\n\n    //图片地址\n    pic_url: parseDom(html, '.conlist&&img&&src'),\n    url: getUrl(),\n    col_type: 'movie_1_vertical_pic_blur'\n});\n\n//限制简介长度\nif (des_desc.length > 110) {\n    des_desc = des_desc.replace(des_desc, des_desc.substring(0, 110) + \"……\");\n}\n\n//输出简介\nd.push({\n    title: des_desc,\n    col_type: 'long_text'\n});\n\nd.push({\n    col_type: 'line'\n});\n\n//选集列表\nvar list = parseDomForArray(html, '.numlist&&ul&&li:has(a)');\n\n//线路名称\nd.push({\n    title: '播放列表(共' + list.length + '集)',\n    url: 'toast://点什么点 (｡•ˇ‸ˇ•｡)',\n    col_type: 'text_center_1'\n});\n\n//选集名称\nfor (var i in list) {\n\n    var title = parseDomForHtml(list[i], 'a&&Text');\n\n    if (title.length > 16) {\n        title = title.substring(0, 16);\n    }\n    d.push({\n        title: title,\n        url: parseDom(list[i], 'a&&href') + `@lazyRule=.js:base64Decode(request(input).split('now')[1].split('\\(')[1].split('\\)')[0])`,\n  //url: 'x5Rule://' + parseDom(list[i], 'a&&href') + '@' +_x5,\n        col_type: parseDomForHtml(list[0], 'a&&Text').length > 3 ? 'text_2' : 'text_3'\n    });\n\n}\n\nfor (var b = 0; b < 5; b++) {\n    d.push({\n        col_type: 'big_blank_block'\n    });\n}\n\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"pc","preRule":"","pages":"[]"},{"last_chapter_rule":"js:\nvar html = getResCode();\nvar list = parseDomForArray(html, '.playlist&&ul&&li');\nvar title = parseDomForHtml(list[list.length-1],'a&&Text');\nsetResult('最新：'+title);","pageList":[],"title":"i275听书","author":"","version":0,"url":"https://www.i275.com/category/fyclass/fyarea.html?page=fypage[firstPage=https://www.i275.com/category/fyclass/fyarea.html];get;utf-8;{User-Agent@Windows}","col_type":"movie_1_vertical_pic","class_name":"玄幻奇幻&都市言情&宫斗女频&官场商战&武侠仙侠&刑侦推理&探险科幻&重生穿越&恐怖惊悚&文学历史&两性情感&网游竞技","class_url":"6&7&8&9&10&11&12&13&14&15&49&50","area_name":"新书&人气&完结&连载&更新","area_url":"1&3&5&4&2","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar res = {};\nvar d = [];\n\nvar html = getResCode();\n\n//列表\nvar list = parseDomForArray(html, '#yun-list&&li');\n\nfor (var i = 0; i < list.length; i++) {\n    d.push({\n        title: parseDomForHtml(list[i], '.text&&p,0&&Text'),\n      desc:parseDomForHtml(list[i], '.text--p&&Text'),\n     content: parseDomForHtml(list[i], '.other&&Text'),\n        pic_url: parseDom(list[i], 'img&&data-original'),\n        url: parseDom(list[i], 'a&&href')+\"#immersiveTheme#\"\n    });\n}\n\nres.data = d;\nsetHomeResult(res);","searchFind":"js:\nvar res = {};\nvar d = [];\n\nvar html = getResCode();\n\n//列表\nvar list = parseDomForArray(html, '#yun-list&&li');\n\nfor (var i = 0; i < list.length; i++) {\n    d.push({\n        title: parseDomForHtml(list[i], '.text&&p,0&&Text'),\n      desc:parseDomForHtml(list[i], '.text--p&&Text'),\n     content: parseDomForHtml(list[i], '.other&&Text'),\n        pic_url: parseDom(list[i], 'img&&data-original'),\n        url: parseDom(list[i], 'a&&href')+\"#immersiveTheme#\"\n    });\n}\n\nres.data = d;\nsetHomeResult(res);","search_url":"https://www.i275.com/pc/index/search.html?keyword=**","titleColor":"","group":"③听、书📻","detail_col_type":"movie_1","detail_find_rule":"js:\nvar res = {};\nvar d = [];\nvar html = getResCode();\n\nvar _x5 = $.toString(() => {\n    fba.log(fba.getUrls())\n    var urls = _getUrls()\n    for (var i in urls) {\n        if (urls[i].match(/\\.mp3|\\.m4a/)) {\n            fy_bridge_app.log(urls[i])\n             return urls[i]\n        }\n    }\n});\n//获取简介\nvar des_desc = parseDomForHtml(html, '.info&&dd,-1&&Text');\n\nd.push({\n    //作者、类型等\n    title: parseDomForHtml(html, '.info&&.fn-right,0&&Text').replace('󰃋','')+'\\n'+parseDomForHtml(html, '.info&&.fn-right,1&&Text').replace('󰃍','')+'\\n'+parseDomForHtml(html, '.info&&.fn-left,2&&Text').replace('󰃋',''),\n    desc:parseDomForHtml(html, '.info&&.fn-left,0&&Text').replace('㐵',''),\n    pic_url: parseDom(html, '.detail-pic&&img&&src'),\n    url: getUrl(),\n    col_type: 'movie_1_vertical_pic_blur'\n});\n\n//限制简介长度\nif (des_desc.length > 110) {\n    des_desc = des_desc.replace(des_desc, des_desc.substring(0, 110) + \"……\");\n}\n\n//输出简介\nd.push({\n    title: des_desc,\n    col_type: 'long_text'\n});\n\nd.push({\n    col_type: 'line'\n});\n\n//选集列表\nvar list = parseDomForArray(html, '.playlist&&ul&&li:has(a)');\n\n//线路名称\nd.push({\n    title: '播放列表(共' + list.length + '集)',\n    url: 'toast://点什么点 (｡•ˇ‸ˇ•｡)',\n    col_type: 'text_center_1'\n});\n\n//选集名称\nfor (var i in list) {\n\n    var title = parseDomForHtml(list[i], 'a&&Text');\n\n    if (title.length > 16) {\n        title = title.substring(0, 16);\n    }\n    d.push({\n        title: title,\n        url:'x5Rule://' + parseDom(list[i], 'a&&href') + '@' +_x5,\n        col_type: parseDomForHtml(list[0], 'a&&Text').length > 3 ? 'text_2' : 'text_3'\n    });\n\n}\n\nfor (var b = 0; b < 5; b++) {\n    d.push({\n        col_type: 'big_blank_block'\n    });\n}\n\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"movie_1","sdetail_find_rule":"**","ua":"pc","preRule":"","pages":"[]"},{"last_chapter_rule":"","pageList":[],"title":"听中国𝔥","author":"Hood&Zruiry","version":2,"url":"https://www.tingchina.com/fyAll_fypage.htm;get;gbk","col_type":"movie_3_marquee","class_name":"玄幻奇幻&鬼故事小说&网络热门&都市言情&历史军事&经典纪实&官场商战&通俗文学&刑侦推理&科幻有声&武侠小说&人物传记","class_url":"yousheng/lei_135&yousheng/lei_129&yousheng/lei_146&yousheng/lei_125&yousheng/lei_130&yousheng/lei_127&yousheng/lei_126&yousheng/lei_132&yousheng/lei_134&yousheng/lei_128&yousheng/lei_133&yousheng/lei_131","area_name":"单田芳评书&田连元评书&袁阔成评书&连丽如评书&张少佐评书&孙一评书&田战义评书&粤语评书&其他评书","area_url":"pingshu/lei_136&pingshu/lei_141&pingshu/lei_143&pingshu/lei_137&pingshu/lei_145&pingshu/lei_140&pingshu/lei_142&pingshu/lei_144&pingshu/lei_139","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\r\nvar html = getResCode();\n\n//列表\nvar list = parseDomForArray(html,'.zimulist&&dl');\n\nfor(var i=0;i<list.length;i++){\n\nd.push({\n\ntitle: parseDomForHtml(list[i],'a,1&&Text').replace(/《|》/g,''),\npic_url: parseDom(list[i],'img&&src'),\ndesc: parseDomForHtml(list[i],'dd--a&&Text').replace('[','共').replace(']',''),\nurl: parseDom(list[i],'a&&href').replace(/lei.*htm\\//,'')\n  });\n}\n\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":".main02&&ul&&li;\na&&Text;\na&&href.js:'https://www.tingchina.com/'+input","search_url":"https://www.tingchina.com/search1.asp?mainlei=0&lei=0&keyword=**;get;gbk","titleColor":"#ff228be6","group":"③听、书📻","detail_col_type":"movie_1","detail_find_rule":"js:\nvar res = {};\nvar d = [];\nvar html = getResCode();\n\n//全部选集列表\nvar conts = parseDomForArray(html, 'body&&.list');\n\n//获取简介\nif(MY_URL.indexOf('yousheng')!=-1){\nvar des_desc = parseDomForHtml(html,'.book02--strong&&Text');\n}else{\nvar des_desc = parseDomForHtml(html,'.book02&&Text');\n}\n\nd.push({\r\n\n//作者、类型等\ntitle: parseDomForHtml(html,'.book01&&li,4&&Text')+'\\n'+parseDomForHtml(html,'.book01&&li,5&&Text')+'\\n'+parseDomForHtml(html,'.book01&&li,6&&Text'),\n\n//描述\r\ndesc: parseDomForHtml(html, '.book01&&li,7&&Text'),\n\n//图片地址\npic_url: parseDom(html, '.book01&&img&&src'),\r\nurl: getUrl(),\r\ncol_type: 'movie_1_vertical_pic'});\n\n//限制简介长度\nif (des_desc.length > 110) {\ndes_desc = des_desc.replace(des_desc, des_desc.substring(0, 110) + \"……\");\n}\n\n//输出简介\nd.push({\ntitle: des_desc.replace(/ /g,''),\ncol_type: 'long_text'});\n\nd.push({col_type:'line'});\n\n//选集列表\nvar list=parseDomForArray(html, 'body&&.list&&ul&&a');\n\n//线路名称\nd.push({\ntitle:'播放列表(共' + list.length+ '集)',\nurl:'toast://点什么点 (｡•ˇ‸ˇ•｡)',\ncol_type: 'text_center_1'});\n\nvar lazy = `@lazyRule=.js: var html = fetch(input, {headers:{'content-type':'charst=gb2312'}});var js = fetch('https://img.tingchina.com/play/h5_jsonp.asp', {headers:{'referer':'` + MY_URL + `'}});'https://t3344.tingchina.com' + html.match(/fileUrl= \\\"(.*?)\\\"/)[1] + '?' + js.match(/(key=.*?)\\\"/)[1]`;\n\n//选集名称\nfor(var i in list){\nd.push({\ntitle: parseDomForHtml(list[i],'a&&Text'),\nurl: parseDom(list[i],'a&&href').replace(/disp.*htm\\//,'') + lazy,\ncol_type: 'text_2'});\n}\n\nfor(var b=0;b<5;b++)\n{\n   d.push({\n    col_type: 'big_blank_block'});\n}\n\nres.data = d;\nsetHomeResult(res);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[]"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"正文","path":"content","rule":"var d = [];\nd.push({\n    col_type: \"text_center_1\",\n    title: \"““””<big>\" + parseDomForHtml(getResCode(), \"#nr_title&&Text\") + \"</big>\",\n});\nd.push({\n    title: parseDomForHtml(getResCode(), \"#nr&&Html\"),\n    col_type: 'rich_text',\n    extra: {\n        textSize: 18\n    }\n});\nsetResult(d);"}],"title":"九桃小说","author":"ᝰꫛꫀꪝ藍凋","version":1,"url":"https://www.9txs.org/library/fyarea_fyclass_fysort_fypage.html","col_type":"movie_3","class_name":"玄幻奇幻&武侠修真&都市生活&历史军事&游戏竞技&科幻未来&悬疑灵异&二次元&经典短篇&古代言情&现代言情&幻想奇缘&浪漫青春&网络情缘&科幻空间&恐怖灵异&N次元&言情美文&其他类型","class_url":"1&2&3&4&5&6&7&8&9&10&11&12&13&14&15&16&17&18&19","area_name":"总点击&月点击&周点击&日点击&总推荐&月推荐&周推荐&日推荐&总收藏&字数&入库","area_url":"allvisit&monthvisit&weekvisit&dayvisit&allvote&monthvote&weekvote&dayvote&goodnum&size&postdate","sort_name":"全部&连载&完本","year_name":"","sort_url":"0&1&2","year_url":"","find_rule":"js:\nvar d = [];\nlet arr = pdfa(getResCode(), \".library&&li\");\n\nfor (let i = 0; i < arr.length; i++) {\n    let title = pdfh(arr[i], \"img&&alt\");\n    let pic_url = parseDom(arr[i], \"img&&src\");\n    let url = parseDom(arr[i], \"a&&href\");\n    let desc = pdfh(arr[i], \"span&&Text\");\n    d.push({\n        title: title,\n        url: url,\n        desc: desc,\n        pic_url: pic_url\n    });\n}\n\nsetResult(d);","searchFind":"js:var res = {};var d = [];\n\nvar list = parseDomForArray(getResCode(), '.library&&li');\n\nfor(var i in list){\ntry{\nd.push({\ntitle:parseDomForHtml(list[i],'img&&alt'),\ndesc:parseDomForHtml(list[i],'.layui-badge&&Text+.author&&Text'),\ncontent:parseDomForHtml(list[i],'.intro&&Text'),\npic_url:parseDom(list[i],'img&&src'),\nurl:parseDom(list[i],'a&&href')});\n}catch(e){}\n}\n\nres.data = d;\nsetSearchResult(res);","search_url":"https://so.9txs.org/www/？？searchkey=**&page=fypage;post","titleColor":"#ff148e8e","group":"③听、书📻","detail_col_type":"movie_1","detail_find_rule":"js:\nvar d = [];\nvar html = getResCode();\n\nvar conts = parseDomForArray(fetch(pd(html, '.more&&href')), 'body&&.read');\n\nvar lists = [];\nfor (var i in conts) {\n    lists.push(parseDomForArray(conts[i], '.read&&dl:not(:contains(最新章节)) a'))\n}\n\nd.push({\n    title: parseDomForHtml(html, '.detail&&Text'),\n    desc: parseDomForHtml(html, '.intro&&Text'),\n    pic_url: parseDom(html, '.detail&&img&&src'),\n    url: MY_URL,\n    col_type: 'movie_1_vertical_pic'\n});\n\nd.push({\n    title: (getVar('shsort') == '1') ? '““””<b><span style=\"color: #FF0000\">目录逆序</span></b>' : '““””<b><span style=\"color: #1aad19\">目录正序</span></b>',\n    url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\n    col_type: 'text_center_1'\n})\n\nfunction setLists(lists, index) {\n    var list = lists[index];\n    d.push({\n        col_type: 'big_blank_block'\n    });\n    d.push({\n        col_type: 'big_blank_block'\n    });\n    if (getVar('shsort') == '1') {\n        for (var j = list.length - 1; j >= 0; j--) {\n            var jm = parseDomForHtml(list[j], 'Text');\n            d.push({\n                title: jm,\n                url: parseDom(list[j], 'a&&href') + \"#autoPage#\" + `@rule=js:` + $.toString(() => {\n                    let d = [];\n                    var des_title = parseDomForHtml(getResCode(), 'h1&&Text');\n                    d.push({\n                        title: '<b>‘‘' + des_title + '’’</b>',\n                        col_type: 'text_center_1'\n                    });\n                    let cont = parseDomForArray(getResCode(), '#content&&p,1:-1');\n                    let html = cont.map(it => '　　' + parseDomForHtml(it, 'p&&Html')).join(\"<br><br>\");\n                    d.push({\n                        title: html,\n                        col_type: \"rich_text\",\n                        extra: {\n                            textSize: 18,\n                            click: true\n                        }\n                    });\n                    setResult(d);\n                }),\n                col_type: jm.length > 5 ? 'text_1' : 'text_1',\n            });\n        }\n    } else {\n        for (var j = 0; j < list.length; j++) {\n            var jm = parseDomForHtml(list[j], 'Text');\n            d.push({\n                title: jm,\n                url: parseDom(list[j], 'a&&href') + \"#autoPage#\" + `@rule=js:` + $.toString(() => {\n                    let d = [];\n                    var des_title = parseDomForHtml(getResCode(), 'h1&&Text');\n                    d.push({\n                        title: '<b>‘‘' + des_title + '’’</b>',\n                        col_type: 'text_center_1'\n                    });\n                    let cont = parseDomForArray(getResCode(), '#content&&p,1:-1');\n                    let html = cont.map(it => '　　' + parseDomForHtml(it, 'p&&Html')).join(\"<br><br>\");\n                    d.push({\n                        title: html,\n                        col_type: \"rich_text\",\n                        extra: {\n                            textSize: 18,\n                            click: true\n                        }\n                    });\n                    setResult(d);\n                }),\n                col_type: jm.length > 5 ? 'text_1' : 'text_1',\n            });\n        }\n    }\n}\nsetLists(lists, getVar(MY_URL, '0'));\n\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"pc","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"正文\",\"path\":\"content\",\"rule\":\"var d = [];\\nd.push({\\n    col_type: \\\"text_center_1\\\",\\n    title: \\\"““””<big>\\\" + parseDomForHtml(getResCode(), \\\"#nr_title&&Text\\\") + \\\"</big>\\\",\\n});\\nd.push({\\n    title: parseDomForHtml(getResCode(), \\\"#nr&&Html\\\"),\\n    col_type: 'rich_text',\\n    extra: {\\n        textSize: 18\\n    }\\n});\\nsetResult(d);\"}]","icon":"https://m.9txs.org/favicon.ico"},{"last_chapter_rule":"","pageList":[{"col_type":"text_1","name":"ClassTab","path":"ClassTab","rule":"function ClassTab(classArray, params) {\n    Object.assign(this, params)\n    this.arr = classArray.map(v => this.init(v))\n    this.sign = '$' + MY_RULE.title + '_' + (this.name || '') + '_'\n    this.color = this.color || '#12b668'\n    this.boundary = this.boundary || 'blank_block'\n}\nClassTab.prototype = {\n    constructor: ClassTab,\n    load(el) {\n        let folded = getVar('fold_' + this.sign, '')\n        if (this.fold) el.push({\n            title: '““””<span style=\"color:#049eff\">' + (folded ? '▶' : '▼'),\n            url: $('#noLoading#').lazyRule((sign, folded) => {\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\n                refreshPage(false)\n                return 'hiker://empty'\n            }, this.sign, folded),\n            col_type: 'scroll_button'\n        })\n        let arr = folded ? [this.arr[0]] : this.arr\n        arr.forEach((v) => {\n            let { id, class_name, class_url } = v,\n                selected = JSON.stringify(this.getClass(id))\n            class_name.forEach((name, i) => {\n                let url = class_url[i],\n                    now = JSON.stringify({ name: name, url: url })\n                el.push({\n                    title: (selected == now ? '““””<span style=\"color:' + this.color + '\"><b>' : '') + name,\n                    url: $('#noLoading#').lazyRule((sign, id, now) => {\n                        putVar(sign + id, now)\n                        putVar(sign, now)\n                        refreshPage(false)\n                        return 'hiker://empty'\n                    }, this.sign, id, now),\n                    col_type: 'scroll_button'\n                })\n            })\n            el.push({ col_type: this.boundary })\n        })\n    },\n    init(classObject) {\n        if (typeof classObject.class_name == 'string')\n            classObject.class_name = classObject.class_name.split('&')\n        if (typeof classObject.class_url == 'string')\n            classObject.class_url = classObject.class_url.split('&')\n        return classObject\n    },\n    push(classObject) {\n        this.arr.push(this.init(classObject))\n    },\n    getClass(id) {\n        let defaultClass = this.arr.find(item => item.id == id)\n        if (defaultClass) defaultClass = JSON.stringify({\n            name: defaultClass.class_name[0],\n            url: defaultClass.class_url[0]\n        })\n        else throw new Error('cannot find id: ' + id + ' in classTab: ' + this.sign)\n        return JSON.parse(getVar(this.sign + id, defaultClass))\n    },\n    getLastClick() {\n        return JSON.parse(getVar(this.sign, '{}'))\n    },\n    setUrl(url) {\n        return url.replace(/\\$\\{([^}]*)\\}/g, (_, id) => this.getClass(id).url)\n    }\n}\n$.exports = ClassTab\n"},{"col_type":"movie_3","name":"首页","path":"indexLoad","rule":"js:\nlet myCollection_el = [],\n    pageNum = parseInt(MY_URL.split('#')[1]),\n    RULE = MY_PARAMS.RULE,\n    fyAll = RULE.url.includes('fyAll'),\n    // 加载ClassTab组件\n    ClassTab = $.require('hiker://page/ClassTab?rule=' + getItem('myCollection')),\n    tabHeader = []\n\nif (RULE.class_name) tabHeader.push({\n    id: fyAll ? 'fyAll' : 'fyclass',\n    class_name: RULE.class_name,\n    class_url: RULE.class_url\n})\nif (RULE.area_name) tabHeader.push({\n    id: fyAll ? 'fyAll' : 'fyarea',\n    class_name: RULE.area_name,\n    class_url: RULE.area_url\n})\nif (RULE.year_name) tabHeader.push({\n    id: fyAll ? 'fyAll' : 'fyyear',\n    class_name: RULE.year_name,\n    class_url: RULE.year_url\n})\nif (RULE.sort_name) tabHeader.push({\n    id: fyAll ? 'fyAll' : 'fysort',\n    class_name: RULE.sort_name,\n    class_url: RULE.sort_url\n})\ntabHeader = new ClassTab(tabHeader, { name: RULE.title })\nif (pageNum == 1) {\n    addListener('onClose', 'clearVar(\"myCollection-searchMode\")')\n    putVar('myCollection-searchMode', RULE.title)\n    tabHeader.load(myCollection_el)\n    if (RULE.search_url) myCollection_el.push({\n        title: \"搜索\",\n        desc: \"搜你想要的...\",\n        url: '\"hiker://page/singleSearch?keyword=\"+input+\"&page=fypage\"',\n        extra: { rule: getItem('myCollection'), RULE: RULE },\n        col_type: \"input\",\n    })\n}\n// 处理MY_URL和MY_RULE\nMY_RULE.ua = RULE.ua\nMY_RULE.title = RULE.title\nMY_RULE.col_type = RULE.col_type\nMY_RULE.detail_col_type = RULE.detail_col_type\nMY_RULE.find_rule = RULE.find_rule\nMY_RULE.detail_find_rule = RULE.detail_find_rule\nMY_RULE.preRule = RULE.preRule\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\nMY_RULE.params = {}\n\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nvar { MY_URL, MY_URL_Options } = urlParse(RULE.url, {}, pageNum, (url) => {\n    url[0] = fyAll ? url[0].replace(/fyAll/g, '$${fyAll}') : url[0].replace(/fy(class|area|year|sort)/g, '$${fy$1}')\n    url[0] = tabHeader.setUrl(url[0])\n}),\n    indexHtml = fetch(MY_URL, MY_URL_Options)\nMY_RULE.url = MY_URL\nMY_RULE.urlHeaders = MY_URL_Options.headers\n// 正文解析\nif (pageNum == 1) eval(MY_RULE.preRule)\nif (MY_RULE.find_rule.startsWith('js:')) {\n    function getUrl() {\n        return MY_URL\n    }\n\n    function getResCode() {\n        return indexHtml\n    }\n\n    function setResult(el, param1, param2, param3) {\n        param1 = CALLBACK_KEY\n        param2 = MY_RULE\n        param3 = MY_TYPE\n        if (Array.isArray(el.data)) el = el.data\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\n            let MY__RULE = Object.assign({}, MY_RULE)\n            v.col_type = v.col_type || MY_RULE.col_type\n\n            if (!v.url) {\n                return v\n            } else if (v.url.includes('@rule=')) {\n                let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                v.url = url\n                MY__RULE.detail_find_rule = rule\n                MY__RULE.detail_col_type = MY_RULE.col_type\n            } else if (v.url.startsWith('hiker://page/')) {\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\n                    return v\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?(.*))?$/),\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\n                v.url = subUrl ? subUrl.slice(4).replace(/？？/g, '?').replace(/＆＆/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\n                MY__RULE.detail_find_rule = subPage.rule\n                MY__RULE.detail_col_type = subPage.col_type\n                MY__RULE.params = v.extra || {}\n            } else if (v.url.includes('@lazyRule=')) {\n                v.url = v.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                return v\n            } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\n            v.extra = { url: v.url, RULE: MY__RULE, pageTitle: v.title }\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\n            return v\n        }))\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\n    }\n    setHomeResult = setResult\n    setSearchResult = setResult\n\n    eval(MY_RULE.find_rule.slice(3))\n} else {\n    let findRule = MY_RULE.find_rule.split(';')\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\n        let [title, img, desc, url] = findRule.map((v, i) => {\n                try {\n                    if (v == '*') return ''\n                    else v = (i == 1 || i == 3) ?\n                        parseDom(data, v) :\n                        parseDomForHtml(data, v)\n                    if (i != 3) v = runCode(v)\n                    return v\n                } catch (e) { return '' }\n            }),\n            res = {\n                title: title,\n                url: url,\n                desc: desc,\n                img: img,\n                col_type: MY_RULE.col_type\n            }\n        if (res.url) {\n            if (res.url.includes('@lazyRule=')) {\n                res.url = res.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n            } else if (MY_RULE.detail_find_rule) {\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title }\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\n            }\n        }\n        myCollection_el.push(res)\n    })\n    setResult(myCollection_el)\n}\n"},{"col_type":"movie_3","name":"详情","path":"detailLoad","rule":"js:\nlet myCollection_el = []\n\n// 处理MY_URL和MY_RULE\nlet RULE = MY_PARAMS.RULE\nMY_RULE.ua = RULE.ua\nMY_RULE.title = RULE.title\nMY_RULE.col_type = RULE.detail_col_type\nMY_RULE.find_rule = RULE.detail_find_rule\nMY_RULE.preRule = RULE.preRule\nMY_RULE.pageList = RULE.pageList\nMY_RULE.pages = RULE.pages\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\nMY_RULE.params = RULE.params\n\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nvar { MY_URL, MY_URL_Options } = urlParse(MY_PARAMS.url, RULE.urlHeaders, 1),\n    indexHtml = fetch(MY_URL, MY_URL_Options)\nMY_RULE.url = MY_URL\nMY_RULE.urlHeaders = MY_URL_Options.headers\n// 解析正文\nif (MY_PARAMS.pageTitle) setPageTitle(MY_PARAMS.pageTitle)\neval(MY_RULE.preRule)\nsetLastChapterRule(MY_RULE.last_chapter_rule)\nMY_PARAMS = MY_RULE.params\nif (MY_RULE.find_rule.startsWith('js:')) {\n    function getUrl() {\n        return MY_URL\n    }\n\n    function getResCode() {\n        return indexHtml\n    }\n\n    function setResult(el, param1, param2, param3) {\n        param1 = CALLBACK_KEY\n        param2 = MY_RULE\n        param3 = MY_TYPE\n        if (Array.isArray(el.data)) el = el.data\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\n            let MY__RULE = Object.assign({}, MY_RULE)\n            v.col_type = v.col_type || MY_RULE.col_type\n\n            if (!v.url) {\n                return v\n            } else if (v.url.includes('@rule=')) {\n                let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                v.url = url\n                MY__RULE.detail_find_rule = rule\n                MY__RULE.detail_col_type = MY_RULE.col_type\n            } else if (v.url.startsWith('hiker://page/')) {\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\n                    return v\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?(.*))?$/),\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\n                v.url = subUrl ? subUrl.slice(4).replace(/？？/g, '?').replace(/＆＆/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\n                MY__RULE.detail_find_rule = subPage.rule\n                MY__RULE.detail_col_type = subPage.col_type\n                MY__RULE.params = v.extra || {}\n            } else if (v.url.includes('@lazyRule=')) {\n                v.url = v.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                return v\n            } else { return v }\n            v.extra = { url: v.url, RULE: MY__RULE }\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\n            return v\n        }))\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\n    }\n    setHomeResult = setResult\n    setSearchResult = setResult\n\n    eval(MY_RULE.find_rule.slice(3))\n} else {\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^(.*?)(?:==>(.*))?$/)\n    findRule = findRule.split(';')\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\n        let [title, img, desc, url] = findRule.map((v, i) => {\n                try {\n                    if (v == '*') return ''\n                    else v = (i == 1 || i == 3) ?\n                        parseDom(data, v) :\n                        parseDomForHtml(data, v)\n                    if (i != 3) v = runCode(v)\n                    return v\n                } catch (e) { return '' }\n            }),\n            res = {\n                title: title,\n                url: url,\n                desc: desc,\n                img: img,\n                col_type: MY_RULE.col_type\n            }\n        if (res.url) {\n            if (res.url.includes('@lazyRule=')) {\n                res.url = res.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n            } else if (detailFindRule) {\n                res.extra = { url: url, RULE: Object.assign({}, MY_RULE, { detail_find_rule: detailFindRule }) }\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\n            }\n        }\n        myCollection_el.push(res)\n    })\n    setResult(myCollection_el)\n}\n"},{"col_type":"movie_3","name":"工具集","path":"utility","rule":"$.exports = {\n    dataLoad: function(showAll) {\n        //检查间隔，默认一天\n        let min = 60 * 24 * 1,\n            data = [],\n            time = parseInt(readFile('updatetime')) || 0,\n            now = new Date().getTime()\n        if (now - time > 1000 * 60 * min) {\n            log('更新了数据')\n            // 获取远程数据\n            let url = getItem('remoteUrl')\n            try {\n                data = fetch(url)\n                if (url.startsWith('hiker://page/'))\n                    data = JSON.parse(data).rule\n                data = JSON.parse(data)\n            } catch (e) {\n                data = []\n            }\n            data = data.filter((v) => { return v.title != getItem('myCollection') && !v.author.includes('轻合集生成器') })\n            saveFile('dataCache', JSON.stringify(data))\n            saveFile('updatetime', '' + now)\n        } else {\n            log('没有更新数据')\n            data = JSON.parse(readFile('dataCache'))\n        }\n        // 写入自定义数据\n        let customData = JSON.parse(readFile('customData') || '[]'),\n            rewriteData = []\n        customData = customData.reduce((self, v) => {\n            let index = data.findIndex((vv) => v.title == vv.title)\n            if (index >= 0) {\n                self.push(v)\n                let rule = data.splice(index, 1)[0]\n                if(showAll || v.visible)\n                    rewriteData.push(Object.assign(rule, v))\n            }\n            return self\n        }, [])\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\n        saveFile('customData', JSON.stringify(customData))\n        return rewriteData.concat(data)\n    },\n    runCode: function(rule) {\n        try {\n            let [input, code] = rule.split('.js:')\n            return code ? eval(code) : rule\n        } catch (e) { return rule }\n    },\n    urlParse: function(url, headers, pageNum, func) {\n        url = url.split(';').map((v) => v.replace(/；；/g, ';'))\n        if (func) func(url)\n        url[0] = url[0].replace(/fypage(?:@(-?\\d+)@)?(?:\\*(\\d+)@)?/, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\n        url[0] = /^(.*?)(?:\\[firstPage=(.*?)\\])?$/.exec(url[0])\n        url[0] = runCode(url[0][2] && pageNum == 1 ? url[0][2] : url[0][1])\n        let options = { headers: headers, method: url[1] }\n        // post方法时转换参数\n        if (/^post$/i.test(options['method'])) {\n            let [oriUrl, body] = url[0].split('?')\n            url[0] = oriUrl.replace(/？？/g, '?')\n            if (body.startsWith('JsonBody=')) body = body.slice(9)\n            options['body'] = body\n        }\n        if (url[2]) options.headers['Content-Type'] = 'text/plain;charst=' + url[2]\n        if (url[3]) url[3].match(/{(.*)}/)[1].split('&&').forEach((v) => {\n            let [key, value] = v.split('@')\n            options.headers[key] = runCode(value)\n        })\n        // 添加全局UA\n        if (!options.headers['User-Agent']) {\n            if (MY_RULE.ua == 'pc')\n                options.headers['User-Agent'] = PC_UA\n            else if (MY_RULE.ua == 'mobile')\n                options.headers['User-Agent'] = MOBILE_UA\n        }\n        return { MY_URL: url[0], MY_URL_Options: options }\n    }\n}\n"},{"col_type":"movie_1_vertical_pic","name":"单搜","path":"singleSearch","rule":"js:\nlet myCollection_el = [],\n    RULE = MY_PARAMS.RULE,\n    keyword = getParam('keyword'),\n    pageNum = parseInt(getParam('page'))\n\n// 处理MY_URL和MY_RULE\nMY_RULE.ua = RULE.ua\nMY_RULE.title = RULE.title\nMY_RULE.col_type = RULE.col_type\nMY_RULE.detail_col_type = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_col_type : RULE.sdetail_col_type\nMY_RULE.find_rule = RULE.searchFind\nMY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\nMY_RULE.preRule = RULE.preRule\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\nMY_RULE.params = {}\n\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nvar { MY_URL, MY_URL_Options } = urlParse(RULE.search_url, {}, pageNum, (url) => {\n    url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\*\\*/g, encodeStr(keyword, url[2]))\n}),\n    indexHtml = fetch(MY_URL, MY_URL_Options)\nMY_RULE.url = MY_URL\nMY_RULE.urlHeaders = MY_URL_Options.headers\n// 正文解析\nif (pageNum == 1) setPageTitle('“' + keyword + '”的搜索结果')\nif (MY_RULE.find_rule.startsWith('js:')) {\n    function getUrl() {\n        return MY_URL\n    }\n\n    function getResCode() {\n        return indexHtml\n    }\n\n    function setResult(el, param1, param2, param3) {\n        param1 = CALLBACK_KEY\n        param2 = MY_RULE\n        param3 = MY_TYPE\n        if (Array.isArray(el.data)) el = el.data\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\n            let MY__RULE = Object.assign({}, MY_RULE),\n                subTitle = v.title\n            v.title += '““””<br>' + (RULE.title.fontcolor('#12b668') + ' ▪ ' + (v.desc || '').fontcolor('#666666')).small()\n            v.desc = v.content || ''\n            if(!v.img) v.col_type = 'text_1'\n            delete v.content\n\n            if (!v.url) {\n                return v\n            } else if (v.url.includes('@rule=')) {\n                let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                v.url = url\n                MY__RULE.detail_find_rule = rule\n                MY__RULE.detail_col_type = MY_RULE.col_type\n            } else if (v.url.startsWith('hiker://page/')) {\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\n                    return v\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?(.*))?$/),\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\n                v.url = subUrl ? subUrl.slice(4).replace(/？？/g, '?').replace(/＆＆/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\n                MY__RULE.detail_find_rule = subPage.rule\n                MY__RULE.detail_col_type = subPage.col_type\n                MY__RULE.params = v.extra || {}\n            } else if (v.url.includes('@lazyRule=')) {\n                v.url = v.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                return v\n            } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\n            v.extra = { url: v.url, RULE: MY__RULE, pageTitle: subTitle }\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\n            return v\n        }))\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\n    }\n    setHomeResult = setResult\n    setSearchResult = setResult\n\n    eval(MY_RULE.find_rule.slice(3))\n} else {\n    let findRule = MY_RULE.find_rule.split(';')\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\n        let [title, url, desc, content, img] = findRule.map((v, i) => {\n                try {\n                    if (v == '*') return ''\n                    else v = (i == 1 || i == 4) ?\n                        parseDom(data, v) :\n                        parseDomForHtml(data, v)\n                    if (i != 1) v = runCode(v)\n                    return v\n                } catch (e) { return '' }\n            }),\n            res = {\n                title: title + '““””<br>' + (RULE.title.fontcolor('#12b668') + ' ▪ ' + desc.fontcolor('#666666')).small(),\n                url: url,\n                desc: content,\n                img: img\n            }\n        if(!res.img) res.col_type = 'text_1'\n        if (res.url) {\n            if (res.url.includes('@lazyRule=')) {\n                res.url = res.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n            } else if (MY_RULE.detail_find_rule) {\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title }\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\n            }\n        }\n        myCollection_el.push(res)\n    })\n    setResult(myCollection_el)\n}\n"},{"col_type":"icon_2_round","name":"设置","path":"Config","rule":"js:\naddListener('onClose', 'clearVar(\"myCollection-sortFlag\");refreshPage()')\nsetPageTitle('⚙ 轻合集设置 ⚙')\nlet el = [{\n        title: '清除缓存,立即更新 <small> （基于远程仓库,不要频繁点击）',\n        url: $().lazyRule(() => {\n            deleteFile('updatetime')\n            back(true)\n            return 'toast://已更新'\n        }),\n        img: 'hiker://images/icon1',\n        col_type: 'avatar'\n    }],\n    searchThd = parseInt(readFile('searchThd') || '5'),\n    newWindow = readFile('newWindow'),\n    editMode = getVar('myCollection-editMode', '启用/禁用')\n\nel.push({\n    title: '🔍 搜索模式: ' + (searchThd == 0 ? '列' : '聚' + searchThd),\n    url: $(['列表搜索', '聚合搜索'], 1).select((searchThd) => {\n        if (input == '列表搜索') {\n            saveFile('searchThd', '0')\n            refreshPage()\n        } else {\n            if (searchThd == 0) searchThd = 5\n            return $(searchThd, '输入搜索线程，最好不要超过16').input(() => {\n                saveFile('searchThd', input)\n                refreshPage()\n            })\n        }\n    }, searchThd),\n    col_type: 'text_2'\n}, {\n    title: '🖥 独立首页: ' + (newWindow ? '是' : '否'),\n    url: $('#noLoading#').lazyRule((newWindow) => {\n        saveFile('newWindow', newWindow ? '' : '1')\n        refreshPage()\n        return 'hiker://empty'\n    }, newWindow),\n    col_type: 'text_2'\n})\n\nel.push({ col_type: 'line' }, { col_type: 'big_blank_block' });\n['启用/禁用', '重新排序', '更改图标', '导入海阔'].forEach((v) => {\n    el.push({\n        title: v == editMode ? '““””' + v.bold().fontcolor('#12b668') : v,\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\n            putVar('myCollection-editMode', v)\n            refreshPage(false)\n            return 'hiker://empty'\n        }, v),\n        col_type: 'scroll_button'\n    })\n})\nel.push({\n    title: '恢复出厂数据',\n    url: $('确定要恢复出厂，清楚自定义数据吗？').confirm(() => {\n        deleteFile('customData')\n        refreshPage(false)\n        return 'toast://已恢复出厂数据'\n    }),\n    col_type: 'scroll_button'\n})\n\nconst { dataLoad } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nlet data = dataLoad(true)\nJSON.parse(readFile('customData') || '[]').forEach((v, i) => {\n    let d = { title: v.title, img: data[i].icon }\n    switch (editMode) {\n        case '启用/禁用':\n            d.title = (v.visible ? '🟢 ' : '🔴 ') + d.title\n            d.url = $('#noLoading#').lazyRule((rule) => {\n                let rules = JSON.parse(readFile('customData') || '[]'),\n                    index = rules.findIndex((v) => v.title == rule.title)\n                rules[index].visible = !rules[index].visible\n                saveFile('customData', JSON.stringify(rules))\n                refreshPage(false)\n                return 'hiker://empty'\n            }, v)\n            break\n        case '重新排序':\n            let sortFlag = parseInt(getVar('myCollection-sortFlag', '-1'))\n            d.title = (sortFlag == i ? '🔄 ' : '') + d.title\n            if (sortFlag == -1)\n                d.url = $('#noLoading#').lazyRule((i) => {\n                    putVar('myCollection-sortFlag', i.toString())\n                    refreshPage(false)\n                    return 'toast://选择要移动到的位置'\n                }, i)\n            else\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\n                    let rules = JSON.parse(readFile('customData') || '[]')\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\n                    saveFile('customData', JSON.stringify(rules))\n                    putVar('myCollection-sortFlag', '-1')\n                    refreshPage(false)\n                    return 'hiker://empty'\n                }, sortFlag, i)\n            break\n        case '更改图标':\n            d.url = $(v.icon || '', '输入新图标地址或颜色代码：').input((rule) => {\n                let rules = JSON.parse(readFile('customData') || '[]'),\n                    index = rules.findIndex((v) => v.title == rule.title)\n                if (input)\n                    rules[index].icon = input\n                else\n                    delete rules[index].icon\n                saveFile('customData', JSON.stringify(rules))\n                refreshPage(false)\n                return 'hiker://empty'\n            }, v)\n            break\n        case '导入海阔':\n            d.url = 'rule://' + base64Encode(JSON.stringify(data[i]))\n            break\n    }\n    el.push(d)\n})\nsetResult(el)\n"}],"title":"聚漫💠","author":"小棉袄🌞&永远の明日&Hood&@LoyDgIk&墨非白&子丑寅卯&追剧君&道阻且右&仰望星空&Zruiry&🥗&香情雅&&LY+&团子","version":76,"url":"hiker://empty","col_type":"icon_small_4","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nconst { dataLoad } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nlet el = [{\n    title: ' ' + getItem('myCollection').bold() + ' &nbsp &nbsp ' + '⚙ 轻合集设置 ⚙'.small(),\n    url: 'hiker://page/Config?rule=' + getItem('myCollection'),\n    img: MY_RULE.icon || 'hiker://images/icon1',\n    col_type: 'avatar'\n}, {\n    url: '\"hiker://search?s=\"+input+\"&rule=' + getItem('myCollection') + '\"',\n    desc: '搜你想要的...',\n    title: '搜索',\n    col_type: 'input'\n}]\n\nlet newWindow = readFile('newWindow')\ndataLoad().forEach((v) => {\n    let fypage = /^[^;]*?fypage.*?(;.*)?$/.test(v.url) ? 'fypage' : '1',\n        d = {\n            title: v.title,\n            url: 'hiker://page/indexLoad?#' + fypage + '#noHistory#',\n            img: v.icon,\n            extra: {\n            RULE: v,\n            }\n        }\n    if(newWindow) Object.assign(d.extra, { newWindow: true, windowId: getItem('myCollection') + d.title })\n    el.push(d)\n})\nsetResult(el)","searchFind":"js:\nconst { dataLoad, runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nlet myCollection_el = [],\n    searchThd = parseInt(readFile('searchThd') || '5'),\n    keyword = getParam('keyword'),\n    pageNum = parseInt(getParam('page')),\n    RULES = dataLoad().filter((v) => v.search_url)\nif (searchThd == 0) {\n    myCollection_el.push({\n        title: ('⬇ 选择一个小程序查看' + keyword + '的搜索结果 ⬇').small(),\n        url: 'hiker://empty'\n    })\n    RULES.forEach((v) => myCollection_el.push({\n        title: v.title,\n        url: \"hiker://page/singleSearch?keyword=\" + keyword + \"&page=fypage\",\n        extra: { rule: getItem('myCollection'), RULE: v },\n    }))\n} else if (searchThd > 0) {\n    let searchCount = pageNum * searchThd,\n        searchTag = { title: '⬆ 已搜索了' + searchCount + '个小程序 ⬆\\n⬇ 下面还有' + RULES.slice(searchCount).length + '个小程序 ⬇' }\n    RULES = RULES.slice(searchCount - searchThd, searchCount)\n    if (!RULES.length) setResult([])\n\n    let URLS = RULES.map((RULE) => {\n        MY_RULE.ua = RULE.ua\n        let urlReq = urlParse(RULE.search_url, {}, 1, (url) => {\n            url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\*\\*/g, encodeStr(keyword, url[2]))\n        })\n        return { url: urlReq.MY_URL, options: urlReq.MY_URL_Options }\n    })\n    batchFetch(URLS).forEach((indexHtml, index) => {\n        // 处理MY_URL和MY_RULE\n        let RULE = RULES[index]\n        MY_URL = URLS[index].url\n        MY_RULE.ua = RULE.ua\n        MY_RULE.col_type = RULE.col_type\n        MY_RULE.detail_col_type = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_col_type : RULE.sdetail_col_type\n        MY_RULE.find_rule = RULE.searchFind\n        MY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\n        MY_RULE.preRule = RULE.preRule\n        MY_RULE.pageList = JSON.parse(RULE.pages || '[]')\n        MY_RULE.pages = JSON.stringify(MY_RULE.pageList)\n        MY_RULE.last_chapter_rule = RULE.last_chapter_rule\n        MY_RULE.params = {}\n        MY_RULE.url = MY_URL\n        MY_RULE.urlHeaders = URLS[index].options.headers\n\n        // 正文解析\n        eval(MY_RULE.preRule)\n        if (MY_RULE.find_rule.startsWith('js:')) {\n            function getUrl() {\n                return MY_URL\n            }\n\n            function getResCode() {\n                return indexHtml\n            }\n\n            function setResult(el) {\n                if (Array.isArray(el.data)) el = el.data\n                Array.prototype.push.apply(myCollection_el, el.map((v) => {\n                    let MY__RULE = Object.assign({}, MY_RULE, { title: RULE.title })\n                    v.desc = RULE.title + ' ▪ ' + (v.desc || '')\n\n                    if (!v.url) {\n                        return v\n                    } else if (v.url.includes('@rule=')) {\n                        let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                        v.url = url\n                        MY__RULE.detail_find_rule = rule\n                        MY__RULE.detail_col_type = MY_RULE.col_type\n                    } else if (v.url.startsWith('hiker://page/')) {\n                        if (v.url.includes('rule=') || (v.extra || {}).rule)\n                            return v\n                        let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?(.*))?$/),\n                            subPage = MY_RULE.pageList.find((v) => v.path == path),\n                            subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\n                        v.url = subUrl ? subUrl.slice(4).replace(/？？/g, '?').replace(/＆＆/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\n                        MY__RULE.detail_find_rule = subPage.rule\n                        MY__RULE.detail_col_type = subPage.col_type\n                        MY__RULE.params = v.extra || {}\n                    } else if (v.url.includes('@lazyRule=')) {\n                        v.url = v.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                        return v\n                    } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\n                    v.extra = { url: v.url, RULE: MY__RULE, pageTitle: v.title }\n                    v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                    if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\n\n                    return v\n                }))\n            }\n            setHomeResult = setResult\n            setSearchResult = setResult\n\n            try {\n                eval(MY_RULE.find_rule.slice(3))\n            } catch (e) {}\n        } else {\n            let findRule = MY_RULE.find_rule.split(';')\n            parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\n                let [title, url, desc, content, img] = findRule.map((v, i) => {\n                        try {\n                            if (v == '*') return ''\n                            else v = (i == 1 || i == 4) ?\n                                parseDom(data, v) :\n                                parseDomForHtml(data, v)\n                            if (i != 1) v = runCode(v)\n                            return v\n                        } catch (e) { return '' }\n                    }),\n                    res = {\n                        title: title,\n                        url: url,\n                        desc: RULE.title + ' ▪ ' + desc,\n                        content: content,\n                        img: img\n                    }\n                if (res.url) {\n                    let MY__RULE = Object.assign({}, MY_RULE, { title: RULE.title })\n                    if (res.url.includes('@lazyRule=')) {\n                        res.url = res.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY__RULE.pages, pageList: MY__RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                    } else if (MY_RULE.detail_find_rule) {\n                        res.extra = { url: url, RULE: MY__RULE, pageTitle: title }\n                        res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                        if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\n                    }\n                }\n                myCollection_el.push(res)\n            })\n        }\n    })\n    myCollection_el.push(searchTag)\n}\nsetResult(myCollection_el)\n","search_url":"hiker://empty?keyword=**&page=fypage","group":"③听、书📻","detail_col_type":"text_2","detail_find_rule":"","sdetail_col_type":"text_2","sdetail_find_rule":"","ua":"pc","preRule":"setItem('myCollection', MY_RULE.title)\nsetItem('remoteUrl', 'http://hiker.nokia.press/hikerule/rulelist.json?id=2366')","pages":"[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"function ClassTab(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + MY_RULE.title + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = getVar('fold_' + this.sign, '')\\n        if (this.fold) el.push({\\n            title: '““””<span style=\\\"color:#049eff\\\">' + (folded ? '▶' : '▼'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n                selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: (selected == now ? '““””<span style=\\\"color:' + this.color + '\\\"><b>' : '') + name,\\n                    url: $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        putVar(sign, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&')\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        if (defaultClass) defaultClass = JSON.stringify({\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        })\\n        else throw new Error('cannot find id: ' + id + ' in classTab: ' + this.sign)\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    getLastClick() {\\n        return JSON.parse(getVar(this.sign, '{}'))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n$.exports = ClassTab\\n\"},{\"col_type\":\"movie_3\",\"name\":\"首页\",\"path\":\"indexLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = parseInt(MY_URL.split('#')[1]),\\n    RULE = MY_PARAMS.RULE,\\n    fyAll = RULE.url.includes('fyAll'),\\n    // 加载ClassTab组件\\n    ClassTab = $.require('hiker://page/ClassTab?rule=' + getItem('myCollection')),\\n    tabHeader = []\\n\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title })\\nif (pageNum == 1) {\\n    addListener('onClose', 'clearVar(\\\"myCollection-searchMode\\\")')\\n    putVar('myCollection-searchMode', RULE.title)\\n    tabHeader.load(myCollection_el)\\n    if (RULE.search_url) myCollection_el.push({\\n        title: \\\"搜索\\\",\\n        desc: \\\"搜你想要的...\\\",\\n        url: '\\\"hiker://page/singleSearch?keyword=\\\"+input+\\\"&page=fypage\\\"',\\n        extra: { rule: getItem('myCollection'), RULE: RULE },\\n        col_type: \\\"input\\\",\\n    })\\n}\\n// 处理MY_URL和MY_RULE\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.find_rule\\nMY_RULE.detail_find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, MY_URL_Options } = urlParse(RULE.url, {}, pageNum, (url) => {\\n    url[0] = fyAll ? url[0].replace(/fyAll/g, '$${fyAll}') : url[0].replace(/fy(class|area|year|sort)/g, '$${fy$1}')\\n    url[0] = tabHeader.setUrl(url[0])\\n}),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// 正文解析\\nif (pageNum == 1) eval(MY_RULE.preRule)\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/？？/g, '?').replace(/＆＆/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE, pageTitle: v.title }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"详情\",\"path\":\"detailLoad\",\"rule\":\"js:\\nlet myCollection_el = []\\n\\n// 处理MY_URL和MY_RULE\\nlet RULE = MY_PARAMS.RULE\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = RULE.pageList\\nMY_RULE.pages = RULE.pages\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = RULE.params\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, MY_URL_Options } = urlParse(MY_PARAMS.url, RULE.urlHeaders, 1),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// 解析正文\\nif (MY_PARAMS.pageTitle) setPageTitle(MY_PARAMS.pageTitle)\\neval(MY_RULE.preRule)\\nsetLastChapterRule(MY_RULE.last_chapter_rule)\\nMY_PARAMS = MY_RULE.params\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/？？/g, '?').replace(/＆＆/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^(.*?)(?:==>(.*))?$/)\\n    findRule = findRule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (detailFindRule) {\\n                res.extra = { url: url, RULE: Object.assign({}, MY_RULE, { detail_find_rule: detailFindRule }) }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"工具集\",\"path\":\"utility\",\"rule\":\"$.exports = {\\n    dataLoad: function(showAll) {\\n        //检查间隔，默认一天\\n        let min = 60 * 24 * 1,\\n            data = [],\\n            time = parseInt(readFile('updatetime')) || 0,\\n            now = new Date().getTime()\\n        if (now - time > 1000 * 60 * min) {\\n            log('更新了数据')\\n            // 获取远程数据\\n            let url = getItem('remoteUrl')\\n            try {\\n                data = fetch(url)\\n                if (url.startsWith('hiker://page/'))\\n                    data = JSON.parse(data).rule\\n                data = JSON.parse(data)\\n            } catch (e) {\\n                data = []\\n            }\\n            data = data.filter((v) => { return v.title != getItem('myCollection') && !v.author.includes('轻合集生成器') })\\n            saveFile('dataCache', JSON.stringify(data))\\n            saveFile('updatetime', '' + now)\\n        } else {\\n            log('没有更新数据')\\n            data = JSON.parse(readFile('dataCache'))\\n        }\\n        // 写入自定义数据\\n        let customData = JSON.parse(readFile('customData') || '[]'),\\n            rewriteData = []\\n        customData = customData.reduce((self, v) => {\\n            let index = data.findIndex((vv) => v.title == vv.title)\\n            if (index >= 0) {\\n                self.push(v)\\n                let rule = data.splice(index, 1)[0]\\n                if(showAll || v.visible)\\n                    rewriteData.push(Object.assign(rule, v))\\n            }\\n            return self\\n        }, [])\\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\\n        saveFile('customData', JSON.stringify(customData))\\n        return rewriteData.concat(data)\\n    },\\n    runCode: function(rule) {\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    },\\n    urlParse: function(url, headers, pageNum, func) {\\n        url = url.split(';').map((v) => v.replace(/；；/g, ';'))\\n        if (func) func(url)\\n        url[0] = url[0].replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n        url[0] = /^(.*?)(?:\\\\[firstPage=(.*?)\\\\])?$/.exec(url[0])\\n        url[0] = runCode(url[0][2] && pageNum == 1 ? url[0][2] : url[0][1])\\n        let options = { headers: headers, method: url[1] }\\n        // post方法时转换参数\\n        if (/^post$/i.test(options['method'])) {\\n            let [oriUrl, body] = url[0].split('?')\\n            url[0] = oriUrl.replace(/？？/g, '?')\\n            if (body.startsWith('JsonBody=')) body = body.slice(9)\\n            options['body'] = body\\n        }\\n        if (url[2]) options.headers['Content-Type'] = 'text/plain;charst=' + url[2]\\n        if (url[3]) url[3].match(/{(.*)}/)[1].split('&&').forEach((v) => {\\n            let [key, value] = v.split('@')\\n            options.headers[key] = runCode(value)\\n        })\\n        // 添加全局UA\\n        if (!options.headers['User-Agent']) {\\n            if (MY_RULE.ua == 'pc')\\n                options.headers['User-Agent'] = PC_UA\\n            else if (MY_RULE.ua == 'mobile')\\n                options.headers['User-Agent'] = MOBILE_UA\\n        }\\n        return { MY_URL: url[0], MY_URL_Options: options }\\n    }\\n}\\n\"},{\"col_type\":\"movie_1_vertical_pic\",\"name\":\"单搜\",\"path\":\"singleSearch\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    RULE = MY_PARAMS.RULE,\\n    keyword = getParam('keyword'),\\n    pageNum = parseInt(getParam('page'))\\n\\n// 处理MY_URL和MY_RULE\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_col_type : RULE.sdetail_col_type\\nMY_RULE.find_rule = RULE.searchFind\\nMY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, MY_URL_Options } = urlParse(RULE.search_url, {}, pageNum, (url) => {\\n    url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\\\*\\\\*/g, encodeStr(keyword, url[2]))\\n}),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// 正文解析\\nif (pageNum == 1) setPageTitle('“' + keyword + '”的搜索结果')\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE),\\n                subTitle = v.title\\n            v.title += '““””<br>' + (RULE.title.fontcolor('#12b668') + ' ▪ ' + (v.desc || '').fontcolor('#666666')).small()\\n            v.desc = v.content || ''\\n            if(!v.img) v.col_type = 'text_1'\\n            delete v.content\\n\\n            if (!v.url) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/？？/g, '?').replace(/＆＆/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE, pageTitle: subTitle }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, url, desc, content, img] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 4) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 1) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title + '““””<br>' + (RULE.title.fontcolor('#12b668') + ' ▪ ' + desc.fontcolor('#666666')).small(),\\n                url: url,\\n                desc: content,\\n                img: img\\n            }\\n        if(!res.img) res.col_type = 'text_1'\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"icon_2_round\",\"name\":\"设置\",\"path\":\"Config\",\"rule\":\"js:\\naddListener('onClose', 'clearVar(\\\"myCollection-sortFlag\\\");refreshPage()')\\nsetPageTitle('⚙ 轻合集设置 ⚙')\\nlet el = [{\\n        title: '清除缓存,立即更新 <small> （基于远程仓库,不要频繁点击）',\\n        url: $().lazyRule(() => {\\n            deleteFile('updatetime')\\n            back(true)\\n            return 'toast://已更新'\\n        }),\\n        img: 'hiker://images/icon1',\\n        col_type: 'avatar'\\n    }],\\n    searchThd = parseInt(readFile('searchThd') || '5'),\\n    newWindow = readFile('newWindow'),\\n    editMode = getVar('myCollection-editMode', '启用/禁用')\\n\\nel.push({\\n    title: '🔍 搜索模式: ' + (searchThd == 0 ? '列' : '聚' + searchThd),\\n    url: $(['列表搜索', '聚合搜索'], 1).select((searchThd) => {\\n        if (input == '列表搜索') {\\n            saveFile('searchThd', '0')\\n            refreshPage()\\n        } else {\\n            if (searchThd == 0) searchThd = 5\\n            return $(searchThd, '输入搜索线程，最好不要超过16').input(() => {\\n                saveFile('searchThd', input)\\n                refreshPage()\\n            })\\n        }\\n    }, searchThd),\\n    col_type: 'text_2'\\n}, {\\n    title: '🖥 独立首页: ' + (newWindow ? '是' : '否'),\\n    url: $('#noLoading#').lazyRule((newWindow) => {\\n        saveFile('newWindow', newWindow ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, newWindow),\\n    col_type: 'text_2'\\n})\\n\\nel.push({ col_type: 'line' }, { col_type: 'big_blank_block' });\\n['启用/禁用', '重新排序', '更改图标', '导入海阔'].forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '““””' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putVar('myCollection-editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'scroll_button'\\n    })\\n})\\nel.push({\\n    title: '恢复出厂数据',\\n    url: $('确定要恢复出厂，清楚自定义数据吗？').confirm(() => {\\n        deleteFile('customData')\\n        refreshPage(false)\\n        return 'toast://已恢复出厂数据'\\n    }),\\n    col_type: 'scroll_button'\\n})\\n\\nconst { dataLoad } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nlet data = dataLoad(true)\\nJSON.parse(readFile('customData') || '[]').forEach((v, i) => {\\n    let d = { title: v.title, img: data[i].icon }\\n    switch (editMode) {\\n        case '启用/禁用':\\n            d.title = (v.visible ? '🟢 ' : '🔴 ') + d.title\\n            d.url = $('#noLoading#').lazyRule((rule) => {\\n                let rules = JSON.parse(readFile('customData') || '[]'),\\n                    index = rules.findIndex((v) => v.title == rule.title)\\n                rules[index].visible = !rules[index].visible\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, v)\\n            break\\n        case '重新排序':\\n            let sortFlag = parseInt(getVar('myCollection-sortFlag', '-1'))\\n            d.title = (sortFlag == i ? '🔄 ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putVar('myCollection-sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://选择要移动到的位置'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('customData') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('customData', JSON.stringify(rules))\\n                    putVar('myCollection-sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case '更改图标':\\n            d.url = $(v.icon || '', '输入新图标地址或颜色代码：').input((rule) => {\\n                let rules = JSON.parse(readFile('customData') || '[]'),\\n                    index = rules.findIndex((v) => v.title == rule.title)\\n                if (input)\\n                    rules[index].icon = input\\n                else\\n                    delete rules[index].icon\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, v)\\n            break\\n        case '导入海阔':\\n            d.url = 'rule://' + base64Encode(JSON.stringify(data[i]))\\n            break\\n    }\\n    el.push(d)\\n})\\nsetResult(el)\\n\"}]","icon":"https://lanmeiguojiang.com/tubiao/q/13.png"},{"firstHeader":"class","last_chapter_rule":"","pageList":[],"title":"电视分类","author":"镇弟","version":0,"url":"https://shimo.im/docs/KDwVhYVGdCVkRrwX/read#fyAll","col_type":"text_2","class_name":"全部&卫视&港澳台&音乐&影视&CCTV&iHOT爱&NewTV&新闻综合&体育&娱乐&少儿&其它","class_url":"全部&卫视&港澳台&音乐&影视&CCTV&iHOT爱&NewTV&新闻综合&体育&娱乐&少儿&其它","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\r\nvar res = {};\r\nvar items = [];\r\nvar html = getResCode();\nvar s2 = 'https://api.ixiaowai.cn/gqapi/gqapi.php#' + new Date().getTime();\r\nvar fl = getUrl().split('#')[1];\r\nfunction getTitleAndDesc() {\n    let hitokoto =[];\n    let json = JSON.parse(fetch('https://v1.hitokoto.cn/?c=i', {}));\n    let source = json.from_who;\n    if (source == null) source = '未知';\n    hitokoto.push(json.hitokoto);\n    return hitokoto;\n}\nlet hitokoto = getTitleAndDesc();\nfunction zero(s) {\n    return s < 10 ? '0' + s: s;\n};\nvar mydate = new Date();\nyear = mydate.getFullYear();\nmonth = mydate.getMonth() + 1;\ndata = mydate.getDate();\nhour = mydate.getHours();\nminute = mydate.getMinutes();\nsecond = mydate.getSeconds();\nday = new Array(\" 星期日 \", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\")[mydate.getDay()];\nnewTime = year + '年' + zero(month) + '🈷️' + zero(data) + '日' + '\\t\\t\\t' + zero(hour) + ':' + zero(minute) + ':' + zero(second) + '\\t\\t\\t' + day;\nitems.push({\r\n    title:hitokoto[0],\n    url: \"hiker://search\",\r\n    desc: '🔎搜索或网址🔍🐂辛丑年'+ newTime +'',  \r\n    col_type: 'pic_1_card',\r\n     pic_url:s2\n});\r\nvar datas = parseDomForHtml(html, 'body&&.ql-editor&&Html').split('</p>');\r\nfor (var i = 0; i < datas.length - 1; i++) {\r\n    var data = datas[i].split('>')[1];\r\n    if (data.indexOf(',') > -1) {\r\n        var fyAll = MY_URL.split('#')[1];\r\n        var title = data.split(',')[0];\r\n        if (fyAll == '全部' || title.indexOf(fyAll) != -1) {\r\n            items.push({\r\n                title: title.split('|')[1],\r\n                url: data.split(',')[1].replace(/#.*/, '').replace('&amp;', '&') + `@lazyRule=.js:if(/(flv|m3u8|mp4)/.test(input)){input}else{JSON.parse(fetch(input,{headers:{'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64)'},redirect:false, withHeaders:true})).headers.location[0]+'#mp4'}`\n            });\r\n        }\r\n    }\r\n}\r\nres.data = items;\r\nsetHomeResult(res);","searchFind":"js:\nvar res = {};\nvar items = [];\nvar html = getResCode();\nvar flag = MY_URL.split('#')[1];\nvar datas = parseDomForHtml(html, 'body&&.ql-editor&&Html').split('</p>');\nfor (var i = 0; i < datas.length - 1; i++) {\n    var data = datas[i].split('>')[1];\n    if (data.indexOf(',') > -1) {\n        if (data.indexOf(flag) > -1) {\n            var title = data.split(',')[0];\n            var url = data.split(',')[1].replace(/#.*/, '').replace('&amp;', '&');\n            items.push({\n                title: title.split('|')[1],\r\n                url: 'hiker://empty#' + url + '#' + title\n            });\n        }\n    }\n}\nres.data = items;\nsetSearchResult(res);","search_url":"https://shimo.im/docs/KDwVhYVGdCVkRrwX/read#**","titleColor":"#fff20c00","group":"④直播📺","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"text_1","sdetail_find_rule":"js:\nvar res = {};\nvar items = [];\nvar data = MY_URL.split('#');\nitems.push({\n     title:data[2].split('|')[1],\n     url: data[1] + `@lazyRule=.js:if(/(flv|m3u8|mp4)/.test(input)){input}else{JSON.parse(fetch(input,{headers:{'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64)'},redirect:false, withHeaders:true})).headers.location[0]+'#mp4'}`,\n});\nres.data = items;\nsetHomeResult(res);","ua":"auto","preRule":"","pages":"[]","icon":""},{"firstHeader":"class","last_chapter_rule":"","pageList":[],"title":"视界HD","author":"镇弟","version":0,"url":"https://shimo.im/docs/G6prJhWxx6jX9xHV/read#fyAll","col_type":"text_2","class_name":"CCTV&卫视&广东&HD&动画少儿","class_url":"CCTV&卫视&广东&HD&动","area_name":"湖南&浙江&四川&上海&江苏","area_url":"湖南&浙江&四川&上海&江苏","sort_name":"北京&安徽&河南&吉林","year_name":"影视&福建&云南&江西&新闻&全部","sort_url":"北京&安徽&河南&吉林","year_url":"影视&福建&云南&江西&新闻&全部","find_rule":"js:\r\nvar res = {};\r\nvar items = [];\r\nvar html = getResCode();\r\nvar s2 = 'https://www.hlapi.cn/api/gqbz#' + new Date().getTime();\r\nvar fl = getUrl().split('#')[1];\r\nfunction getTitleAndDesc() {\n    let hitokoto =[];\n    let json = JSON.parse(fetch('https://v1.hitokoto.cn/?c=i', {}));\n    let source = json.from_who;\n    if (source == null) source = '未知';\n    hitokoto.push(json.hitokoto);\n    return hitokoto;\n}\nlet hitokoto = getTitleAndDesc();\nfunction zero(s) {\n    return s < 10 ? '0' + s: s;\n};\nvar mydate = new Date();\nyear = mydate.getFullYear();\nmonth = mydate.getMonth() + 1;\ndata = mydate.getDate();\nhour = mydate.getHours();\nminute = mydate.getMinutes();\nsecond = mydate.getSeconds();\nday = new Array(\" 星期日 \", \"星期1️⃣\", \"星期2️⃣\", \"星期3️⃣\", \"星期4️⃣\", \"星期5️⃣\", \"星期6️⃣\")[mydate.getDay()];\nnewTime = year + '年' + zero(month) + '🈷️' + zero(data) + '日⏲️' + '\\t\\t\\t' + zero(hour) + ':' + zero(minute) + ':' + zero(second) + '\\t\\t\\t' + day;\nitems.push({\n    title:\"辛丑🐄年          🔍搜索或网址🔎       \",\r\n    titles:hitokoto[0],\n    url: \"hiker://search\",\r\n    desc:''+ newTime +'',  \r\n    col_type: 'pic_1_card',\r\n     pic_url:s2\n});\r\nvar datas = parseDomForHtml(html, 'body&&.ql-editor&&Html').split('</p>');\r\nfor (var i = 0; i < datas.length - 1; i++) {\r\n    var data = datas[i].split('>')[1];\r\n    if (data.indexOf(',') > -1) {\r\n        var fyAll = MY_URL.split('#')[1];\r\n        var title = data.split(',')[0];\r\n        if (fyAll == '全部' || title.indexOf(fyAll) != -1) {\r\n            items.push({\r\n                title: title,\r\n                url: data.split(',')[1].replace(/#.*/, '').replace('&amp;', '&') + `@lazyRule=.js:if(/(flv|m3u8|mp4)/.test(input)){input}else{JSON.parse(fetch(input,{headers:{'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64)'},redirect:false, withHeaders:true})).headers.location[0]+'#mp4'}`\n            });\r\n        }\r\n    }\r\n}\r\nres.data = items;\r\nsetHomeResult(res);","searchFind":"js:\nvar res = {};\nvar items = [];\nvar html = getResCode();\nvar flag = MY_URL.split('#')[1];\nvar datas = parseDomForHtml(html, 'body&&.ql-editor&&Html').split('</p>');\nfor (var i = 0; i < datas.length - 1; i++) {\n    var data = datas[i].split('>')[1];\n    if (data.indexOf(',') > -1) {\n        if (data.indexOf(flag) > -1) {\n            var title = data.split(',')[0];\n            var url = data.split(',')[1].replace(/#.*/, '').replace('&amp;', '&');\n            items.push({\n                title: title,\n                url: 'hiker://empty#' + url + '#' + title\n            });\n        }\n    }\n}\nres.data = items;\nsetSearchResult(res);","search_url":"https://shimo.im/docs/G6prJhWxx6jX9xHV/read#**","titleColor":"#fff20c00","group":"④直播📺","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"text_1","sdetail_find_rule":"js:\nvar res = {};\nvar items = [];\nvar data = MY_URL.split('#');\nitems.push({\n    title: data[2],\n    url: data[1] + `@lazyRule=.js:if(/(flv|m3u8|mp4)/.test(input)){input}else{JSON.parse(fetch(input,{headers:{'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64)'},redirect:false, withHeaders:true})).headers.location[0]+'#mp4'}`,\n});\nres.data = items;\nsetHomeResult(res);","ua":"auto","preRule":"","pages":"[]","icon":""},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"加载数据","path":"config","rule":"function getConfig() {\n    let config = fetch(\"hiker://files/rules/live/config.json\");\n    if (config == \"\") {\n        return {\n            data: [],\n            version: 0\n        }\n    } else {\n        return JSON.parse(config)\n    }\n}"},{"col_type":"movie_3","name":"批量导入","path":"batchIm","rule":"function batchImport(input, rule) {\n    input = input.trim();\n    if (input.length < 3 || input[0] != \"{\") {\n        return \"toast://请输入正确的格式\"\n    }\n    let im = JSON.parse(input);\n    if (im.data == null || im.data.length < 1) {\n        return \"toast://请输入正确的格式\"\n    }\n    eval(JSON.parse(request(\"hiker://page/config?rule=\" + rule)).rule);\n    let config = getConfig();\n    let count = 0;\n    let all = config.data.map(it => it.url + \"&&&\").join();\n    for (let i of im.data) {\n        if (all.indexOf(i.url + \"&&&\") >= 0) {\n            //重复的不要\n            continue;\n        }\n        count++;\n        config.data.push(i)\n    }\n    writeFile(\"hiker://files/rules/live/config.json\", JSON.stringify(config));\n    refreshPage();\n    return \"toast://已导入\" + count + \"条订阅源\";\n}"}],"title":"Love直播","author":"小棉袄🌞","version":28,"url":"hiker://empty#fyAll","col_type":"text_3","class_name":"收藏&设置","class_url":"&setting","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nlet data = [{\n    col_type: 'line'\n}]\nlet configPath = \"hiker://files/rules/live/config.json\";\nif (!fileExist(configPath)) {\n    writeFile(configPath, \"\");\n}\nlet config = fetch(configPath);\n\neval(JSON.parse(request(\"hiker://page/config\")).rule);\n\nfunction renderSetting() {\n    const d = [{\n        title: \"导入\",\n        col_type: \"input\",\n        desc: \"请输入直播源订阅地址\",\n        url: $.toString((rule) => {\n            if (input == \"\") {\n                return \"toast://不能为空\"\n            } else if (input.indexOf(\"http\") != 0 && input.indexOf(\"file\") != 0 && input.indexOf(\"hiker\") != 0) {\n                return \"toast://链接格式有误\"\n            } else {\n                return \"input://////请输入订阅标题.js:\" + $.toString((url, rule) => {\n                    eval(JSON.parse(request(\"hiker://page/config?rule=\" + rule)).rule);\n                    let config = getConfig();\n                    config.data.push({\n                        name: input,\n                        url: url\n                    });\n                    writeFile(\"hiker://files/rules/live/config.json\", JSON.stringify(config));\n                    refreshPage();\n                    return \"toast://已保存\";\n                }, input, rule)\n            }\n        }, MY_RULE.title)\n    }];\n\n    config = getConfig();\n    d.push({\n        title: \"““””<span style='color:#1aad19'>批量导入</span>\",\n        col_type: \"text_4\",\n        url: \"input://.js:\" + $.toString((rule) => {\n            eval(JSON.parse(request(\"hiker://page/batchIm?rule=\" + rule)).rule);\n            return batchImport(input, rule);\n        }, MY_RULE.title)\n    });\n    d.push({\n        title: \"““””<span style='color:#1aad19'>导出全部</span>\",\n        col_type: \"text_4\",\n        url: \"copy://\" + JSON.stringify(config)\n    });\n    d.push({\n        title: \"““””<span style='color:#1aad19'>编辑全部</span>\",\n        col_type: \"text_4\",\n        url: \"editFile://hiker://files/rules/live/config.json\"\n    });\n    d.push({\n        title: \"““””<span style='color:#1aad19'>使用说明</span>\",\n        col_type: \"text_4\",\n        url: \"confirm://顶部输入框输入订阅源的地址，然后点击导入按钮在弹窗里面输入订阅源标题保存即可增加一条订阅源。批量导入的格式形如点击“导出全部”按钮生成的数据格式，已存在的链接不会重复导入。.js:''\"\n    });\n    d.push({\n        col_type: \"blank_block\"\n    })\n\n    for (source of config.data) {\n        d.push({\n            title: source.name,\n            col_type: \"text_4\",\n            url: \"confirm://确认删除此订阅？.js:\" + $.toString((name) => {\n                let config = fetch(\"hiker://files/rules/live/config.json\");\n                if (config == \"\") {\n                    config = {\n                        data: [],\n                        version: 0\n                    }\n                } else {\n                    config = JSON.parse(config)\n                }\n                config.data = config.data.filter(i => i.name != name);\n\n                writeFile(\"hiker://files/rules/live/config.json\", JSON.stringify(config));\n                refreshPage();\n                return \"toast:已删除\";\n            }, source.name)\n        })\n    }\n    return d\n}\n\nfunction getReferer(url) {\n    if (url.indexOf(\"gitee\") > 0) {\n        return \"https://\" + url.split(\"://\")[1].split(\"/\")[0];\n    } else {\n        return null\n    }\n}\n\nfunction renderLiveData(url) {\n    try {\n        var txts = request(url, {\n                headers: {\n                    Referer: getReferer(url)\n                }\n            }).replace(/#EXTINF:-1 ,/g, '')\n            .replace(/#EXTINF:-1,/g, '')\n            .replace(/\\n#genre#/g, ',#genre#')\n            .replace(/#EXTINF:-1/g, '')\n            .replace(/group-title=\"/g, '')\n            .replace(/\\nhttp/g, ',http')\n            .replace(/=/g, '')\n            .replace(/，#/g, ',#')\n            .replace(/\",/g, '/')\n            .replace(/ /g, '')\n            .split('\\n');\n        const d1 = []\n        for (var i = 0; i < txts.length; i++) {\n            var r = {};\n            var j = txts[i].split(',');\n            if (txts[i].indexOf(\"#EXTINF\") == 0 &&\n                j.length == 3 && j[2].indexOf(\"http\") == 0) {\n                r.title = j[1].split('/')[j[0].split('/').length - 1];\n                r.url = j[2].replace(`\\n`, '').replace('\\r', '');\n                if (r.url.indexOf(\"http\") == 0) {\n                    r.url = r.url + \"#isVideo=true#\";\n                }\n                d1.push(r);\n                continue;\n            }\n\n            if (j.length < 2) {\n                continue;\n            }\n            r.title = j[0].split('/')[j[0].split('/').length - 1];\n            r.url = j[1].replace(`\\n`, '').replace('\\r', '');\n            if (r.url.indexOf(\"http\") == 0) {\n                r.url = r.url + \"#isVideo=true#\";\n            }\n            d1.push(r);\n        }\n        //多线路\n        const d2 = {}\n        for (let it of d1) {\n            if (d2[it.title] == null) {\n                d2[it.title] = []\n            }\n            d2[it.title].push(it.url)\n        }\n\n        for (let it of Object.keys(d2)) {\n            data.push({\n                title: it,\n                url: JSON.stringify({\n                    urls: d2[it]\n                })\n            })\n        }\n    } catch (e) {\n        data.push({\n            title: \"数据加载失败\",\n            desc: JSON.stringify(e),\n            col_type: \"text_1\"\n        })\n    }\n}\n\nif (config == \"\" || MY_URL.indexOf('setting') > 0) {\n    data = renderSetting();\n} else {\n    config = getConfig();\n    if (config.data.length <= 0) {\n        data = renderSetting();\n    } else {\n        let select = getVar(\"live-select\", config.data[0].name);\n        log(select)\n        let has = config.data.map(i => i.name).includes(select);\n        log(has)\n        if (!has) {\n            select = config.data[0].name;\n        }\n        data.push({\n            col_type: \"big_blank_block\"\n        })\n        for (source of config.data) {\n            data.push({\n                title: source.name == select ? \"““””<span style='color: #1aad19'>\" + select + \"</span>\" : source.name,\n                col_type: \"scroll_button\",\n                url: $().lazyRule((a) => {\n                    putVar(\"live-select\", a);\n                    refreshPage();\n                    return \"hiker://empty\"\n                }, source.name)\n            })\n        }\n\n        for (source of config.data) {\n            if (source.name == select) {\n                renderLiveData(source.url);\n                break\n            }\n        }\n    }\n}\nsetResult(data);","searchFind":"","search_url":"","group":"④直播📺","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"加载数据\",\"path\":\"config\",\"rule\":\"function getConfig() {\\n    let config = fetch(\\\"hiker://files/rules/live/config.json\\\");\\n    if (config == \\\"\\\") {\\n        return {\\n            data: [],\\n            version: 0\\n        }\\n    } else {\\n        return JSON.parse(config)\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"批量导入\",\"path\":\"batchIm\",\"rule\":\"function batchImport(input, rule) {\\n    input = input.trim();\\n    if (input.length < 3 || input[0] != \\\"{\\\") {\\n        return \\\"toast://请输入正确的格式\\\"\\n    }\\n    let im = JSON.parse(input);\\n    if (im.data == null || im.data.length < 1) {\\n        return \\\"toast://请输入正确的格式\\\"\\n    }\\n    eval(JSON.parse(request(\\\"hiker://page/config?rule=\\\" + rule)).rule);\\n    let config = getConfig();\\n    let count = 0;\\n    let all = config.data.map(it => it.url + \\\"&&&\\\").join();\\n    for (let i of im.data) {\\n        if (all.indexOf(i.url + \\\"&&&\\\") >= 0) {\\n            //重复的不要\\n            continue;\\n        }\\n        count++;\\n        config.data.push(i)\\n    }\\n    writeFile(\\\"hiker://files/rules/live/config.json\\\", JSON.stringify(config));\\n    refreshPage();\\n    return \\\"toast://已导入\\\" + count + \\\"条订阅源\\\";\\n}\"}]","icon":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fis4.mzstatic.com%2Fimage%2Fthumb%2FPurple3%2Fv4%2Fdf%2Ff6%2Fda%2Fdff6da83-47d7-9cb6-2398-1919c13837b4%2Fmzl.kgmnwodo.png%2F0x0ss-85.jpg&refer=http%3A%2F%2Fis4.mzstatic.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1638629349&t=2f6d967185fe2b9c54e8b230eb83e66c"},{"last_chapter_rule":"","pageList":[],"title":"小霸王","author":"小🔥星","version":2,"url":"https://www.yikm.net/nes?page=fypage&tag=fyAll&e=","col_type":"movie_3_marquee","class_name":"GBA&街机&Flash&H5&","class_url":"11&9&12&1&","area_name":"动作冒险&小游戏&飞行射击&格斗&","area_url":"2&8&3&4&","sort_name":"适度游戏益脑，沉迷游戏伤身！","year_name":"棋牌&射击&运动比赛&角色扮演&","sort_url":"","year_url":"5&6&7&10&","find_rule":"body&&.card;h4&&Text;img&&src;;a&&href","searchFind":"body&&.card;h4&&Text;a&&href;span&&Text;;img&&src","search_url":"https://www.yikm.net/search?name=**","titleColor":"#ff228be6","group":"⑤游戏🎮","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[]"},{"firstHeader":"class","last_chapter_rule":"","pageList":[{"name":"设置函数","path":"reConfig","rule":"function batchSearch_reConfig(code) {\n  return $.toString((code) => {\n    let batchSearch_config = JSON.parse(getVar('batchSearch-config'))\n    new Function('batchSearch_config', code)(batchSearch_config)\n    putVar('batchSearch-config', JSON.stringify(batchSearch_config))\n    refreshPage(false)\n    return 'hiker://empty'\n  }, code)\n}\n"},{"col_type":"movie_1_vertical_pic","name":"搜索函数","path":"searchLoad","rule":"function batchSearch_load() {\n  try {\n    function batchSearch_runCode(batchSearch_rule) {\n      if (batchSearch_rule.indexOf('.js:') >= 0) {\n        try {\n          var input = batchSearch_rule.split('.js:')[0]\n          return eval(batchSearch_rule.split('.js:')[1])\n        } catch (e) {\n          return batchSearch_rule\n        }\n      } else {\n        return batchSearch_rule\n      }\n    }\n    // 搜索策略过滤\n    let batchSearch_filtersGroup = batchSearch_config.filters[batchSearch_config.apply].group,\n      batchSearch_filtersExclude = batchSearch_config.filters[batchSearch_config.apply].exclude,\n      batchSearch_homeList = JSON.parse(fetch('hiker://home')).filter((item) =>\n        item.searchFind && item.title != MY_RULE.title &&\n        batchSearch_filtersGroup.find((v) => item.group == v) &&\n        !batchSearch_filtersExclude.find((v) => item.title == v))\n      .slice((batchSearch_page - 1) * batchSearch_config.threadCnt, batchSearch_page * batchSearch_config.threadCnt)\n    if (!batchSearch_homeList.length) return []\n    let batchSearch_res = [],\n      batchSearch_ruleList = [],\n      batchSearch_urlList = []\n    batchSearch_homeList.forEach((item) => {\n      try {\n        // 缓存解析规则\n        batchSearch_ruleList.push({\n          title: item.title,\n          searchFind: item.searchFind,\n          sdetailFind: ['', '*'].indexOf(item.sdetail_find_rule) == -1 ? item.sdetail_find_rule : item.detail_find_rule,\n          col_type: ['', '*'].indexOf(item.sdetail_find_rule) == -1 ? item.sdetail_col_type : item.detail_col_type,\n          preRule: item.preRule,\n          urlParam: (item.search_url.match(/;.*/) || [''])[0],\n          ua: item.ua\n        })\n        // 搜索链接处理\n        let searchUrl = item.search_url.split(';').map((v) => v.replace(/；；/g, ';'))\n        searchUrl[0] = searchUrl[0].replace(searchUrl[0].indexOf('%%') >= 0 ? /%%/g : /\\*\\*/g, encodeStr(batchSearch_kw, searchUrl[2]))\n          .replace(/fypage(?:@(-?\\d+)@)?(?:\\*\\d+@)?/g, (_, $1) => parseInt($1 || 0) + 1)\n        let searchReq = { url: batchSearch_runCode(searchUrl[0]), options: { headers: { 'Content-Type': 'text/plain; charst=UTF-8' }, method: searchUrl[1], timeout: batchSearch_config.responseTime } }\n        // post方法时转换参数\n        if (/^post$/i.test(searchReq.options['method'])) {\n          let [oriUrl, body] = searchReq.url.split('?')\n          searchReq.url = oriUrl.replace('？？', '?')\n          if (/^JsonBody=/.test(body)) body = body.slice(9)\n          searchReq.options['body'] = body\n        }\n        if (searchUrl[2]) searchReq.options.headers['Content-Type'] = searchReq.options.headers['Content-Type'].slice(0, 19) + searchUrl[2]\n        if (searchUrl[3]) searchUrl[3].match(/{(.*)}/)[1].split('&&').forEach((v) => {\n          let headers = v.split('@')\n          searchReq.options.headers[headers[0]] = batchSearch_runCode(headers[1])\n        })\n        // 添加全局UA\n        if (!searchReq.options.headers['User-Agent']) {\n          if (item.ua == 'pc')\n            searchReq.options.headers['User-Agent'] = PC_UA\n          else if (item.ua == 'mobile')\n            searchReq.options.headers['User-Agent'] = MOBILE_UA\n        }\n        batchSearch_urlList.push(searchReq)\n      } catch (e) {\n        batchSearch_urlList.push({ url: 'hiker://error/' + JSON.stringify(e) })\n      }\n    })\n    // 获取搜索结果\n    batchFetch(batchSearch_urlList).forEach((batchSearch_searchHtml, batchSearch_searchIndex) => {\n      let batchSearch_itemRule = batchSearch_ruleList[batchSearch_searchIndex],\n        batchSearch_itemUrl = batchSearch_urlList[batchSearch_searchIndex]\n      MY_URL = batchSearch_itemUrl.url\n      try {\n        if (!batchSearch_searchHtml) {\n          if (batchSearch_itemUrl.url.indexOf('hiker://error/') == 0)\n            throw { message: '链接处理时出错:\\n' + JSON.parse(batchSearch_itemUrl.url.slice(14)).message }\n          else if (batchSearch_itemUrl.url.indexOf('hiker://') != 0) throw { message: '无法访问，未获取到网页源代码' }\n        }\n\n        function batchSearch_urlHandle(url, addRule) {\n          // 子页面添加rule\n          if (url.indexOf('hiker://page/') == 0) {\n            [, url, params, mark] = /^(.*?)(?:\\?(.*?))?(#.*?)?$/.exec(url)\n            return url + '?rule=' + batchSearch_itemRule.title + (params || '') + (mark ? '&' + mark : '')\n          }\n          // 添加二级规则\n          if (addRule && !/@(?:r|lazyR)ule=/.test(url)) {\n            if (batchSearch_itemRule.sdetailFind) {\n              if (!/;get|;post/i.test(url))\n                url += ';get;' + batchSearch_itemUrl.options.headers['Content-Type'].split('charst=')[1] +\n                ';{' + Object.keys(batchSearch_itemUrl.options.headers)\n                .filter((v) => v != 'Content-Type')\n                .map((v) => v + '@' + batchSearch_itemUrl.options.headers[v].replace(/;/g, '；；'))\n                .join('&&') + '}'\n              batchSearch_itemRule.urlParam.replace(/^;post/i, ';get')\n              url += '@rule=' + (batchSearch_itemRule.sdetailFind.indexOf('js:') == 0 ?\n                batchSearch_itemRule.sdetailFind :\n                batchSearch_itemRule.sdetailFind.replace('==>', ';' + batchSearch_itemRule.col_type + '==>')\n              )\n            } else url = 'web://' + url\n          }\n          // 二级页面预处理与错误处理\n          if (url.indexOf('@rule=js:') > 0) url = url.replace('@rule=js:',\n            '@rule=js:try{\\nbatchSearch_itemRule=' + $.stringify({ title: batchSearch_itemRule.title, col_type: batchSearch_itemRule.col_type }) +\n            ';' + $.stringify(batchSearch_urlHandle) + ';' + $.stringify(batchSearch_reConfig) + ';' +\n            $.toString(() => {\n              fetch = (function(func) {\n                return function(url, params) {\n                  return func(batchSearch_urlHandle(url), params)\n                }\n              })(fetch)\n              setResult = (function(func) {\n                return function(el) {\n                  if (!Array.isArray(el)) el = el.data\n                  func(el.map((v) => {\n                    v.url = v.url && batchSearch_urlHandle(v.url)\n                    v.col_type = v.col_type || batchSearch_itemRule.col_type\n                    return v\n                  }))\n                }\n              })(setResult)\n              setSearchResult = setResult\n              setHomeResult = setResult\n            }) + ';') + '\\n}catch(e){' + $.toString((title, batchSearch_reConfig) => {\n            setResult([{\n              title: '小程序【' + title + '】中，此二级页面不支持或者已失效，错误信息：\\n\\n' + e.message,\n              col_type: 'long_text'\n            }, { col_type: 'line' }, {\n              title: '““””<span style=\"color:#409eff\">排除小程序</span>',\n              url: 'confirm://要排除该小程序吗?.js:' +\n                batchSearch_reConfig('batchSearch_config.filters[batchSearch_config.apply].exclude.push(\"' + title + '\")').replace('refreshPage(false)', '') + ';' +\n                $.toString(() => writeFile('hiker://files/BatchSearchConfig.json', getVar('batchSearch-config'))) +\n                ';\"toast://已排除小程序【' + title + '】\"',\n              col_type: 'text_center_1'\n            }])\n          }, batchSearch_itemRule.title, batchSearch_reConfig) + '}'\n          return url\n        }\n        if (batchSearch_itemRule.searchFind.indexOf('js:') == 0) {\n          // js解析\n          Array.prototype.push.apply(batchSearch_res, function() {\n            let batchSearch_result = []\n\n            function getUrl() { return MY_URL }\n            fetch = (function(func) {\n              return function(url, params) {\n                return func(batchSearch_urlHandle(url), params)\n              }\n            })(fetch)\n            eval(batchSearch_itemRule.preRule)\n\n            function getResCode() { return batchSearch_searchHtml }\n\n            function setResult(el) {\n              if (!Array.isArray(el)) el = el.data\n              el.forEach((v) => {\n                v.title = (batchSearch_config.searchMode == '内置' && !/^““|‘‘/.test(v.title) ? '““””' : '') + v.title\n                v.url = batchSearch_urlHandle(v.url, true)\n                v.desc = batchSearch_itemRule.title + (v.desc ? ' 🔹 ' + v.desc : '')\n                v.col_type = 'movie_1_vertical_pic'\n                batchSearch_result.push(v)\n              })\n            }\n            setSearchResult = setResult\n            setHomeResult = setResult\n            eval(batchSearch_itemRule.searchFind.slice(3))\n            return batchSearch_result\n          }())\n        } else {\n          // 普通解析\n          let find = batchSearch_itemRule.searchFind.split(';')\n          parseDomForArray(batchSearch_searchHtml, find[0]).forEach((data) => {\n            let [title, url, desc, content, img] = find.slice(1).map((v, i) =>\n                batchSearch_runCode(v == '*' ? '' :\n                  (i == 1 || i == 4 ? parseDom(data, v) :\n                    parseDomForHtml(data, v)))),\n              item = {\n                title: (batchSearch_config.searchMode == '内置' && !/^““|‘‘/.test(title) ? '““””' : '') + title,\n                url: batchSearch_urlHandle(url, true),\n                desc: batchSearch_itemRule.title + (desc ? ' 🔹 ' + desc : ''),\n                content: content,\n                img: img,\n                col_type: 'movie_1_vertical_pic'\n              }\n            if (item.title.indexOf(batchSearch_kw) >= 0 || item.desc.indexOf(batchSearch_kw) >= 0) batchSearch_res.push(item)\n          })\n        }\n      } catch (e) {\n        // 搜索结果错误处理\n        batchSearch_res.push({\n          title: '小程序【' + batchSearch_itemRule.title + '】不支持或者已失效，点击查看错误信息',\n          url: 'confirm://' + e.message + '\\n\\n是否排除该小程序?.js:' +\n            batchSearch_reConfig('batchSearch_config.filters[batchSearch_config.apply].exclude.push(\"' + batchSearch_itemRule.title + '\")').replace('refreshPage(false)', '') + ';' +\n            $.toString(() => writeFile('hiker://files/BatchSearchConfig.json', getVar('batchSearch-config'))) +\n            ';\"toast://已排除小程序【' + batchSearch_itemRule.title + '】\"',\n          col_type: 'text_center_1'\n        });\n      }\n    })\n    return batchSearch_res\n  } catch (e) {\n    return [{\n      title: '搜索时出现致命错误，点击查看解决办法\\n' + e,\n      url: $('点击确定后结束搜索，将搜索线程调整为1，\\n重新搜索直到再次出现相同的报错，\\n然后就可以定位引起致命错误的小程序，手动将其排除').confirm(() => {\n        putVar('batchSearch-kw', '')\n        refreshPage()\n      }),\n      col_type: 'text_center_1'\n    }]\n  }\n}\n"}],"title":"聚搜君Lite","author":"LoyDgIk&道长&永远の明日","version":5,"url":"hiker://empty##fypage","col_type":"movie_1_vertical_pic","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nlet batchSearch_el = [],\n  batchSearch_page = parseInt(MY_URL.slice(15)),\n  batchSearch_kw = getVar('batchSearch-kw', ''),\n  batchSearch_config = JSON.parse(getVar('batchSearch-config')),\n  batchSearch_start = $.toString((mode, title) => {\n    if (mode == '内置') {\n      putVar('batchSearch-kw', input)\n      refreshPage()\n      return 'hiker://empty'\n    } else return 'hiker://search?s=' + input + '&rule=' + title\n  }, batchSearch_config.searchMode, MY_RULE.title)\neval(JSON.parse(fetch('hiker://page/reConfig')).rule)\n\nif (batchSearch_page == 1) {\n  batchSearch_el.push({\n    title: '搜索',\n    url: batchSearch_reConfig('if(input&&batchSearch_config.history.indexOf(input)==-1)batchSearch_config.history.push(input)') + ';' + batchSearch_start,\n    extra: { defaultValue: batchSearch_kw },\n    col_type: 'input'\n  }, {\n    title: '““””<span style=\"color:#409eff\"><b>策略设置</b></span>',\n    url: 'hiker://empty#策略设置',\n    col_type: 'scroll_button'\n  })\n  Object.keys(batchSearch_config.filters).forEach((v) => batchSearch_el.push({\n    title: (v == batchSearch_config.apply ? '““””<span style=\"color:#12b668\">' : '') + v,\n    url: v == batchSearch_config.apply ? 'hiker://empty' : '#noLoading#@lazyRule=.js:' +\n      batchSearch_reConfig($.toString((apply) => { batchSearch_config.apply = apply }, v)),\n    col_type: 'scroll_button'\n  }))\n  batchSearch_el.push({ col_type: 'line_blank' })\n  if (!batchSearch_kw) {\n    batchSearch_el.push({\n      title: '““””<big><b>搜索历史</b></big> &nbsp 🗑',\n      url: 'confirm://要清空搜索历史吗?.js:' + batchSearch_reConfig('batchSearch_config.history=[]'),\n      col_type: 'text_1'\n    })\n    batchSearch_config.history.forEach((v) => {\n      batchSearch_el.push({\n        title: '““””<big>&nbsp &nbsp </big>' + v + '<big> &nbsp &nbsp</big>',\n        url: v + '#noLoading#@lazyRule=.js:' + batchSearch_start,\n        col_type: 'flex_button'\n      })\n    })\n  }\n}\n\nif (batchSearch_kw) {\n  eval(JSON.parse(fetch('hiker://page/searchLoad')).rule)\n  Array.prototype.push.apply(batchSearch_el, batchSearch_load().map((v) => {\n    if (v.content) v.desc += '\\n' + v.content\n    return v\n  }))\n}\n\nsetResult(batchSearch_el)\n//log(batchSearch_el)\n","searchFind":"js:\nlet batchSearch_el = [],\n  [_, batchSearch_page, batchSearch_kw] = MY_URL.split('##'),\n  batchSearch_config = JSON.parse(getVar('batchSearch-config'))\nbatchSearch_page = parseInt(batchSearch_page)\neval(JSON.parse(fetch('hiker://page/reConfig')).rule)\n\neval(JSON.parse(fetch('hiker://page/searchLoad')).rule)\nArray.prototype.push.apply(batchSearch_el, batchSearch_load())\n\nsetResult(batchSearch_el)\n","search_url":"hiker://empty##fypage##**","titleColor":"#148e8e","group":"⑥不常用🔧","detail_col_type":"icon_2","detail_find_rule":"js:\nlet batchSearch_el = [],\n  batchSearch_config = JSON.parse(getVar('batchSearch-config')),\n  batchSearch_allGroup = JSON.parse(fetch('hiker://home')).map((v) => v.group).filter((v, i, arr) => arr.indexOf(v) == i),\n  batchSearch_anotherMode = { '内置': '原生', '原生': '内置' } [batchSearch_config.searchMode]\neval(JSON.parse(fetch('hiker://page/reConfig')).rule)\n\nbatchSearch_el.push({\n  title: '搜索线程: ' + batchSearch_config.threadCnt,\n  url: 'input://////线程数: 同时搜索的小程序数量.js:' +\n    batchSearch_reConfig('batchSearch_config.threadCnt=parseInt(input)'),\n  img: 'hiker://images/设置'\n}, {\n  title: '超时(毫秒): ' + batchSearch_config.responseTime,\n  url: 'input://////超时毫秒数: 搜索每个小程序时的最大访问时间.js:' +\n    batchSearch_reConfig('batchSearch_config.responseTime=parseInt(input)'),\n  img: 'hiker://images/历史'\n}, {\n  title: '搜索模式: ' + batchSearch_config.searchMode,\n  url: 'confirm://要切换搜索模式为' + batchSearch_anotherMode + '吗?\\n内置模式: 首页同屏显示搜索结果\\n原生模式: 调用视界搜索显示结果.js:' +\n    batchSearch_reConfig($.toString((mode) => { batchSearch_config.searchMode = mode }, batchSearch_anotherMode)),\n  img: 'hiker://images/云备份'\n}, {\n  title: '新增策略',\n  url: 'input://////给新策略起个名字吧.js:' +\n    batchSearch_reConfig('batchSearch_config.filters[input]={group:[],exclude: []}'),\n  img: 'hiker://images/书签'\n}, {\n  title: '““””<b>💾 &nbsp 应用并返回</b>',\n  url: $('#noLoading#').lazyRule(() => (back(true), 'hiker://empty')),\n  col_type: 'text_center_1'\n})\n\nfor (let batchSearch_filtersName in batchSearch_config.filters) {\n  let batchSearch_filtersGroup = batchSearch_config.filters[batchSearch_filtersName].group,\n    batchSearch_filtersExclude = batchSearch_config.filters[batchSearch_filtersName].exclude\n  batchSearch_el.push({ col_type: 'line_blank' }, {\n    title: '““””<b>' + batchSearch_filtersName + '</b> &nbsp 🗑',\n    url: 'confirm://要删除策略【' + batchSearch_filtersName + '】吗?.js:' +\n      batchSearch_reConfig($.toString((name) => { delete batchSearch_config.filters[name] }, batchSearch_filtersName)),\n    col_type: 'text_center_1'\n  }, { col_type: 'big_blank_block' }, { col_type: 'big_blank_block' }, {\n    title: '““””<span style=\"color:#409eff\">[⊗]<b></b></span>',\n    url: 'confirm://要清空策略【' + batchSearch_filtersName + '】包含的分组吗?.js:' +\n      batchSearch_reConfig($.toString((name) => { batchSearch_config.filters[name].group = [] }, batchSearch_filtersName)),\n    col_type: 'scroll_button'\n  }, {\n    title: '““””<span style=\"color:#409eff\">[⊙]<b>分组:</b></span>',\n    url: 'confirm://要全选策略【' + batchSearch_filtersName + '】包含的分组吗?.js:' +\n      batchSearch_reConfig($.toString((name, allGroup) => { batchSearch_config.filters[name].group = allGroup }, batchSearch_filtersName, batchSearch_allGroup)),\n    col_type: 'scroll_button'\n  })\n  let batchSearch_sortedGroup = batchSearch_allGroup.reduce((self, v) => {\n    let i = batchSearch_filtersGroup.indexOf(v)\n    if (i >= 0) self[0].push([i, v])\n    else self[1].push(v)\n    return self\n  }, [\n    [],\n    []\n  ])\n  batchSearch_sortedGroup[0].forEach((v) => batchSearch_el.push({\n    title: '““””<span style=\"color:#12b668\">' + (v[1] || '[无分组]'),\n    url: '#noLoading#@lazyRule=.js:' +\n      batchSearch_reConfig($.toString((name, locat) => { batchSearch_config.filters[name].group.splice(locat, 1) }, batchSearch_filtersName, v[0])),\n    col_type: 'scroll_button'\n  }))\n  batchSearch_sortedGroup[1].forEach((v) => batchSearch_el.push({\n    title: v || '[无分组]',\n    url: '#noLoading#@lazyRule=.js:' +\n      batchSearch_reConfig($.toString((name, title) => { batchSearch_config.filters[name].group.push(title) }, batchSearch_filtersName, v)),\n    col_type: 'scroll_button'\n  }))\n  batchSearch_el.push({ col_type: 'line' }, { col_type: 'big_blank_block' }, { col_type: 'big_blank_block' }, {\n    title: '““””<span style=\"color:#409eff\">[⊕]<b>排除:</b></span>',\n    url: 'input://////要排除什么小程序?\\n可输入多个，每行一个.js:' +\n      batchSearch_reConfig($.toString((name) => { input.match(/^.*?$/gm).forEach((v) => batchSearch_config.filters[name].exclude.push(v)) }, batchSearch_filtersName)),\n    col_type: 'scroll_button'\n  })\n  batchSearch_filtersExclude.forEach((v, i) => batchSearch_el.push({\n    title: '““””<span style=\"color:#12b668\">' + v,\n    url: 'confirm://要取消排除小程序【' + v + '】吗?.js:' +\n      batchSearch_reConfig($.toString((name, locat) => { batchSearch_config.filters[name].exclude.splice(locat, 1) }, batchSearch_filtersName, i)),\n    col_type: 'scroll_button'\n  }))\n}\n\nsetResult(batchSearch_el)\n","sdetail_col_type":"text_1","sdetail_find_rule":"","ua":"auto","preRule":"// toDo\n// 策略编辑单开页面，更多链接兼容\n// ?二级页面没有预处理\n// fixed\n\n\nlet batchSearch_path = 'hiker://files/rules/BatchSearchConfig.json',\n  batchSearch_config = getVar('batchSearch-config') || fetch(batchSearch_path)\ntry { batchSearch_config = JSON.parse(batchSearch_config) } catch (e) { batchSearch_config = {} }\n\nif (!(batchSearch_config.threadCnt > 0)) batchSearch_config.threadCnt = 6\nif (!(batchSearch_config.responseTime > 0)) batchSearch_config.responseTime = 5000\nif (['内置', '原生'].indexOf(batchSearch_config.searchMode) == -1) batchSearch_config.searchMode = '内置'\nif (!Array.isArray(batchSearch_config.history)) batchSearch_config.history = []\nif (!Object.keys(batchSearch_config.filters || {}).length) batchSearch_config.filters = {\n  '全部': {\n    group: JSON.parse(fetch('hiker://home')).map((v) => v.group).filter((v, i, arr) => arr.indexOf(v) == i),\n    exclude: []\n  }\n}\nif (!(batchSearch_config.apply in batchSearch_config.filters)) batchSearch_config.apply = Object.keys(batchSearch_config.filters)[0]\n\nputVar('batchSearch-config', JSON.stringify(batchSearch_config))\nwriteFile(batchSearch_path, JSON.stringify(batchSearch_config))\n","pages":"[{\"name\":\"设置函数\",\"path\":\"reConfig\",\"rule\":\"function batchSearch_reConfig(code) {\\n  return $.toString((code) => {\\n    let batchSearch_config = JSON.parse(getVar('batchSearch-config'))\\n    new Function('batchSearch_config', code)(batchSearch_config)\\n    putVar('batchSearch-config', JSON.stringify(batchSearch_config))\\n    refreshPage(false)\\n    return 'hiker://empty'\\n  }, code)\\n}\\n\"},{\"col_type\":\"movie_1_vertical_pic\",\"name\":\"搜索函数\",\"path\":\"searchLoad\",\"rule\":\"function batchSearch_load() {\\n  try {\\n    function batchSearch_runCode(batchSearch_rule) {\\n      if (batchSearch_rule.indexOf('.js:') >= 0) {\\n        try {\\n          var input = batchSearch_rule.split('.js:')[0]\\n          return eval(batchSearch_rule.split('.js:')[1])\\n        } catch (e) {\\n          return batchSearch_rule\\n        }\\n      } else {\\n        return batchSearch_rule\\n      }\\n    }\\n    // 搜索策略过滤\\n    let batchSearch_filtersGroup = batchSearch_config.filters[batchSearch_config.apply].group,\\n      batchSearch_filtersExclude = batchSearch_config.filters[batchSearch_config.apply].exclude,\\n      batchSearch_homeList = JSON.parse(fetch('hiker://home')).filter((item) =>\\n        item.searchFind && item.title != MY_RULE.title &&\\n        batchSearch_filtersGroup.find((v) => item.group == v) &&\\n        !batchSearch_filtersExclude.find((v) => item.title == v))\\n      .slice((batchSearch_page - 1) * batchSearch_config.threadCnt, batchSearch_page * batchSearch_config.threadCnt)\\n    if (!batchSearch_homeList.length) return []\\n    let batchSearch_res = [],\\n      batchSearch_ruleList = [],\\n      batchSearch_urlList = []\\n    batchSearch_homeList.forEach((item) => {\\n      try {\\n        // 缓存解析规则\\n        batchSearch_ruleList.push({\\n          title: item.title,\\n          searchFind: item.searchFind,\\n          sdetailFind: ['', '*'].indexOf(item.sdetail_find_rule) == -1 ? item.sdetail_find_rule : item.detail_find_rule,\\n          col_type: ['', '*'].indexOf(item.sdetail_find_rule) == -1 ? item.sdetail_col_type : item.detail_col_type,\\n          preRule: item.preRule,\\n          urlParam: (item.search_url.match(/;.*/) || [''])[0],\\n          ua: item.ua\\n        })\\n        // 搜索链接处理\\n        let searchUrl = item.search_url.split(';').map((v) => v.replace(/；；/g, ';'))\\n        searchUrl[0] = searchUrl[0].replace(searchUrl[0].indexOf('%%') >= 0 ? /%%/g : /\\\\*\\\\*/g, encodeStr(batchSearch_kw, searchUrl[2]))\\n          .replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*\\\\d+@)?/g, (_, $1) => parseInt($1 || 0) + 1)\\n        let searchReq = { url: batchSearch_runCode(searchUrl[0]), options: { headers: { 'Content-Type': 'text/plain; charst=UTF-8' }, method: searchUrl[1], timeout: batchSearch_config.responseTime } }\\n        // post方法时转换参数\\n        if (/^post$/i.test(searchReq.options['method'])) {\\n          let [oriUrl, body] = searchReq.url.split('?')\\n          searchReq.url = oriUrl.replace('？？', '?')\\n          if (/^JsonBody=/.test(body)) body = body.slice(9)\\n          searchReq.options['body'] = body\\n        }\\n        if (searchUrl[2]) searchReq.options.headers['Content-Type'] = searchReq.options.headers['Content-Type'].slice(0, 19) + searchUrl[2]\\n        if (searchUrl[3]) searchUrl[3].match(/{(.*)}/)[1].split('&&').forEach((v) => {\\n          let headers = v.split('@')\\n          searchReq.options.headers[headers[0]] = batchSearch_runCode(headers[1])\\n        })\\n        // 添加全局UA\\n        if (!searchReq.options.headers['User-Agent']) {\\n          if (item.ua == 'pc')\\n            searchReq.options.headers['User-Agent'] = PC_UA\\n          else if (item.ua == 'mobile')\\n            searchReq.options.headers['User-Agent'] = MOBILE_UA\\n        }\\n        batchSearch_urlList.push(searchReq)\\n      } catch (e) {\\n        batchSearch_urlList.push({ url: 'hiker://error/' + JSON.stringify(e) })\\n      }\\n    })\\n    // 获取搜索结果\\n    batchFetch(batchSearch_urlList).forEach((batchSearch_searchHtml, batchSearch_searchIndex) => {\\n      let batchSearch_itemRule = batchSearch_ruleList[batchSearch_searchIndex],\\n        batchSearch_itemUrl = batchSearch_urlList[batchSearch_searchIndex]\\n      MY_URL = batchSearch_itemUrl.url\\n      try {\\n        if (!batchSearch_searchHtml) {\\n          if (batchSearch_itemUrl.url.indexOf('hiker://error/') == 0)\\n            throw { message: '链接处理时出错:\\\\n' + JSON.parse(batchSearch_itemUrl.url.slice(14)).message }\\n          else if (batchSearch_itemUrl.url.indexOf('hiker://') != 0) throw { message: '无法访问，未获取到网页源代码' }\\n        }\\n\\n        function batchSearch_urlHandle(url, addRule) {\\n          // 子页面添加rule\\n          if (url.indexOf('hiker://page/') == 0) {\\n            [, url, params, mark] = /^(.*?)(?:\\\\?(.*?))?(#.*?)?$/.exec(url)\\n            return url + '?rule=' + batchSearch_itemRule.title + (params || '') + (mark ? '&' + mark : '')\\n          }\\n          // 添加二级规则\\n          if (addRule && !/@(?:r|lazyR)ule=/.test(url)) {\\n            if (batchSearch_itemRule.sdetailFind) {\\n              if (!/;get|;post/i.test(url))\\n                url += ';get;' + batchSearch_itemUrl.options.headers['Content-Type'].split('charst=')[1] +\\n                ';{' + Object.keys(batchSearch_itemUrl.options.headers)\\n                .filter((v) => v != 'Content-Type')\\n                .map((v) => v + '@' + batchSearch_itemUrl.options.headers[v].replace(/;/g, '；；'))\\n                .join('&&') + '}'\\n              batchSearch_itemRule.urlParam.replace(/^;post/i, ';get')\\n              url += '@rule=' + (batchSearch_itemRule.sdetailFind.indexOf('js:') == 0 ?\\n                batchSearch_itemRule.sdetailFind :\\n                batchSearch_itemRule.sdetailFind.replace('==>', ';' + batchSearch_itemRule.col_type + '==>')\\n              )\\n            } else url = 'web://' + url\\n          }\\n          // 二级页面预处理与错误处理\\n          if (url.indexOf('@rule=js:') > 0) url = url.replace('@rule=js:',\\n            '@rule=js:try{\\\\nbatchSearch_itemRule=' + $.stringify({ title: batchSearch_itemRule.title, col_type: batchSearch_itemRule.col_type }) +\\n            ';' + $.stringify(batchSearch_urlHandle) + ';' + $.stringify(batchSearch_reConfig) + ';' +\\n            $.toString(() => {\\n              fetch = (function(func) {\\n                return function(url, params) {\\n                  return func(batchSearch_urlHandle(url), params)\\n                }\\n              })(fetch)\\n              setResult = (function(func) {\\n                return function(el) {\\n                  if (!Array.isArray(el)) el = el.data\\n                  func(el.map((v) => {\\n                    v.url = v.url && batchSearch_urlHandle(v.url)\\n                    v.col_type = v.col_type || batchSearch_itemRule.col_type\\n                    return v\\n                  }))\\n                }\\n              })(setResult)\\n              setSearchResult = setResult\\n              setHomeResult = setResult\\n            }) + ';') + '\\\\n}catch(e){' + $.toString((title, batchSearch_reConfig) => {\\n            setResult([{\\n              title: '小程序【' + title + '】中，此二级页面不支持或者已失效，错误信息：\\\\n\\\\n' + e.message,\\n              col_type: 'long_text'\\n            }, { col_type: 'line' }, {\\n              title: '““””<span style=\\\"color:#409eff\\\">排除小程序</span>',\\n              url: 'confirm://要排除该小程序吗?.js:' +\\n                batchSearch_reConfig('batchSearch_config.filters[batchSearch_config.apply].exclude.push(\\\"' + title + '\\\")').replace('refreshPage(false)', '') + ';' +\\n                $.toString(() => writeFile('hiker://files/BatchSearchConfig.json', getVar('batchSearch-config'))) +\\n                ';\\\"toast://已排除小程序【' + title + '】\\\"',\\n              col_type: 'text_center_1'\\n            }])\\n          }, batchSearch_itemRule.title, batchSearch_reConfig) + '}'\\n          return url\\n        }\\n        if (batchSearch_itemRule.searchFind.indexOf('js:') == 0) {\\n          // js解析\\n          Array.prototype.push.apply(batchSearch_res, function() {\\n            let batchSearch_result = []\\n\\n            function getUrl() { return MY_URL }\\n            fetch = (function(func) {\\n              return function(url, params) {\\n                return func(batchSearch_urlHandle(url), params)\\n              }\\n            })(fetch)\\n            eval(batchSearch_itemRule.preRule)\\n\\n            function getResCode() { return batchSearch_searchHtml }\\n\\n            function setResult(el) {\\n              if (!Array.isArray(el)) el = el.data\\n              el.forEach((v) => {\\n                v.title = (batchSearch_config.searchMode == '内置' && !/^““|‘‘/.test(v.title) ? '““””' : '') + v.title\\n                v.url = batchSearch_urlHandle(v.url, true)\\n                v.desc = batchSearch_itemRule.title + (v.desc ? ' 🔹 ' + v.desc : '')\\n                v.col_type = 'movie_1_vertical_pic'\\n                batchSearch_result.push(v)\\n              })\\n            }\\n            setSearchResult = setResult\\n            setHomeResult = setResult\\n            eval(batchSearch_itemRule.searchFind.slice(3))\\n            return batchSearch_result\\n          }())\\n        } else {\\n          // 普通解析\\n          let find = batchSearch_itemRule.searchFind.split(';')\\n          parseDomForArray(batchSearch_searchHtml, find[0]).forEach((data) => {\\n            let [title, url, desc, content, img] = find.slice(1).map((v, i) =>\\n                batchSearch_runCode(v == '*' ? '' :\\n                  (i == 1 || i == 4 ? parseDom(data, v) :\\n                    parseDomForHtml(data, v)))),\\n              item = {\\n                title: (batchSearch_config.searchMode == '内置' && !/^““|‘‘/.test(title) ? '““””' : '') + title,\\n                url: batchSearch_urlHandle(url, true),\\n                desc: batchSearch_itemRule.title + (desc ? ' 🔹 ' + desc : ''),\\n                content: content,\\n                img: img,\\n                col_type: 'movie_1_vertical_pic'\\n              }\\n            if (item.title.indexOf(batchSearch_kw) >= 0 || item.desc.indexOf(batchSearch_kw) >= 0) batchSearch_res.push(item)\\n          })\\n        }\\n      } catch (e) {\\n        // 搜索结果错误处理\\n        batchSearch_res.push({\\n          title: '小程序【' + batchSearch_itemRule.title + '】不支持或者已失效，点击查看错误信息',\\n          url: 'confirm://' + e.message + '\\\\n\\\\n是否排除该小程序?.js:' +\\n            batchSearch_reConfig('batchSearch_config.filters[batchSearch_config.apply].exclude.push(\\\"' + batchSearch_itemRule.title + '\\\")').replace('refreshPage(false)', '') + ';' +\\n            $.toString(() => writeFile('hiker://files/BatchSearchConfig.json', getVar('batchSearch-config'))) +\\n            ';\\\"toast://已排除小程序【' + batchSearch_itemRule.title + '】\\\"',\\n          col_type: 'text_center_1'\\n        });\\n      }\\n    })\\n    return batchSearch_res\\n  } catch (e) {\\n    return [{\\n      title: '搜索时出现致命错误，点击查看解决办法\\\\n' + e,\\n      url: $('点击确定后结束搜索，将搜索线程调整为1，\\\\n重新搜索直到再次出现相同的报错，\\\\n然后就可以定位引起致命错误的小程序，手动将其排除').confirm(() => {\\n        putVar('batchSearch-kw', '')\\n        refreshPage()\\n      }),\\n      col_type: 'text_center_1'\\n    }]\\n  }\\n}\\n\"}]"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"E2Rex","path":"E2Rex","rule":"js:\nconst getE2Rex = $.require(\"hiker://page/getE2Rex?rule=E2ToHiker\");\nconst E2Hiker = $.require(\"hiker://page/E2ToHiker?rule=E2ToHiker\")\nfunction e2Rex(t,r){\n    return getE2Rex(E2Hiker,t,r);\n}\n$.exports = e2Rex;"},{"col_type":"movie_3","name":"E2ToHiker","path":"E2ToHiker","rule":"js:\nconst E2Error = $.require(\"hiker://page/E2Error?rule=E2ToHiker\");\n\nfunction E2Hiker(value) {\n    if (typeof value === \"string\") {\n        this.source = value;\n        this.value = value;\n        this.xuArr = [];\n        this.xObj = [];\n    } else {\n        throw new E2Error(\"E2Hiker需要一个string参数\",\"初始化错误\",value);\n    }\n}\n\nfunction split(text, target, count) {\n    count = count === undefined ? 1 : count;\n    let array = [text];\n    for (let i = 0; i < count; i++) {\n        text = array[i];\n        let index = text.indexOf(target);\n        if (index === -1) {\n            break;\n        }\n        array[i] = text.slice(0, index);\n        array[i + 1] = text.slice(index + target.length);\n    }\n    return array;\n}\n\nfunction rsplit(text, target, count) {\n    count = count === undefined ? 1 : count;\n    let array = [text];\n    for (let i = 0; i < count; i++) {\n        text = array[0];\n        let index = text.lastIndexOf(target);\n        if (index === -1) {\n            break;\n        }\n        array[0] = text.slice(0, index);\n        array.splice(1, 0, text.slice(index + target.length));\n    }\n    return array;\n}\nE2Hiker.prototype = {\n    constructor: E2Hiker,\n    getValue(type) {\n        let Ttype = Object.prototype.toString.call(this.value);\n        type = \"[object \" + type + \"]\";\n        \n        if (Ttype === type) {\n            return this.value;\n        } else {\n            throw new E2Error(\"函数需要\"+type+\"类型，而真实类型为\"+Ttype,undefined,this.value,\"dataType\");\n        }\n    },\n    getValue2(arr) {\n        let typeArr = arr.map(item => \"[object \" + item + \"]\");\n        let Ttype = Object.prototype.toString.call(this.value);\n        if (typeArr.includes(Ttype)) {\n            return this.value;\n        } else {\n            throw new E2Error(\"函数需要\"+typeArr.join(\"|\")+\"类型，而真实类型为\"+Ttype,undefined,this.value,\"dataType\");\n        }\n    },\n    setValue(data) {\n        if (typeof data === \"number\") {\n            data = data + \"\";\n        }\n        this.value = data;\n    },\n    valueOf() {\n        if (this.xuArr.length !== 0) {\n            if (Array.isArray(this.value)) {\n                return this.xuArr.concat(this.value);\n            } else if (typeof this.value === \"object\") {\n                this.xuArr.push(JSON.stringify(this.value));\n                return this.xuArr;\n            } else {\n                this.xuArr.push(this.value);\n                return this.xuArr;\n            }\n        } else {\n            if (!Array.isArray(this.value) && typeof this.value === \"object\") {\n                return JSON.stringify(this.value);\n            } else {\n                return this.value;\n            }\n        }\n    },\n    ty(target) {\n        let data = this.getValue(\"String\");\n        this.setValue(split(data, target)[1] || \"\");\n    },\n    ty2(target) {\n        let data = this.getValue(\"String\");\n        this.setValue(rsplit(data, target)[1] || \"\");\n    },\n    tz(target) {\n        let data = this.getValue(\"String\");\n        this.setValue(split(data, target)[0] || \"\");\n    },\n    tz2(target) {\n        let data = this.getValue(\"String\");\n        this.setValue(rsplit(data, target)[0] || \"\");\n    },\n    t() {\n        let data = this.getValue(\"String\");\n        this.setValue(data.replace(/<[^>]+>/g, \"\"));\n    },\n    tj(target) {\n        this.setValue(this.getValue(\"String\") + target);\n    },\n    tzc(target) {\n        let index = Number(target);\n        this.setValue(this.getValue(\"String\").substring(0,index));\n    },\n    tsk() {\n        this.setValue(this.getValue(\"String\").trim());\n    },\n    th(target) {\n        let targetArr = split(target, \"##\");\n        if (targetArr.length === 1) {\n            return this.tz(target);\n        }\n        let reg = new RegExp(targetArr[0], \"g\");\n        this.setValue(this.getValue(\"String\").replace(reg, targetArr[1]));\n    },\n    th2(target){\n        let targetArr = split(target, \"##\");\n        if (targetArr.length === 1) {\n            return this.tz(target);\n        }\n        this.setValue(this.getValue(\"String\").split(targetArr[0]).join(targetArr[1]));\n    },\n    /*tvar(target) {\n        let data = this.getValue(\"String\");\n        this.xObj[target]=data;\n        this.setValue(this.source);\n    },\n    trl(target) {\n        let data = this.getValue(\"String\");\n        let y = this.xObj[target]||\"\";\n        this.setValue(data+y);\n    },\n    tll(target) {\n        let data = this.getValue(\"String\");\n        let y = this.xObj[target]||\"\";\n        this.setValue(y+data);\n    },*/\n    tx(){\n        let data = this.getValue(\"String\");\n        if(data.indexOf(this.source)+this.source.length!==data.length){\n            this.setValue((this.xuArr.pop()||\"\")+data+this.source);\n        }\n    },\n    byt(target) {\n        parseDomForArray(this.getValue(\"String\"), \"html&&*:contains(\" + target + \")\");\n    },\n    fg(target) {\n        let reg = new RegExp(target);\n        this.setValue(this.getValue(\"String\").split(reg));\n    },\n    en64() {\n        this.setValue(base64Encode(this.getValue(\"String\")));\n    },\n    dn64() {\n        this.setValue(base64Decode(this.getValue(\"String\")));\n    },\n    d(v) {\n        this.setValue(decodeStr(this.getValue(\"String\"), v));\n    },\n    en(v) {\n        this.setValue(encodeStr(this.getValue(\"String\"), v));\n    },\n    tot() {\n        this.setValue(JSON.stringify(this.getValue(\"String\")));\n    },\n    toij() {\n        this.setValue(JSON.parse(this.getValue(\"String\")));\n    },\n    type() {\n        this.setValue(Object.prototype.toString.call(this.value));\n    },\n    i(target) {\n        let data = this.getValue2([\"String\", \"Array\"]);\n        let [s, e] = split(target, \",\");\n        if (e === undefined) {\n            s=Number(s);\n            if(s>=0){\n                this.setValue(data[s] || data);\n            }else if(s<0){\n                this.setValue(data[data.length+s] || data);\n            }\n        } else {\n            this.setValue(data.slice(s, e));\n        }\n    },\n    ij(target) {\n        let data = this.getValue(\"Array\");\n        data.push(target);\n        this.setValue(data);\n    },\n    is(target) {\n        let reg = new RegExp(target);\n        let data = this.getValue(\"Array\");\n        let newData = data.filter(item => !item.test(reg));\n        this.setValue(newData);\n    },\n    il(target) {\n        let reg = new RegExp(target);\n        let data = this.getValue(\"Array\");\n        let newData = data.filter(item => item.test(reg));\n        this.setValue(newData);\n    },\n    it(target) {\n        let data = this.getValue(\"Array\");\n        this.setValue(data.join(target));\n    },\n    ix(){\n        let data = this.getValue(\"Array\");\n        this.xuArr=this.xuArr.concat(data);\n        this.setValue(this.source);\n    },\n    dx(){\n        let data = this.getValue(\"Array\");\n        data.reverse();\n    },\n    get(target) {\n        let data = this.getValue(\"String\");\n        try {\n            this.setValue(parseDomForHtml(data, target));\n        } catch (e) {\n            this.setValue(\"\");\n        }\n    },\n    geta(target) {\n        let data = this.getValue(\"String\");\n        try {\n            this.setValue(parseDomForArray(data, target));\n        } catch (e) {\n            this.setValue([]);\n        }\n    },\n    getp(target){\n        let data = this.getValue(\"Array\");\n        data=data.map(item=>parseDomForHtml(item, target));\n        this.setValue(data);\n    },\n    json(target) {\n        let data = this.getValue2([\"Object\",\"Array\"])[target];\n        this.setValue(data === undefined ? \"\" : data);\n    },\n    c(target) {\n        let data = this.value;\n        if (Array.isArray(data)) {\n            data = data[0] === undefined ? \"\" : data[0];\n        } else if (typeof data === \"object\") {\n            data = JSON.stringify(data);\n        }\n        this.setValue(data + target + this.source);\n    },\n    ct(target) {\n        let data = this.value;\n        if (Array.isArray(data)) {\n            data = data[0] === undefined ? \"\" : data[0];\n        } else if (typeof data === \"object\") {\n            data = JSON.stringify(data);\n        }\n        this.setValue(data + target);\n    },\n    or() {\n        if (this.value !== \"\" && this.value !== undefined) {\n            return true;\n        } else {\n            this.setValue(this.source);\n            return false;\n        }\n    },\n    xu() {\n        let data = this.value;\n        if (Array.isArray(data)) {\n            for (let v of data) {\n                this.xuArr.push(v);\n            }\n        } else if (typeof data === \"object\") {\n            this.xuArr.push(JSON.stringify(data));\n        } else {\n            this.xuArr.push(data);\n        }\n        this.setValue(this.source);\n    },\n    st(target){\n        this.it(target);\n    },\n    z(target){\n        let data = this.getValue(\"String\");\n        let reg = new RegExp(target,\"g\");\n        let newdata = data.match(reg)||[];\n        this.setValue(newdata);\n    },\n    z2(target){\n        let data = this.getValue(\"String\");\n        let reg = new RegExp(target);\n        let newdata = data.match(reg)||[];\n        if(newdata.length>0){\n            newdata.splice(0,1);\n        }\n        this.setValue(newdata);\n    }\n}\n$.exports = E2Hiker;"},{"col_type":"movie_3","name":"E2Error","path":"E2Error","rule":"js:\nfunction E2Error(message, rule,context,type) {\n    this.message = message || \"\";\n    this.rule = rule;\n    this.context = context;\n    this.name = \"E2Error\";\n    this.type = type||\"error\";\n}\nE2Error.prototype = new Error();\nE2Error.prototype.constructor = E2Error;\n\n$.exports = E2Error;"},{"col_type":"movie_3","name":"正则参考","path":"正则参考","rule":"<code>.</code> - 除换行符以外的所有字符。<br>\n<code>^</code> - 字符串开头。<br>\n<code>$</code> - 字符串结尾。<br>\n<code>\\d,\\w,\\s</code> - 匹配数字、字符、空格。<br>\n<code>\\D,\\W,\\S</code> - 匹配非数字、非字符、非空格。<br>\n<code>[abc]</code> - 匹配 a、b 或 c 中的一个字母。<br>\n<code>[a-z]</code> - 匹配 a 到 z 中的一个字母。<br>\n<code>[^abc]</code> - 匹配除了 a、b 或 c 中的其他字母。<br>\n<code>aa|bb</code> - 匹配 aa 或 bb。<br>\n<code>?</code> - 0 次或 1 次匹配。<br>\n<code>*</code> - 匹配 0 次或多次。<br>\n<code>+</code> - 匹配 1 次或多次。<br>\n<code>{n}</code> - 匹配 n次。<br>\n<code>{n,}</code> - 匹配 n次以上。<br>\n<code>{m,n}</code> - 最少 m 次，最多 n 次匹配。<br>\n<code>(expr)</code> - 捕获 expr 子模式,以 \\1 使用它。<br>\n<s><code>(?:expr)</code> - 忽略捕获的子模式。</s><br>\n<s><code>(?=expr)</code> - 正向预查模式 expr。</s><br>\n<s><code>(?!expr)</code> - 负向预查模式 expr。</s><br>"},{"col_type":"movie_3","name":"E2参考","path":"E2参考","rule":"<h3>E2 表达式： <h3>\n<p>用于处理文本的表达式，比如获取\"文本\"前的几个字，可以使用  .tz(文本)  获取到 \"用于处理\"  四个字。 E2函数名使用中文拼音首字命名，对不懂开发的人群也能轻松操作。</p>\n\n \n\n<p>为了更容易了解并使用函数，一般处理文本的函数均以 t 开头，比如取文本左边的 tz ， t = 文本，z 是左的拼音头，然后就能知道取文本右边函数为 ty  了。 处理数组的函数 以 i 开头，如 .ij(aaa)  ，j = 加， 往数据中加入一行数组，值为 aaa 。</p>\n\n \n\n<h3>文本操作类：</h3>\n \n\n<p>&nbsp;&nbsp;&nbsp;.tz()&nbsp;&nbsp;.ty()&nbsp;&nbsp;取文本左、右数据。</p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.tz2()&nbsp;&nbsp;.ty2()&nbsp;&nbsp;从后读取判断值文本并取判断值左、右（前、后）数据。 若内容为  abbacc  时使用  .ty(a)  取得值为 bbacc ， 使用  .ty2(a)  取得值 为  cc 。</p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.t()&nbsp;&nbsp;删除HTML标识，无需提供参数，如内容为 &lt;p&gt;a&lt;/p&gt;b&lt;p&gt;  时去除html代码获取正文， 直接使用  .t()  即可，最终得到   ab 。</p>\n\n  \n\n<p>&nbsp;&nbsp;&nbsp;.tj()&nbsp;&nbsp;添加内容，如已有 ab 获取 abcd ： .tj(cd) </p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.tzc()&nbsp;&nbsp;参数为数字，如 tzc(5) 如果当前操作值字数大于 5 就取前5个字，少于则取全部。所以这里 zc 记最长。若操作值为 ABCDE  使用  .tzc(3) 得到 AB 。</p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.tsk()&nbsp;&nbsp;无参数，去首尾空，qswk 再加上 t 太长了不好记，就首空，意思就去首尾空，就是去掉操作首尾的空格字符。</p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.th()&nbsp;&nbsp;替换，参数为 欲被替换文本##替换文本。如内容为   ABC 时 需将 B 改成 2 ，可以使用 .th(B##2) 。 欲需将其置空不要，可以直接使用 .th(B) ，将得到  AB 。 同时 th 中欲被替换文本是支持正则表达式的，如果要替换的内容和正则通配符冲突的话，就需要写转义了。 比如相对复杂的内容  111ADGDGS333 将中间的英文字替换为333，可用  .th([A-Z]+##333)  。 如果你并不知道哪些是正则匹配符，建议使用 .th2()  唯一不同的是 th2 中欲被替换文本是不支持正则匹配的。</p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.tx()&nbsp;&nbsp;x 意思是 新，新的概念在下面的数组里也有相应的函数。 M浏览器扩展使用E2时都是要先定义源内容的，比如数据源爬虫就是读取到的网络内容，文本就是定义的文本。 这里假设源内容是  xByyEzz ， 需要获取  E 后面的值和 B 前面的值（其中内容 x y z 会动态变化），注意是E后面+B前面。 新的概念就是存储之前操作的值不变让后面操作的函数处理的是源内容。理解这句话应该知道怎么做了，分三步走，获取 E 的后面值 ty2(E)  ->  存储并将当前操作内容定义为源内容 tx()  -> 获取 B 前面值 .tz(B)。\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;快速捋一篇， 源内容 xByyEzz 在使用 E2 时会自动将其转为操作值，跟着使用 ty2(E) ，取E后面就是将操作值置为 zz ， 接着使用 .tx() 存储操作值并将操作值设为源文本 xByyEzz ， 跟着 tz(B) 得到 x  。后面没有函数了，就将前面存储的值和操作值输出，最终得到   xyyzz 。 </p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.byt()&nbsp;&nbsp;用于HTML，匹配标签值数据，返回整个标签项目列表\n<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&gt;&lt;h2&gt;我是标题&lt;/h2&gt;&lt;/div&gt;<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;h3&gt;/CCCC&lt;/h3&gt;<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;标题BBBB&lt;/p&gt;<br>\n&nbsp;&nbsp;&nbsp;&nbsp;取第1及第3行：.byt(标题)；获取 “&lt;p&gt;标题BBBB&lt;/p&gt;”  ：.byt(标题BBBB)  或者  .byt(标题).i(1)。</p>\n\n\n\n<h3>数组操作类：</h3>\n \n\n<p>&nbsp;&nbsp;&nbsp;.i(正数)&nbsp;&nbsp;获取数组中第一个内容，从0开始，如获取第一个值 就 .i(0) ，第三个值 .i(2) 以此类推。</p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.i(负数)&nbsp;&nbsp;从数组尾部开始寻找，-1 即，数组倒数第一个值。 -2 数组倒数第二值，以此类推。</p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.i(数,数)&nbsp;&nbsp;取数组范围，理解了正数负数的用法这里的数可以自由填正数也可以负数，怎么好判断怎么来， 如有数组 [ab,ac,ad,ae] ，获取   ac,ad,ae ，即排除第一个： .i(1,-1)  ，排除最后一个：  .i(0,-2)。</p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.ij(添加的文本)&nbsp;&nbsp;将\"添加的文本\" 加入到数组中，比如数组已经有  [aa,bb,cc]  操作之后就等于  [aa,bb,cc,添加的文本]。</p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.is()&nbsp;&nbsp;正则匹配通过的数组会被删掉。</p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.il()&nbsp;&nbsp;正则匹配通过的数组会被保留。</p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.ix()&nbsp;&nbsp;存储数组，接着和 tx 类似，将操作值改为原文本。 注意数组操作时接着操作其它函数。</p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.it(分割符)&nbsp;&nbsp;E2里，i 表示数组，t 表示文本。将数组合并为文本且中间以参数分隔符作填充，若不填入参数则无分隔符。</p>\n\n \n\n \n\n<h3>正则表达式：</h3>\n \n\n<p>&nbsp;&nbsp;&nbsp;.z()&nbsp;&nbsp;参数中若含括号必须添加转义给E2识别，若正则表达式中括号比较多在E2里看起来比较费眼，可在参数前后添加两个@标识内容为参数。 比如正则为   (a\\(b\\)c)|(x\\(y\\)z)  ，就是匹配  a(b)c 或 x(y) z， 在E2里必须给括号再添加一个转义符 \\ ，即 .z(\\(a\\\\(b\\\\)c\\)|\\(x\\\\(y\\\\)z\\))  这样就看起来很乱，那如果在参数两则加双@ 就可以写成  .z(@@(a\\(b\\)c)|(x\\(y\\)z)@@) 看起来相对会比较和谐。</p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.z2()&nbsp;&nbsp;匹配子表达式，同上一些编写，子表达式即为 正则中()里面的值，匹配后可以使用  .i() 获取指定括号内容。<br>\n\n&nbsp;&nbsp;&nbsp;&nbsp;注意若不使用@@全文转义符时，记得在内容括号前加 转义符 右斜杠！！！<br>\n<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;明明18岁<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;丽丽17岁<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;李娜娜19岁<br>\n<br>\n&nbsp;&nbsp;a 获取 “明明18岁”：.z(.{2,3}\\d{2}岁)<br>\n   \n\n&nbsp;&nbsp;b 获取娜娜几岁(19)：.z(.{2,3}\\d{2}岁).i(2).z2(.{2,3}\\(\\d{2}\\)岁)<br>\n\n&nbsp;&nbsp;a中若接口为返回文本，则相当与后方自动加了  .i(0) 函数，即取数组的第一个文本（数组计次从0开始）<br>\n\n&nbsp;&nbsp;b中先是用 .z() 全局匹配取得第3条数据，后用 .z2() 取子表达式的年龄数字</p>\n\n<h3>CSS选择器：</h3>\n\n<p>&nbsp;&nbsp;&nbsp;.get()&nbsp;&nbsp;使用海阔规则语法语法。xml也可以用。</p>\n\n<p>&nbsp;&nbsp;&nbsp;.geta()&nbsp;&nbsp;同上，但可以获取列表。</p>\n\n<p>&nbsp;&nbsp;&nbsp;.getp()&nbsp;&nbsp;功能与.get()一样，但是用于处理数组。</p>\n\n<h3>JSON解析器：</h3>\n\n<p>&nbsp;&nbsp;&nbsp;.toij()&nbsp;&nbsp;将字符串转为json对象。</p>\n\n<p>&nbsp;&nbsp;&nbsp;.json(参数名)&nbsp;&nbsp;用于读取json对象的子级。<p>\n<p>\n{<br>\n&nbsp;&nbsp;&nbsp;&nbsp;\"name\": \"BeJson\",<br>\n&nbsp;&nbsp;&nbsp;&nbsp;\"es\": {<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"a\": \"科技园路.\",<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"b\": \"中国\"<br>\n&nbsp;&nbsp;&nbsp;&nbsp;},<br>\n&nbsp;&nbsp;&nbsp;&nbsp;\"arr\": [<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"name\": \"Baidu\",<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"url\": \"http://www.baidu.com\"<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},{<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"name\": \"Google\",<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"url\": \"http://www.google.com\"<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>\n&nbsp;&nbsp;&nbsp;&nbsp;]<br>\n}<br>\n&nbsp;&nbsp;&nbsp;&nbsp;获取 中国：.toij().json(es).json(b)；也可以匹配 函数 .i(v) 获取数组中的数据，获取 Google 的 url： .toij().json(arr).i(1).json(url)。</p>\n\n<h3>高级命令：</h3>\n<p>&nbsp;&nbsp;&nbsp;.d(v)&nbsp;&nbsp;将文本进行URL解码，v == utf8、gbk等。</p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.en(v)&nbsp;&nbsp;将文本进行URL加密，v == utf8、gbk等。</p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.dn64()&nbsp;&nbsp;将文本进行Base64解码。</p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.en64()&nbsp;&nbsp;将文本进行Base64加密。</p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.c()&nbsp;&nbsp;取回源码，可选带参，带参则先将参数加入文本，后取回源码。</p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.ct()&nbsp;&nbsp;即连接该文本。类似上面 .c 带参，但不取回源数据。</p>    \n\n \n\n<p>&nbsp;&nbsp;&nbsp;.or()&nbsp;&nbsp;若前面规则已读到数据则不执行右边规则，否则重置执行位置继续执行规则。</p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.xu()&nbsp;&nbsp;不返回任何数据，继续以列表方式存入右则读到的数据。即左右两则数据均取。</p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.st(参数)&nbsp;&nbsp;将数组合并为文本，数组之间填充参数值。</p>\n\n \n\n<p>&nbsp;&nbsp;&nbsp;.fg(参数)&nbsp;&nbsp;分割文本返回数组，若参数为空则默认分割换行。</p>\n\n<p>&nbsp;&nbsp;&nbsp;.type()&nbsp;&nbsp;返回当前操作值的类型。</p>\n   \n<h2><big>\n不同的操作类型函数不可以混用。\n改自<a href=\"https://7cc7cc.com/thread-120.htm?type=last\">原文<a>\n</big></h2>"},{"col_type":"movie_3","name":"E2还原版","path":"E2ToHiker2","rule":"js:\nconst E2Error = $.require(\"hiker://page/E2Error?rule=E2ToHiker\");\nlet Jsoup = org.jsoup.Jsoup;\n\nfunction E2Hiker(value) {\n    if (typeof value === \"string\") {\n        this.source = value;\n        this.value = value;\n        this.xuArr = [];\n        this.xObj = [];\n    } else {\n        throw new E2Error(\"E2Hiker需要一个string参数\", \"初始化错误\", value);\n    }\n}\n\nfunction split(text, target, count) {\n    count = count === undefined ? 1 : count;\n    let array = [text];\n    for (let i = 0; i < count; i++) {\n        text = array[i];\n        let index = text.indexOf(target);\n        if (index === -1) {\n            break;\n        }\n        array[i] = text.slice(0, index);\n        array[i + 1] = text.slice(index + target.length);\n    }\n    return array;\n}\n\nfunction rsplit(text, target, count) {\n    count = count === undefined ? 1 : count;\n    let array = [text];\n    for (let i = 0; i < count; i++) {\n        text = array[0];\n        let index = text.lastIndexOf(target);\n        if (index === -1) {\n            break;\n        }\n        array[0] = text.slice(0, index);\n        array.splice(1, 0, text.slice(index + target.length));\n    }\n    return array;\n}\nE2Hiker.prototype = {\n    constructor: E2Hiker,\n    getValue(type) {\n        let Ttype = Object.prototype.toString.call(this.value);\n        type = \"[object \" + type + \"]\";\n\n        if (Ttype === type) {\n            return this.value;\n        } else if (type === \"[object String]\" && Ttype === \"[object Array]\") {\n            return this.value[0] || \"\";\n        } else if (Ttype === \"[object String]\" && type === \"[object Array]\") {\n            return [this.value];\n        } else {\n            throw new E2Error(\"函数需要\" + type + \"类型，而真实类型为\" + Ttype, undefined, this.value, \"dataType\");\n        }\n    },\n    setValue(data) {\n        if (typeof data === \"number\") {\n            data = data + \"\";\n        }\n        this.value = data;\n    },\n    valueOf() {\n        if (this.xuArr.length !== 0) {\n            if (Array.isArray(this.value)) {\n                return this.xuArr.concat(this.value);\n            } else if (typeof this.value === \"object\") {\n                this.xuArr.push(JSON.stringify(this.value));\n                return this.xuArr;\n            } else {\n                this.xuArr.push(this.value);\n                return this.xuArr;\n            }\n        } else {\n            if (!Array.isArray(this.value) && typeof this.value === \"object\") {\n                return JSON.stringify(this.value);\n            } else {\n                return this.value;\n            }\n        }\n    },\n    ty(target) {\n        let data = this.getValue(\"String\");\n        this.setValue(split(data, target)[1] || \"\");\n    },\n    ty2(target) {\n        let data = this.getValue(\"String\");\n        this.setValue(rsplit(data, target)[1] || \"\");\n    },\n    tz(target) {\n        let data = this.getValue(\"String\");\n        this.setValue(split(data, target)[0] || \"\");\n    },\n    tz2(target) {\n        let data = this.getValue(\"String\");\n        this.setValue(rsplit(data, target)[0] || \"\");\n    },\n    t() {\n        let data = this.getValue(\"String\");\n        this.setValue(data.replace(/<[^>]+>/g, \"\"));\n    },\n    tj(target) {\n        this.setValue(this.getValue(\"String\") + target);\n    },\n    tzc(target) {\n        let index = Number(target);\n        this.setValue(this.getValue(\"String\").substring(0, index));\n    },\n    tsk() {\n        this.setValue(this.getValue(\"String\").trim());\n    },\n    th(target) {\n        let targetArr = split(target, \"##\");\n        if (targetArr.length === 1) {\n            return this.tz(target);\n        }\n        let reg = new RegExp(targetArr[0], \"g\");\n        this.setValue(this.getValue(\"String\").replace(reg, targetArr[1]));\n    },\n    th2(target) {\n        let targetArr = split(target, \"##\");\n        if (targetArr.length === 1) {\n            return this.tz(target);\n        }\n        this.setValue(this.getValue(\"String\").split(targetArr[0]).join(targetArr[1]));\n    },\n    /*tvar(target) {\n        let data = this.getValue(\"String\");\n        this.xObj[target]=data;\n        this.setValue(this.source);\n    },\n    trl(target) {\n        let data = this.getValue(\"String\");\n        let y = this.xObj[target]||\"\";\n        this.setValue(data+y);\n    },\n    tll(target) {\n        let data = this.getValue(\"String\");\n        let y = this.xObj[target]||\"\";\n        this.setValue(y+data);\n    },*/\n    tx() {\n        let data = this.getValue(\"String\");\n        if (data.indexOf(this.source) + this.source.length !== data.length) {\n            this.setValue((this.xuArr.pop() || \"\") + data + this.source);\n\n        }\n    },\n    byt(target) {\n        parseDomForArray(this.getValue(\"String\"), \"html&&*:contains(\" + target + \")\");\n    },\n    fg(target) {\n        let reg = new RegExp(target);\n        this.setValue(this.getValue(\"String\").split(reg));\n    },\n    en64() {\n        this.setValue(base64Encode(this.getValue(\"String\")));\n    },\n    dn64() {\n        this.setValue(base64Decode(this.getValue(\"String\")));\n    },\n    d(v) {\n        this.setValue(decodeStr(this.getValue(\"String\"), v));\n    },\n    en(v) {\n        this.setValue(encodeStr(this.getValue(\"String\"), v));\n    },\n    tot() {\n        this.setValue(JSON.stringify(this.getValue(\"String\")));\n    },\n    /*toij() {\n        this.setValue(JSON.parse(this.getValue(\"String\")));\n    },*/\n    type() {\n        this.setValue(Object.prototype.toString.call(this.value));\n    },\n    i(target) {\n        let data = this.value;\n        let [s, e] = split(target, \",\");\n        if (e === undefined) {\n            s = Number(s);\n            if (s >= 0 && s < data.length) {\n                this.setValue(data[s]);\n            } else if (s < 0 && data.length + s >= 0) {\n                this.setValue(data[data.length + s]);\n            }\n        } else {\n            this.setValue(data.slice(s, e));\n        }\n    },\n    ij(target) {\n        let data = this.getValue(\"Array\");\n        data.push(target);\n        this.setValue(data);\n    },\n    is(target) {\n        let reg = new RegExp(target);\n        let data = this.getValue(\"Array\");\n        let newData = data.filter(item => !item.test(reg));\n        this.setValue(newData);\n    },\n    il(target) {\n        let reg = new RegExp(target);\n        let data = this.getValue(\"Array\");\n        let newData = data.filter(item => item.test(reg));\n        this.setValue(newData);\n    },\n    it(target) {\n        let data = this.getValue(\"Array\");\n        this.setValue(data.join(target));\n    },\n    ix() {\n        let data = this.getValue(\"Array\");\n        this.xuArr = this.xuArr.concat(data);\n        this.setValue(this.source);\n    },\n    dx() {\n        let data = this.getValue(\"Array\");\n        data.reverse();\n    },\n    get(target) {\n        try {\n            let data = this.getValue(\"String\");\n            let doc = Jsoup.parseBodyFragment(data);\n            let select = doc.select(target);\n            select = select.toArray();\n            let newdata = [];\n            for (let item of select) {\n                newdata.push(String(item.outerHtml()));\n            }\n            this.setValue(newdata);\n        } catch (e) {\n            this.setValue(\"\");\n        }\n\n    },\n    a(target) {\n        try {\n            let data = this.getValue(\"String\");\n            let doc = Jsoup.parse(data);\n            let attr = \"\";\n            let body = doc.body().select(\"*\").eq(1);\n            if (body.hasAttr(target)) {\n                attr = String(body.attr(target));\n            }\n            this.setValue(attr);\n        } catch (e) {\n            this.setValue(\"\");\n        }\n    },\n    json(target) {\n        if (target != \"\") {\n            try {\n                let data = JSON.parse(this.getValue(\"String\"))[target];\n                this.setValue(data === undefined ? \"\" : typeof data === \"string\" ? data : JSON.stringify(data));\n            } catch (e) {\n                throw new E2Error(\"无法将其转换为 JSON对象:\" + target + \"\\n\" + e.message, undefined, this.value, \"dataType\");\n            }\n        } else {\n            try {\n                let data = JSON.parse(this.getValue(\"String\"));\n                if (Array.isArray(data)) {\n                    this.setValue(data);\n                } else {\n                    this.setValue(\"\");\n                }\n            } catch (e) {\n                this.setValue(\"\");\n            }\n        }\n    },\n    c(target) {\n        let data = this.value;\n        if (Array.isArray(data)) {\n            data = data[0] === undefined ? \"\" : data[0];\n        } else if (typeof data === \"object\") {\n            data = JSON.stringify(data);\n        }\n        this.setValue(data + target + this.source);\n    },\n    ct(target) {\n        let data = this.value;\n        if (Array.isArray(data)) {\n            data = data[0] === undefined ? \"\" : data[0];\n        } else if (typeof data === \"object\") {\n            data = JSON.stringify(data);\n        }\n        this.setValue(data + target);\n    },\n    or() {\n        if (this.value !== \"\" && this.value !== undefined) {\n            return true;\n        } else {\n            this.setValue(this.source);\n            return false;\n        }\n    },\n    xu() {\n        let data = this.value;\n        if (Array.isArray(data)) {\n            for (let v of data) {\n                this.xuArr.push(v);\n            }\n        } else if (typeof data === \"object\") {\n            this.xuArr.push(JSON.stringify(data));\n        } else {\n            this.xuArr.push(data);\n        }\n        this.setValue(this.source);\n    },\n    st(target) {\n        this.it(target);\n    },\n    z(target) {\n        let data = this.getValue(\"String\");\n        let reg = new RegExp(target, \"g\");\n        let newdata = data.match(reg) || [];\n        this.setValue(newdata);\n    },\n    z2(target) {\n        let data = this.getValue(\"String\");\n        let reg = new RegExp(target);\n        let newdata = data.match(reg) || [];\n        if (newdata.length > 0) {\n            newdata.splice(0, 1);\n        }\n        this.setValue(newdata);\n    }\n}\n$.exports = E2Hiker;"},{"col_type":"movie_3","name":"get e2Rex","path":"getE2Rex","rule":"js:\n//const E2Hiker = $.require(\"hiker://page/E2ToHiker?rule=E2ToHiker\");\n//const E2Hiker = $.require(\"hiker://page/E2ToHiker2?rule=E2ToHiker\");\nconst E2Error = $.require(\"hiker://page/E2Error?rule=E2ToHiker\");\nfunction getE2Rex(E2Hiker,t,r) {\n    let arr = [];\n    let funcName = \"\",\n        funcParam = \"\";\n    let status = 0;\n    let tran = false;\n    for (let i = 0; i < r.length; i++) {\n        let k = r[i],\n            s = i > 0 ? r[i - 1] : \"\",\n            x = i + 1 < r.length ? r[i + 1] : \"\";\n        if (k === \".\" && status === 0) {\n            status = 1;\n            continue;\n        } else if (status === 1 && k !== \"(\") {\n            funcName += k;\n            continue;\n        } else if (status === 1 && k === \"(\") {\n            if (k + r[i + 1] + r[i + 2] === \"(@@\") {\n                i++, i++;\n                status = 3;\n            } else {\n                status = 2;\n            }\n            continue;\n        } else if (status === 3 && k + r[i + 1] + r[i + 2] !== \"@@)\") {\n            funcParam += k;\n            continue;\n        } else if (status === 3 && k + r[i + 1] + r[i + 2] === \"@@)\") {\n            i++, i++;\n            arr.push([funcName, funcParam]);\n            status = 0, funcName = \"\", funcParam = \"\";\n            continue;\n        } else if (status === 2 && tran) {\n            tran = false;\n            funcParam += k;\n            continue;\n        } else if (status === 2 && k === \"\\\\\") {\n            tran = true;\n            funcParam += k;\n            continue;\n        } else if (status === 2 && k !== \")\" && k !== \"\\\\\") {\n            funcParam += k;\n            continue;\n        } else if (status === 2 && k === \")\") {\n            if ([\"z\", \"z2\", \"th\", \"fg\"].includes(funcName)) {\n                funcParam = funcParam.replace(/\\\\\\)/g, \")\").replace(/\\\\\\(/g, \"(\");\n            }\n            arr.push([funcName, funcParam]);\n            status = 0, funcName = \"\", funcParam = \"\";\n            continue;\n        } else {\n            throw new E2Error(\"未发现函数起始符[.]:)\",r,t);\n        }\n    }\n    if (status !== 0) {\n        throw new E2Error(\"找不到结束符[)]\",r,t);\n    }\n    let e2Hiker = new E2Hiker(t);\n    var target;\n    try {\n        for (target of arr) {\n            let y = e2Hiker[target[0]](target[1]);\n            if (target[0] === \"or\" && y === true) {\n                break;\n            }\n        }\n    } catch (e) {\n        if(e.type===\"dataType\"){\n            e.rule=target[0];\n            throw e;\n        }else if(/Cannot find function (.*?) /.test(e.message)){\n            throw new E2Error(\"未知的函数\"+RegExp.$1,r,t);\n        }else{\n            throw e;\n        }\n    }\n    return e2Hiker.valueOf();\n}\n\n$.exports = getE2Rex;"},{"col_type":"movie_3","name":"E2Rex2","path":"E2Rex2","rule":"js:\nconst getE2Rex = $.require(\"hiker://page/getE2Rex?rule=E2ToHiker\");\nconst E2Hiker = $.require(\"hiker://page/E2ToHiker2?rule=E2ToHiker\")\nfunction e2Rex(t,r){\n    return getE2Rex(E2Hiker,t,r);\n}\n$.exports = e2Rex;"},{"col_type":"movie_3","name":"完整查看","path":"ViewText","rule":"js:\nvar {title,text}=MY_PARAMS;\nsetPageTitle(\"查看完整:\" + title);\nlet mark = getVar(\"e2.Mark\");\n\nvar d = [];\nd.push({\n    title: \"转为源文本\",\n    url: $(\"#noLoading#\").lazyRule(text => {\n        putVar(\"e2.Source\", text);\n        back();\n        return \"hiker://empty\";\n    }, text),\n    col_type: \"text_2\"\n}, {\n    title: \"复制内容\",\n    url: \"copy://\" + text,\n    col_type: \"text_2\"\n});\n/*\nif ((typeof getAppVersion === \"function\") && (getAppVersion() >= 1863)) {\n    addListener('onClose', 'putVar(\"e2.Mark\",\"\")');\n}\nd.push({\n    title: \"标记\",\n    url: \"putVar('e2.Mark',input);refreshPage(false)\",\n    col_type: \"input\",\n    desc: \"输入需要标红的字符\",\n    extra: {\n        defaultValue: mark\n    }\n});\n\n// 字符过滤器\nconst matchList  = {\n  \"<\":\"&lt;\",\n  \">\": \"&gt;\",\n  \"&\": \"&amp;\",\n  '\"': \"&quot;\",\n  \"'\": \"acute;\",\n  \" \": \"&nbsp;\",\n  \"\\n\":\"<br>\"\n}\n// 字符过滤器\nfunction htmlEscape(text){\n  let regStr = '(' + Object.keys(matchList).toString() + ')'\n  regStr = regStr.replace(/,/g, ')|(')  \n  const regExp = new RegExp(regStr, 'g')\n  return text.replace(regExp, match => matchList[match])\n}\n\ntext=htmlEscape(text);\nif(mark!==\"\"){\n    mark=htmlEscape(mark);\n    let markz=new RegExp(mark,\"g\");\n    text=text.replace(markz,t=>\"<font color='red'>\"+t+\"</font>\");\n}\n*/\nd.push({\n    col_type: \"line_blank\"\n}, {\n    title: text,\n    col_type: \"long_text\"\n}, {\n    col_type: \"line_blank\"\n});\nsetResult(d);"}],"title":"E2ToHiker","author":"@LoyDgIk","version":2,"url":"hiker://empty","col_type":"text_1","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js: \n\nlet d = [];\n//是否开启关闭规则重置页面\nconst ResetPage = fetch(\"hiker://files/e2ResetPage\") || \"0\";\nlet rex = getVar(\"e2.Rex\");\nlet rex2 = getVar(\"e2.Rex2\");\nlet start = getVar(\"e2.Start\", \"0\");\nlet source = getVar(\"e2.Source\");\nlet method = getVar(\"e2.Method\", \"0\");\nlet regExpMethod = getVar(\"e2.regExpMethod\", \"g\");\nlet strict = getVar(\"e2.Strict\", \"1\");\nif ((typeof getAppVersion === \"function\") && (getAppVersion() >= 1863) && (ResetPage === \"0\")) {\n    addListener('onClose', $.toString(() => {\n        clearVar(\"e2.Rex\");\n        clearVar(\"e2.Rex2\");\n        clearVar(\"e2.Start\");\n        clearVar(\"e2.OutputCache\");\n        clearVar(\"e2.Source\");\n        clearVar(\"e2.Method\");\n        clearVar(\"e2.regExpMethod\");\n        clearVar(\"e2.Strict\");\n    }));\n}\n\nfunction setMethod(item) {\n    return $(\"#noLoading#\").lazyRule((method, item) => {\n        putVar(\"e2.Method\", item);\n        if (method !== item) {\n            putVar(\"e2.Rex\", \"\");\n            putVar(\"e2.Rex2\", \"\");\n            //putVar(\"e2.OutputCache\",\"\");\n            refreshPage(false);\n        }\n        return \"hiker://empty\";\n    }, method, item);\n}\n\nfunction setReference(title, pageUrl) {\n    return $().rule((title, pageUrl) => {\n        setPageTitle(title);\n        setResult([{\n            title: JSON.parse(fetch(pageUrl)).rule,\n            col_type: \"rich_text\"\n        }]);\n    }, title, pageUrl);\n}\nd.push({\n    title: [\"◉\", \"○\", \"○\"][method] + \"E2\",\n    url: method !== \"0\" ? setMethod(\"0\") : setReference(\"E2语法\", \"hiker://page/E2参考\"),\n    col_type: \"text_3\"\n});\nd.push({\n    title: [\"○\", \"◉\", \"○\"][method] + \"正则\",\n    url: method !== \"1\" ? setMethod(\"1\") : setReference(\"参考语法\", \"hiker://page/正则参考\"),\n    col_type: \"text_3\"\n});\nd.push({\n    title: [\"○\", \"○\", \"◉\"][method] + \"海阔\",\n    url: setMethod(\"2\"),\n    col_type: \"text_3\"\n});\nd.push({\n    col_type: \"line\"\n});\nd.push({\n    title: \"执行\",\n    url: \"putVar('e2.Start', '1');refreshPage(false);\",\n    col_type: \"input\",\n    desc: [\"E2规则\", \"正则表达式\", \"列表规则(如body&&li)\"][method],\n    extra: {\n        defaultValue: rex,\n        onChange: \"putVar('e2.Rex',input);\"\n    }\n});\nif (method === \"1\") {\n    function setModifier(modifier) {\n        return $(\"#noLoading#\").lazyRule((regExpMethod, modifier) => {\n            if (regExpMethod.includes(modifier)) {\n                regExpMethod = regExpMethod.replace(modifier, \"\");\n            } else {\n                regExpMethod += modifier;\n            }\n            putVar(\"e2.regExpMethod\", regExpMethod);\n            refreshPage(false);\n            return \"hiker://empty\";\n        }, regExpMethod, modifier)\n    }\n    d.push({\n        title: \"““””<font color='#23AE6D'>修饰符：</font>\",\n        url: \"hiker://empty\",\n        col_type: \"scroll_button\"\n    }, {\n        title: regExpMethod.includes(\"g\") ? \"““g””\" : \"g\",\n        url: setModifier(\"g\"),\n        col_type: \"scroll_button\"\n    }, {\n        title: regExpMethod.includes(\"m\") ? \"““m””\" : \"m\",\n        url: setModifier(\"m\"),\n        col_type: \"scroll_button\"\n    }, {\n        title: regExpMethod.includes(\"i\") ? \"““i””\" : \"i\",\n        url: setModifier(\"i\"),\n        col_type: \"scroll_button\"\n    }, {\n        title: \"““””<font color='#23AE6D'>||</font>\",\n        url: \"hiker://empty\",\n        col_type: \"scroll_button\"\n    });\n} else if (method === \"0\") {\n    d.push({\n        title: \"““””<font color='#23AE6D'>严格模式：</font>\",\n        url: \"hiker://empty\",\n        col_type: \"scroll_button\"\n    }, {\n        title: [\"☑\", \"☒\"][strict],\n        url: $(\"#noLoading#\").lazyRule(strict => {\n            if (strict === \"0\") {\n                putVar(\"e2.Strict\", \"1\")\n            } else {\n                putVar(\"e2.Strict\", \"0\")\n            }\n            putVar(\"e2.Rex\", \"\");\n            refreshPage(false);\n            return \"hiker://empty\";\n        }, strict),\n        col_type: \"scroll_button\"\n    }, {\n        title: \"““””<font color='#23AE6D'>||</font>\",\n        url: \"hiker://empty\",\n        col_type: \"scroll_button\"\n    });\n} else if (method === \"2\") {\n    d.push({\n        title: \"执行\",\n        url: \"putVar('e2.Start', '2');refreshPage(false);\",\n        col_type: \"input\",\n        desc: \"节点规则(如a&&href)\",\n        extra: {\n            defaultValue: rex2,\n            onChange: \"putVar('e2.Rex2',input);\"\n        }\n    }, {\n        title: \"↸\",\n        url: \"hiker://page/ViewText\",\n        col_type: \"scroll_button\",\n        extra: {\n            title: \"规则2\",\n            text: rex2\n        }\n    });\n}\nd.push({\n    title: \"⇧\",\n    url: \"hiker://page/ViewText\",\n    col_type: \"scroll_button\",\n    extra: {\n        title: \"规则\",\n        text: rex\n    }\n}, {\n    title: \"⇩\",\n    url: \"hiker://page/ViewText\",\n    col_type: \"scroll_button\",\n    extra: {\n        title: \"源文本\",\n        text: source\n    }\n}, {\n    title: [\"▣\", \"□\"][ResetPage],\n    url: $(\"#noLoading#\").lazyRule(ResetPage => {\n        if (ResetPage === \"0\") {\n            writeFile(\"hiker://files/e2ResetPage\", \"1\");\n        } else {\n            writeFile(\"hiker://files/e2ResetPage\", \"0\");\n        }\n        refreshPage(false);\n        return \"hiker://empty\";\n    }, ResetPage),\n    col_type: \"scroll_button\"\n}, {\n    title: \"🔗\",\n    url: $(\"#noLoading#\").lazyRule(() => {\n        let url = getVar(\"e2.Request\").split(\";\")[0];\n        if (url === \"\") {\n            return \"toast://没有访问链接\";\n        } else {\n            return url;\n        }\n    }),\n    col_type: \"scroll_button\"\n});\nd.push({\n    title: \"⚡\",\n    url: $.toString(() => $(getVar(\"e2.Request\"), \"支持海阔格式url\").input(() => {\n        showLoading(\"正在获取源码\");\n        let h = {};\n        let url;\n        let ht = input.split(\";\");\n        for (let i = 0; i < ht.length; i++) {\n            let item = ht[i];\n            if (item.search(/http|hiker|file/) === 0) {\n                url = item;\n            } else if (/get|post/i.test(item)) {\n                h.method = item;\n            } else if (item.indexOf(\"{\") === 0 && item.lastIndexOf(\"}\") === item.length - 1) {\n                let hr = item.substring(1, item.length - 1).split(\"&&\");\n                h.headers = {}\n                hr.forEach(it => {\n                    let hri = it.split(\"@\");\n                    h.headers[hri[0]] = hri[1].replace(/；；/g, \";\");\n                });\n            }\n        }\n        putVar(\"e2.Request\", input);\n        let html = request(url, h);\n        putVar(\"e2.Source\", html);\n        hideLoading();\n        refreshPage(false);\n    })),\n    col_type: \"input\",\n    desc: \"源文本\",\n    extra: {\n        type: \"textarea\",\n        //titleVisible: false,\n        onChange: \"putVar('e2.Source',input)\",\n        defaultValue: source\n    }\n});\n\nd.push({\n    col_type: \"line_blank\"\n});\n/*\nd.push({\n    title: \"<strong><big>输出</big></strong>\",\n    col_type: \"rich_text\"\n});\nd.push({\n    col_type: \"line\"\n});\n*/\nfunction error(msg, r, c) {\n    setError(\"\\n\\n\" +\n        \"errorMessage：\" + msg + \"\\n\\n\" +\n        \"处理规则：\" + r + \"\\n\\n\" +\n        \"处理内容：\" + c + \"\\n\");\n}\n\nfunction onE2() {\n\n    let e2Rex;\n    if (strict === \"0\") {\n        e2Rex = $.require(\"hiker://page/E2Rex\");\n    } else {\n        e2Rex = $.require(\"hiker://page/E2Rex2\");\n    }\n    try {\n        return e2Rex(source, rex);\n    } catch (e) {\n        putVar('e2.Start', '0');\n        if (e.name === \"E2Error\") {\n            error(e.message, e.rule, e.context);\n        } else {\n            throw e;\n        }\n    }\n}\n\nfunction onMatch() {\n    let reg = new RegExp(rex, regExpMethod);\n    if (regExpMethod.includes(\"g\")) {\n        return source.match(reg) || [];\n    } else {\n        let result = source.match(reg);\n        if (null == result || 0 == result.length) {\n            return \"\";\n        } else {\n            return result;\n        }\n    }\n}\nfunction split(text, target, count) {\n    count = count === undefined ? 1 : count;\n    let array = [text];\n    for (let i = 0; i < count; i++) {\n        text = array[i];\n        let index = text.indexOf(target);\n        if (index === -1) {\n            break;\n        }\n        array[i] = text.slice(0, index);\n        array[i + 1] = text.slice(index + target.length);\n    }\n    return array;\n}\nfunction onHiker() {\n    try {\n        if (start === \"1\") {\n            if (!rex && !source) return;\n            return parseDomForArray(source, rex);\n        } else if (start === \"2\") {\n            let data = JSON.parse(getVar(\"e2.OutputCache\") || \"[]\");\n            if (data.length === 0) return;\n            let arrA=split(rex2,\".js:\");\n            let result=parseDomForHtml(data[0],arrA[0]);\n            if(arrA.length===1){\n                return result;\n            }else{\n                let func=new Function(\"input\",\"return \"+arrA[1]);\n                return func(result);\n            }\n        }\n    } catch (e) {\n        putVar('e2.Start', '0');\n        if (start === \"1\") {\n            error(e.message, rex, source);\n        } else if (start === \"2\") {\n            error(e.message, rex2, getVar(\"e2.OutputCache\"));\n        }\n    }\n}\n\nfunction renderOutput(data) {\n    if (start !== \"0\") {\n        if (!Array.isArray(data)) {\n            data = [data];\n        } else if (data === undefined) {\n            return;\n        }\n        putVar(\"e2.OutputCache\", JSON.stringify(data));\n    } else {\n        data = JSON.parse(getVar(\"e2.OutputCache\") || \"[]\");\n    }\n\n    for (let tf of data) {\n        d.push({\n            title: tf,\n            url: \"hiker://page/ViewText\",\n            col_type: \"text_1\",\n            extra: {\n                title: \"输出\",\n                text: tf\n            }\n        }, {\n            col_type: \"big_blank_block\"\n        }, {\n            col_type: \"line\"\n        });\n\n    }\n}\nswitch (method) {\n    case \"0\":\n        if (!rex && !source) break;\n        renderOutput(onE2());\n        break;\n    case \"1\":\n        if (!rex && !source) break;\n        renderOutput(onMatch());\n        break;\n    case \"2\":\n        renderOutput(onHiker());\n        break;\n}\nputVar('e2.Start', '0');\nsetResult(d);","searchFind":"","search_url":"","titleColor":"","group":"⑥不常用🔧","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"E2Rex\",\"path\":\"E2Rex\",\"rule\":\"js:\\nconst getE2Rex = $.require(\\\"hiker://page/getE2Rex?rule=E2ToHiker\\\");\\nconst E2Hiker = $.require(\\\"hiker://page/E2ToHiker?rule=E2ToHiker\\\")\\nfunction e2Rex(t,r){\\n    return getE2Rex(E2Hiker,t,r);\\n}\\n$.exports = e2Rex;\"},{\"col_type\":\"movie_3\",\"name\":\"E2ToHiker\",\"path\":\"E2ToHiker\",\"rule\":\"js:\\nconst E2Error = $.require(\\\"hiker://page/E2Error?rule=E2ToHiker\\\");\\n\\nfunction E2Hiker(value) {\\n    if (typeof value === \\\"string\\\") {\\n        this.source = value;\\n        this.value = value;\\n        this.xuArr = [];\\n        this.xObj = [];\\n    } else {\\n        throw new E2Error(\\\"E2Hiker需要一个string参数\\\",\\\"初始化错误\\\",value);\\n    }\\n}\\n\\nfunction split(text, target, count) {\\n    count = count === undefined ? 1 : count;\\n    let array = [text];\\n    for (let i = 0; i < count; i++) {\\n        text = array[i];\\n        let index = text.indexOf(target);\\n        if (index === -1) {\\n            break;\\n        }\\n        array[i] = text.slice(0, index);\\n        array[i + 1] = text.slice(index + target.length);\\n    }\\n    return array;\\n}\\n\\nfunction rsplit(text, target, count) {\\n    count = count === undefined ? 1 : count;\\n    let array = [text];\\n    for (let i = 0; i < count; i++) {\\n        text = array[0];\\n        let index = text.lastIndexOf(target);\\n        if (index === -1) {\\n            break;\\n        }\\n        array[0] = text.slice(0, index);\\n        array.splice(1, 0, text.slice(index + target.length));\\n    }\\n    return array;\\n}\\nE2Hiker.prototype = {\\n    constructor: E2Hiker,\\n    getValue(type) {\\n        let Ttype = Object.prototype.toString.call(this.value);\\n        type = \\\"[object \\\" + type + \\\"]\\\";\\n        \\n        if (Ttype === type) {\\n            return this.value;\\n        } else {\\n            throw new E2Error(\\\"函数需要\\\"+type+\\\"类型，而真实类型为\\\"+Ttype,undefined,this.value,\\\"dataType\\\");\\n        }\\n    },\\n    getValue2(arr) {\\n        let typeArr = arr.map(item => \\\"[object \\\" + item + \\\"]\\\");\\n        let Ttype = Object.prototype.toString.call(this.value);\\n        if (typeArr.includes(Ttype)) {\\n            return this.value;\\n        } else {\\n            throw new E2Error(\\\"函数需要\\\"+typeArr.join(\\\"|\\\")+\\\"类型，而真实类型为\\\"+Ttype,undefined,this.value,\\\"dataType\\\");\\n        }\\n    },\\n    setValue(data) {\\n        if (typeof data === \\\"number\\\") {\\n            data = data + \\\"\\\";\\n        }\\n        this.value = data;\\n    },\\n    valueOf() {\\n        if (this.xuArr.length !== 0) {\\n            if (Array.isArray(this.value)) {\\n                return this.xuArr.concat(this.value);\\n            } else if (typeof this.value === \\\"object\\\") {\\n                this.xuArr.push(JSON.stringify(this.value));\\n                return this.xuArr;\\n            } else {\\n                this.xuArr.push(this.value);\\n                return this.xuArr;\\n            }\\n        } else {\\n            if (!Array.isArray(this.value) && typeof this.value === \\\"object\\\") {\\n                return JSON.stringify(this.value);\\n            } else {\\n                return this.value;\\n            }\\n        }\\n    },\\n    ty(target) {\\n        let data = this.getValue(\\\"String\\\");\\n        this.setValue(split(data, target)[1] || \\\"\\\");\\n    },\\n    ty2(target) {\\n        let data = this.getValue(\\\"String\\\");\\n        this.setValue(rsplit(data, target)[1] || \\\"\\\");\\n    },\\n    tz(target) {\\n        let data = this.getValue(\\\"String\\\");\\n        this.setValue(split(data, target)[0] || \\\"\\\");\\n    },\\n    tz2(target) {\\n        let data = this.getValue(\\\"String\\\");\\n        this.setValue(rsplit(data, target)[0] || \\\"\\\");\\n    },\\n    t() {\\n        let data = this.getValue(\\\"String\\\");\\n        this.setValue(data.replace(/<[^>]+>/g, \\\"\\\"));\\n    },\\n    tj(target) {\\n        this.setValue(this.getValue(\\\"String\\\") + target);\\n    },\\n    tzc(target) {\\n        let index = Number(target);\\n        this.setValue(this.getValue(\\\"String\\\").substring(0,index));\\n    },\\n    tsk() {\\n        this.setValue(this.getValue(\\\"String\\\").trim());\\n    },\\n    th(target) {\\n        let targetArr = split(target, \\\"##\\\");\\n        if (targetArr.length === 1) {\\n            return this.tz(target);\\n        }\\n        let reg = new RegExp(targetArr[0], \\\"g\\\");\\n        this.setValue(this.getValue(\\\"String\\\").replace(reg, targetArr[1]));\\n    },\\n    th2(target){\\n        let targetArr = split(target, \\\"##\\\");\\n        if (targetArr.length === 1) {\\n            return this.tz(target);\\n        }\\n        this.setValue(this.getValue(\\\"String\\\").split(targetArr[0]).join(targetArr[1]));\\n    },\\n    /*tvar(target) {\\n        let data = this.getValue(\\\"String\\\");\\n        this.xObj[target]=data;\\n        this.setValue(this.source);\\n    },\\n    trl(target) {\\n        let data = this.getValue(\\\"String\\\");\\n        let y = this.xObj[target]||\\\"\\\";\\n        this.setValue(data+y);\\n    },\\n    tll(target) {\\n        let data = this.getValue(\\\"String\\\");\\n        let y = this.xObj[target]||\\\"\\\";\\n        this.setValue(y+data);\\n    },*/\\n    tx(){\\n        let data = this.getValue(\\\"String\\\");\\n        if(data.indexOf(this.source)+this.source.length!==data.length){\\n            this.setValue((this.xuArr.pop()||\\\"\\\")+data+this.source);\\n        }\\n    },\\n    byt(target) {\\n        parseDomForArray(this.getValue(\\\"String\\\"), \\\"html&&*:contains(\\\" + target + \\\")\\\");\\n    },\\n    fg(target) {\\n        let reg = new RegExp(target);\\n        this.setValue(this.getValue(\\\"String\\\").split(reg));\\n    },\\n    en64() {\\n        this.setValue(base64Encode(this.getValue(\\\"String\\\")));\\n    },\\n    dn64() {\\n        this.setValue(base64Decode(this.getValue(\\\"String\\\")));\\n    },\\n    d(v) {\\n        this.setValue(decodeStr(this.getValue(\\\"String\\\"), v));\\n    },\\n    en(v) {\\n        this.setValue(encodeStr(this.getValue(\\\"String\\\"), v));\\n    },\\n    tot() {\\n        this.setValue(JSON.stringify(this.getValue(\\\"String\\\")));\\n    },\\n    toij() {\\n        this.setValue(JSON.parse(this.getValue(\\\"String\\\")));\\n    },\\n    type() {\\n        this.setValue(Object.prototype.toString.call(this.value));\\n    },\\n    i(target) {\\n        let data = this.getValue2([\\\"String\\\", \\\"Array\\\"]);\\n        let [s, e] = split(target, \\\",\\\");\\n        if (e === undefined) {\\n            s=Number(s);\\n            if(s>=0){\\n                this.setValue(data[s] || data);\\n            }else if(s<0){\\n                this.setValue(data[data.length+s] || data);\\n            }\\n        } else {\\n            this.setValue(data.slice(s, e));\\n        }\\n    },\\n    ij(target) {\\n        let data = this.getValue(\\\"Array\\\");\\n        data.push(target);\\n        this.setValue(data);\\n    },\\n    is(target) {\\n        let reg = new RegExp(target);\\n        let data = this.getValue(\\\"Array\\\");\\n        let newData = data.filter(item => !item.test(reg));\\n        this.setValue(newData);\\n    },\\n    il(target) {\\n        let reg = new RegExp(target);\\n        let data = this.getValue(\\\"Array\\\");\\n        let newData = data.filter(item => item.test(reg));\\n        this.setValue(newData);\\n    },\\n    it(target) {\\n        let data = this.getValue(\\\"Array\\\");\\n        this.setValue(data.join(target));\\n    },\\n    ix(){\\n        let data = this.getValue(\\\"Array\\\");\\n        this.xuArr=this.xuArr.concat(data);\\n        this.setValue(this.source);\\n    },\\n    dx(){\\n        let data = this.getValue(\\\"Array\\\");\\n        data.reverse();\\n    },\\n    get(target) {\\n        let data = this.getValue(\\\"String\\\");\\n        try {\\n            this.setValue(parseDomForHtml(data, target));\\n        } catch (e) {\\n            this.setValue(\\\"\\\");\\n        }\\n    },\\n    geta(target) {\\n        let data = this.getValue(\\\"String\\\");\\n        try {\\n            this.setValue(parseDomForArray(data, target));\\n        } catch (e) {\\n            this.setValue([]);\\n        }\\n    },\\n    getp(target){\\n        let data = this.getValue(\\\"Array\\\");\\n        data=data.map(item=>parseDomForHtml(item, target));\\n        this.setValue(data);\\n    },\\n    json(target) {\\n        let data = this.getValue2([\\\"Object\\\",\\\"Array\\\"])[target];\\n        this.setValue(data === undefined ? \\\"\\\" : data);\\n    },\\n    c(target) {\\n        let data = this.value;\\n        if (Array.isArray(data)) {\\n            data = data[0] === undefined ? \\\"\\\" : data[0];\\n        } else if (typeof data === \\\"object\\\") {\\n            data = JSON.stringify(data);\\n        }\\n        this.setValue(data + target + this.source);\\n    },\\n    ct(target) {\\n        let data = this.value;\\n        if (Array.isArray(data)) {\\n            data = data[0] === undefined ? \\\"\\\" : data[0];\\n        } else if (typeof data === \\\"object\\\") {\\n            data = JSON.stringify(data);\\n        }\\n        this.setValue(data + target);\\n    },\\n    or() {\\n        if (this.value !== \\\"\\\" && this.value !== undefined) {\\n            return true;\\n        } else {\\n            this.setValue(this.source);\\n            return false;\\n        }\\n    },\\n    xu() {\\n        let data = this.value;\\n        if (Array.isArray(data)) {\\n            for (let v of data) {\\n                this.xuArr.push(v);\\n            }\\n        } else if (typeof data === \\\"object\\\") {\\n            this.xuArr.push(JSON.stringify(data));\\n        } else {\\n            this.xuArr.push(data);\\n        }\\n        this.setValue(this.source);\\n    },\\n    st(target){\\n        this.it(target);\\n    },\\n    z(target){\\n        let data = this.getValue(\\\"String\\\");\\n        let reg = new RegExp(target,\\\"g\\\");\\n        let newdata = data.match(reg)||[];\\n        this.setValue(newdata);\\n    },\\n    z2(target){\\n        let data = this.getValue(\\\"String\\\");\\n        let reg = new RegExp(target);\\n        let newdata = data.match(reg)||[];\\n        if(newdata.length>0){\\n            newdata.splice(0,1);\\n        }\\n        this.setValue(newdata);\\n    }\\n}\\n$.exports = E2Hiker;\"},{\"col_type\":\"movie_3\",\"name\":\"E2Error\",\"path\":\"E2Error\",\"rule\":\"js:\\nfunction E2Error(message, rule,context,type) {\\n    this.message = message || \\\"\\\";\\n    this.rule = rule;\\n    this.context = context;\\n    this.name = \\\"E2Error\\\";\\n    this.type = type||\\\"error\\\";\\n}\\nE2Error.prototype = new Error();\\nE2Error.prototype.constructor = E2Error;\\n\\n$.exports = E2Error;\"},{\"col_type\":\"movie_3\",\"name\":\"正则参考\",\"path\":\"正则参考\",\"rule\":\"<code>.</code> - 除换行符以外的所有字符。<br>\\n<code>^</code> - 字符串开头。<br>\\n<code>$</code> - 字符串结尾。<br>\\n<code>\\\\d,\\\\w,\\\\s</code> - 匹配数字、字符、空格。<br>\\n<code>\\\\D,\\\\W,\\\\S</code> - 匹配非数字、非字符、非空格。<br>\\n<code>[abc]</code> - 匹配 a、b 或 c 中的一个字母。<br>\\n<code>[a-z]</code> - 匹配 a 到 z 中的一个字母。<br>\\n<code>[^abc]</code> - 匹配除了 a、b 或 c 中的其他字母。<br>\\n<code>aa|bb</code> - 匹配 aa 或 bb。<br>\\n<code>?</code> - 0 次或 1 次匹配。<br>\\n<code>*</code> - 匹配 0 次或多次。<br>\\n<code>+</code> - 匹配 1 次或多次。<br>\\n<code>{n}</code> - 匹配 n次。<br>\\n<code>{n,}</code> - 匹配 n次以上。<br>\\n<code>{m,n}</code> - 最少 m 次，最多 n 次匹配。<br>\\n<code>(expr)</code> - 捕获 expr 子模式,以 \\\\1 使用它。<br>\\n<s><code>(?:expr)</code> - 忽略捕获的子模式。</s><br>\\n<s><code>(?=expr)</code> - 正向预查模式 expr。</s><br>\\n<s><code>(?!expr)</code> - 负向预查模式 expr。</s><br>\"},{\"col_type\":\"movie_3\",\"name\":\"E2参考\",\"path\":\"E2参考\",\"rule\":\"<h3>E2 表达式： <h3>\\n<p>用于处理文本的表达式，比如获取\\\"文本\\\"前的几个字，可以使用  .tz(文本)  获取到 \\\"用于处理\\\"  四个字。 E2函数名使用中文拼音首字命名，对不懂开发的人群也能轻松操作。</p>\\n\\n \\n\\n<p>为了更容易了解并使用函数，一般处理文本的函数均以 t 开头，比如取文本左边的 tz ， t = 文本，z 是左的拼音头，然后就能知道取文本右边函数为 ty  了。 处理数组的函数 以 i 开头，如 .ij(aaa)  ，j = 加， 往数据中加入一行数组，值为 aaa 。</p>\\n\\n \\n\\n<h3>文本操作类：</h3>\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.tz()&nbsp;&nbsp;.ty()&nbsp;&nbsp;取文本左、右数据。</p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.tz2()&nbsp;&nbsp;.ty2()&nbsp;&nbsp;从后读取判断值文本并取判断值左、右（前、后）数据。 若内容为  abbacc  时使用  .ty(a)  取得值为 bbacc ， 使用  .ty2(a)  取得值 为  cc 。</p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.t()&nbsp;&nbsp;删除HTML标识，无需提供参数，如内容为 &lt;p&gt;a&lt;/p&gt;b&lt;p&gt;  时去除html代码获取正文， 直接使用  .t()  即可，最终得到   ab 。</p>\\n\\n  \\n\\n<p>&nbsp;&nbsp;&nbsp;.tj()&nbsp;&nbsp;添加内容，如已有 ab 获取 abcd ： .tj(cd) </p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.tzc()&nbsp;&nbsp;参数为数字，如 tzc(5) 如果当前操作值字数大于 5 就取前5个字，少于则取全部。所以这里 zc 记最长。若操作值为 ABCDE  使用  .tzc(3) 得到 AB 。</p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.tsk()&nbsp;&nbsp;无参数，去首尾空，qswk 再加上 t 太长了不好记，就首空，意思就去首尾空，就是去掉操作首尾的空格字符。</p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.th()&nbsp;&nbsp;替换，参数为 欲被替换文本##替换文本。如内容为   ABC 时 需将 B 改成 2 ，可以使用 .th(B##2) 。 欲需将其置空不要，可以直接使用 .th(B) ，将得到  AB 。 同时 th 中欲被替换文本是支持正则表达式的，如果要替换的内容和正则通配符冲突的话，就需要写转义了。 比如相对复杂的内容  111ADGDGS333 将中间的英文字替换为333，可用  .th([A-Z]+##333)  。 如果你并不知道哪些是正则匹配符，建议使用 .th2()  唯一不同的是 th2 中欲被替换文本是不支持正则匹配的。</p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.tx()&nbsp;&nbsp;x 意思是 新，新的概念在下面的数组里也有相应的函数。 M浏览器扩展使用E2时都是要先定义源内容的，比如数据源爬虫就是读取到的网络内容，文本就是定义的文本。 这里假设源内容是  xByyEzz ， 需要获取  E 后面的值和 B 前面的值（其中内容 x y z 会动态变化），注意是E后面+B前面。 新的概念就是存储之前操作的值不变让后面操作的函数处理的是源内容。理解这句话应该知道怎么做了，分三步走，获取 E 的后面值 ty2(E)  ->  存储并将当前操作内容定义为源内容 tx()  -> 获取 B 前面值 .tz(B)。\\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;快速捋一篇， 源内容 xByyEzz 在使用 E2 时会自动将其转为操作值，跟着使用 ty2(E) ，取E后面就是将操作值置为 zz ， 接着使用 .tx() 存储操作值并将操作值设为源文本 xByyEzz ， 跟着 tz(B) 得到 x  。后面没有函数了，就将前面存储的值和操作值输出，最终得到   xyyzz 。 </p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.byt()&nbsp;&nbsp;用于HTML，匹配标签值数据，返回整个标签项目列表\\n<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&gt;&lt;h2&gt;我是标题&lt;/h2&gt;&lt;/div&gt;<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;h3&gt;/CCCC&lt;/h3&gt;<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;标题BBBB&lt;/p&gt;<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;取第1及第3行：.byt(标题)；获取 “&lt;p&gt;标题BBBB&lt;/p&gt;”  ：.byt(标题BBBB)  或者  .byt(标题).i(1)。</p>\\n\\n\\n\\n<h3>数组操作类：</h3>\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.i(正数)&nbsp;&nbsp;获取数组中第一个内容，从0开始，如获取第一个值 就 .i(0) ，第三个值 .i(2) 以此类推。</p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.i(负数)&nbsp;&nbsp;从数组尾部开始寻找，-1 即，数组倒数第一个值。 -2 数组倒数第二值，以此类推。</p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.i(数,数)&nbsp;&nbsp;取数组范围，理解了正数负数的用法这里的数可以自由填正数也可以负数，怎么好判断怎么来， 如有数组 [ab,ac,ad,ae] ，获取   ac,ad,ae ，即排除第一个： .i(1,-1)  ，排除最后一个：  .i(0,-2)。</p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.ij(添加的文本)&nbsp;&nbsp;将\\\"添加的文本\\\" 加入到数组中，比如数组已经有  [aa,bb,cc]  操作之后就等于  [aa,bb,cc,添加的文本]。</p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.is()&nbsp;&nbsp;正则匹配通过的数组会被删掉。</p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.il()&nbsp;&nbsp;正则匹配通过的数组会被保留。</p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.ix()&nbsp;&nbsp;存储数组，接着和 tx 类似，将操作值改为原文本。 注意数组操作时接着操作其它函数。</p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.it(分割符)&nbsp;&nbsp;E2里，i 表示数组，t 表示文本。将数组合并为文本且中间以参数分隔符作填充，若不填入参数则无分隔符。</p>\\n\\n \\n\\n \\n\\n<h3>正则表达式：</h3>\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.z()&nbsp;&nbsp;参数中若含括号必须添加转义给E2识别，若正则表达式中括号比较多在E2里看起来比较费眼，可在参数前后添加两个@标识内容为参数。 比如正则为   (a\\\\(b\\\\)c)|(x\\\\(y\\\\)z)  ，就是匹配  a(b)c 或 x(y) z， 在E2里必须给括号再添加一个转义符 \\\\ ，即 .z(\\\\(a\\\\\\\\(b\\\\\\\\)c\\\\)|\\\\(x\\\\\\\\(y\\\\\\\\)z\\\\))  这样就看起来很乱，那如果在参数两则加双@ 就可以写成  .z(@@(a\\\\(b\\\\)c)|(x\\\\(y\\\\)z)@@) 看起来相对会比较和谐。</p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.z2()&nbsp;&nbsp;匹配子表达式，同上一些编写，子表达式即为 正则中()里面的值，匹配后可以使用  .i() 获取指定括号内容。<br>\\n\\n&nbsp;&nbsp;&nbsp;&nbsp;注意若不使用@@全文转义符时，记得在内容括号前加 转义符 右斜杠！！！<br>\\n<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;明明18岁<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;丽丽17岁<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;李娜娜19岁<br>\\n<br>\\n&nbsp;&nbsp;a 获取 “明明18岁”：.z(.{2,3}\\\\d{2}岁)<br>\\n   \\n\\n&nbsp;&nbsp;b 获取娜娜几岁(19)：.z(.{2,3}\\\\d{2}岁).i(2).z2(.{2,3}\\\\(\\\\d{2}\\\\)岁)<br>\\n\\n&nbsp;&nbsp;a中若接口为返回文本，则相当与后方自动加了  .i(0) 函数，即取数组的第一个文本（数组计次从0开始）<br>\\n\\n&nbsp;&nbsp;b中先是用 .z() 全局匹配取得第3条数据，后用 .z2() 取子表达式的年龄数字</p>\\n\\n<h3>CSS选择器：</h3>\\n\\n<p>&nbsp;&nbsp;&nbsp;.get()&nbsp;&nbsp;使用海阔规则语法语法。xml也可以用。</p>\\n\\n<p>&nbsp;&nbsp;&nbsp;.geta()&nbsp;&nbsp;同上，但可以获取列表。</p>\\n\\n<p>&nbsp;&nbsp;&nbsp;.getp()&nbsp;&nbsp;功能与.get()一样，但是用于处理数组。</p>\\n\\n<h3>JSON解析器：</h3>\\n\\n<p>&nbsp;&nbsp;&nbsp;.toij()&nbsp;&nbsp;将字符串转为json对象。</p>\\n\\n<p>&nbsp;&nbsp;&nbsp;.json(参数名)&nbsp;&nbsp;用于读取json对象的子级。<p>\\n<p>\\n{<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;\\\"name\\\": \\\"BeJson\\\",<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;\\\"es\\\": {<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\"a\\\": \\\"科技园路.\\\",<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\"b\\\": \\\"中国\\\"<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;},<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;\\\"arr\\\": [<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\"name\\\": \\\"Baidu\\\",<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\"url\\\": \\\"http://www.baidu.com\\\"<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},{<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\"name\\\": \\\"Google\\\",<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\"url\\\": \\\"http://www.google.com\\\"<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;]<br>\\n}<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;获取 中国：.toij().json(es).json(b)；也可以匹配 函数 .i(v) 获取数组中的数据，获取 Google 的 url： .toij().json(arr).i(1).json(url)。</p>\\n\\n<h3>高级命令：</h3>\\n<p>&nbsp;&nbsp;&nbsp;.d(v)&nbsp;&nbsp;将文本进行URL解码，v == utf8、gbk等。</p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.en(v)&nbsp;&nbsp;将文本进行URL加密，v == utf8、gbk等。</p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.dn64()&nbsp;&nbsp;将文本进行Base64解码。</p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.en64()&nbsp;&nbsp;将文本进行Base64加密。</p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.c()&nbsp;&nbsp;取回源码，可选带参，带参则先将参数加入文本，后取回源码。</p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.ct()&nbsp;&nbsp;即连接该文本。类似上面 .c 带参，但不取回源数据。</p>    \\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.or()&nbsp;&nbsp;若前面规则已读到数据则不执行右边规则，否则重置执行位置继续执行规则。</p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.xu()&nbsp;&nbsp;不返回任何数据，继续以列表方式存入右则读到的数据。即左右两则数据均取。</p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.st(参数)&nbsp;&nbsp;将数组合并为文本，数组之间填充参数值。</p>\\n\\n \\n\\n<p>&nbsp;&nbsp;&nbsp;.fg(参数)&nbsp;&nbsp;分割文本返回数组，若参数为空则默认分割换行。</p>\\n\\n<p>&nbsp;&nbsp;&nbsp;.type()&nbsp;&nbsp;返回当前操作值的类型。</p>\\n   \\n<h2><big>\\n不同的操作类型函数不可以混用。\\n改自<a href=\\\"https://7cc7cc.com/thread-120.htm?type=last\\\">原文<a>\\n</big></h2>\"},{\"col_type\":\"movie_3\",\"name\":\"E2还原版\",\"path\":\"E2ToHiker2\",\"rule\":\"js:\\nconst E2Error = $.require(\\\"hiker://page/E2Error?rule=E2ToHiker\\\");\\nlet Jsoup = org.jsoup.Jsoup;\\n\\nfunction E2Hiker(value) {\\n    if (typeof value === \\\"string\\\") {\\n        this.source = value;\\n        this.value = value;\\n        this.xuArr = [];\\n        this.xObj = [];\\n    } else {\\n        throw new E2Error(\\\"E2Hiker需要一个string参数\\\", \\\"初始化错误\\\", value);\\n    }\\n}\\n\\nfunction split(text, target, count) {\\n    count = count === undefined ? 1 : count;\\n    let array = [text];\\n    for (let i = 0; i < count; i++) {\\n        text = array[i];\\n        let index = text.indexOf(target);\\n        if (index === -1) {\\n            break;\\n        }\\n        array[i] = text.slice(0, index);\\n        array[i + 1] = text.slice(index + target.length);\\n    }\\n    return array;\\n}\\n\\nfunction rsplit(text, target, count) {\\n    count = count === undefined ? 1 : count;\\n    let array = [text];\\n    for (let i = 0; i < count; i++) {\\n        text = array[0];\\n        let index = text.lastIndexOf(target);\\n        if (index === -1) {\\n            break;\\n        }\\n        array[0] = text.slice(0, index);\\n        array.splice(1, 0, text.slice(index + target.length));\\n    }\\n    return array;\\n}\\nE2Hiker.prototype = {\\n    constructor: E2Hiker,\\n    getValue(type) {\\n        let Ttype = Object.prototype.toString.call(this.value);\\n        type = \\\"[object \\\" + type + \\\"]\\\";\\n\\n        if (Ttype === type) {\\n            return this.value;\\n        } else if (type === \\\"[object String]\\\" && Ttype === \\\"[object Array]\\\") {\\n            return this.value[0] || \\\"\\\";\\n        } else if (Ttype === \\\"[object String]\\\" && type === \\\"[object Array]\\\") {\\n            return [this.value];\\n        } else {\\n            throw new E2Error(\\\"函数需要\\\" + type + \\\"类型，而真实类型为\\\" + Ttype, undefined, this.value, \\\"dataType\\\");\\n        }\\n    },\\n    setValue(data) {\\n        if (typeof data === \\\"number\\\") {\\n            data = data + \\\"\\\";\\n        }\\n        this.value = data;\\n    },\\n    valueOf() {\\n        if (this.xuArr.length !== 0) {\\n            if (Array.isArray(this.value)) {\\n                return this.xuArr.concat(this.value);\\n            } else if (typeof this.value === \\\"object\\\") {\\n                this.xuArr.push(JSON.stringify(this.value));\\n                return this.xuArr;\\n            } else {\\n                this.xuArr.push(this.value);\\n                return this.xuArr;\\n            }\\n        } else {\\n            if (!Array.isArray(this.value) && typeof this.value === \\\"object\\\") {\\n                return JSON.stringify(this.value);\\n            } else {\\n                return this.value;\\n            }\\n        }\\n    },\\n    ty(target) {\\n        let data = this.getValue(\\\"String\\\");\\n        this.setValue(split(data, target)[1] || \\\"\\\");\\n    },\\n    ty2(target) {\\n        let data = this.getValue(\\\"String\\\");\\n        this.setValue(rsplit(data, target)[1] || \\\"\\\");\\n    },\\n    tz(target) {\\n        let data = this.getValue(\\\"String\\\");\\n        this.setValue(split(data, target)[0] || \\\"\\\");\\n    },\\n    tz2(target) {\\n        let data = this.getValue(\\\"String\\\");\\n        this.setValue(rsplit(data, target)[0] || \\\"\\\");\\n    },\\n    t() {\\n        let data = this.getValue(\\\"String\\\");\\n        this.setValue(data.replace(/<[^>]+>/g, \\\"\\\"));\\n    },\\n    tj(target) {\\n        this.setValue(this.getValue(\\\"String\\\") + target);\\n    },\\n    tzc(target) {\\n        let index = Number(target);\\n        this.setValue(this.getValue(\\\"String\\\").substring(0, index));\\n    },\\n    tsk() {\\n        this.setValue(this.getValue(\\\"String\\\").trim());\\n    },\\n    th(target) {\\n        let targetArr = split(target, \\\"##\\\");\\n        if (targetArr.length === 1) {\\n            return this.tz(target);\\n        }\\n        let reg = new RegExp(targetArr[0], \\\"g\\\");\\n        this.setValue(this.getValue(\\\"String\\\").replace(reg, targetArr[1]));\\n    },\\n    th2(target) {\\n        let targetArr = split(target, \\\"##\\\");\\n        if (targetArr.length === 1) {\\n            return this.tz(target);\\n        }\\n        this.setValue(this.getValue(\\\"String\\\").split(targetArr[0]).join(targetArr[1]));\\n    },\\n    /*tvar(target) {\\n        let data = this.getValue(\\\"String\\\");\\n        this.xObj[target]=data;\\n        this.setValue(this.source);\\n    },\\n    trl(target) {\\n        let data = this.getValue(\\\"String\\\");\\n        let y = this.xObj[target]||\\\"\\\";\\n        this.setValue(data+y);\\n    },\\n    tll(target) {\\n        let data = this.getValue(\\\"String\\\");\\n        let y = this.xObj[target]||\\\"\\\";\\n        this.setValue(y+data);\\n    },*/\\n    tx() {\\n        let data = this.getValue(\\\"String\\\");\\n        if (data.indexOf(this.source) + this.source.length !== data.length) {\\n            this.setValue((this.xuArr.pop() || \\\"\\\") + data + this.source);\\n\\n        }\\n    },\\n    byt(target) {\\n        parseDomForArray(this.getValue(\\\"String\\\"), \\\"html&&*:contains(\\\" + target + \\\")\\\");\\n    },\\n    fg(target) {\\n        let reg = new RegExp(target);\\n        this.setValue(this.getValue(\\\"String\\\").split(reg));\\n    },\\n    en64() {\\n        this.setValue(base64Encode(this.getValue(\\\"String\\\")));\\n    },\\n    dn64() {\\n        this.setValue(base64Decode(this.getValue(\\\"String\\\")));\\n    },\\n    d(v) {\\n        this.setValue(decodeStr(this.getValue(\\\"String\\\"), v));\\n    },\\n    en(v) {\\n        this.setValue(encodeStr(this.getValue(\\\"String\\\"), v));\\n    },\\n    tot() {\\n        this.setValue(JSON.stringify(this.getValue(\\\"String\\\")));\\n    },\\n    /*toij() {\\n        this.setValue(JSON.parse(this.getValue(\\\"String\\\")));\\n    },*/\\n    type() {\\n        this.setValue(Object.prototype.toString.call(this.value));\\n    },\\n    i(target) {\\n        let data = this.value;\\n        let [s, e] = split(target, \\\",\\\");\\n        if (e === undefined) {\\n            s = Number(s);\\n            if (s >= 0 && s < data.length) {\\n                this.setValue(data[s]);\\n            } else if (s < 0 && data.length + s >= 0) {\\n                this.setValue(data[data.length + s]);\\n            }\\n        } else {\\n            this.setValue(data.slice(s, e));\\n        }\\n    },\\n    ij(target) {\\n        let data = this.getValue(\\\"Array\\\");\\n        data.push(target);\\n        this.setValue(data);\\n    },\\n    is(target) {\\n        let reg = new RegExp(target);\\n        let data = this.getValue(\\\"Array\\\");\\n        let newData = data.filter(item => !item.test(reg));\\n        this.setValue(newData);\\n    },\\n    il(target) {\\n        let reg = new RegExp(target);\\n        let data = this.getValue(\\\"Array\\\");\\n        let newData = data.filter(item => item.test(reg));\\n        this.setValue(newData);\\n    },\\n    it(target) {\\n        let data = this.getValue(\\\"Array\\\");\\n        this.setValue(data.join(target));\\n    },\\n    ix() {\\n        let data = this.getValue(\\\"Array\\\");\\n        this.xuArr = this.xuArr.concat(data);\\n        this.setValue(this.source);\\n    },\\n    dx() {\\n        let data = this.getValue(\\\"Array\\\");\\n        data.reverse();\\n    },\\n    get(target) {\\n        try {\\n            let data = this.getValue(\\\"String\\\");\\n            let doc = Jsoup.parseBodyFragment(data);\\n            let select = doc.select(target);\\n            select = select.toArray();\\n            let newdata = [];\\n            for (let item of select) {\\n                newdata.push(String(item.outerHtml()));\\n            }\\n            this.setValue(newdata);\\n        } catch (e) {\\n            this.setValue(\\\"\\\");\\n        }\\n\\n    },\\n    a(target) {\\n        try {\\n            let data = this.getValue(\\\"String\\\");\\n            let doc = Jsoup.parse(data);\\n            let attr = \\\"\\\";\\n            let body = doc.body().select(\\\"*\\\").eq(1);\\n            if (body.hasAttr(target)) {\\n                attr = String(body.attr(target));\\n            }\\n            this.setValue(attr);\\n        } catch (e) {\\n            this.setValue(\\\"\\\");\\n        }\\n    },\\n    json(target) {\\n        if (target != \\\"\\\") {\\n            try {\\n                let data = JSON.parse(this.getValue(\\\"String\\\"))[target];\\n                this.setValue(data === undefined ? \\\"\\\" : typeof data === \\\"string\\\" ? data : JSON.stringify(data));\\n            } catch (e) {\\n                throw new E2Error(\\\"无法将其转换为 JSON对象:\\\" + target + \\\"\\\\n\\\" + e.message, undefined, this.value, \\\"dataType\\\");\\n            }\\n        } else {\\n            try {\\n                let data = JSON.parse(this.getValue(\\\"String\\\"));\\n                if (Array.isArray(data)) {\\n                    this.setValue(data);\\n                } else {\\n                    this.setValue(\\\"\\\");\\n                }\\n            } catch (e) {\\n                this.setValue(\\\"\\\");\\n            }\\n        }\\n    },\\n    c(target) {\\n        let data = this.value;\\n        if (Array.isArray(data)) {\\n            data = data[0] === undefined ? \\\"\\\" : data[0];\\n        } else if (typeof data === \\\"object\\\") {\\n            data = JSON.stringify(data);\\n        }\\n        this.setValue(data + target + this.source);\\n    },\\n    ct(target) {\\n        let data = this.value;\\n        if (Array.isArray(data)) {\\n            data = data[0] === undefined ? \\\"\\\" : data[0];\\n        } else if (typeof data === \\\"object\\\") {\\n            data = JSON.stringify(data);\\n        }\\n        this.setValue(data + target);\\n    },\\n    or() {\\n        if (this.value !== \\\"\\\" && this.value !== undefined) {\\n            return true;\\n        } else {\\n            this.setValue(this.source);\\n            return false;\\n        }\\n    },\\n    xu() {\\n        let data = this.value;\\n        if (Array.isArray(data)) {\\n            for (let v of data) {\\n                this.xuArr.push(v);\\n            }\\n        } else if (typeof data === \\\"object\\\") {\\n            this.xuArr.push(JSON.stringify(data));\\n        } else {\\n            this.xuArr.push(data);\\n        }\\n        this.setValue(this.source);\\n    },\\n    st(target) {\\n        this.it(target);\\n    },\\n    z(target) {\\n        let data = this.getValue(\\\"String\\\");\\n        let reg = new RegExp(target, \\\"g\\\");\\n        let newdata = data.match(reg) || [];\\n        this.setValue(newdata);\\n    },\\n    z2(target) {\\n        let data = this.getValue(\\\"String\\\");\\n        let reg = new RegExp(target);\\n        let newdata = data.match(reg) || [];\\n        if (newdata.length > 0) {\\n            newdata.splice(0, 1);\\n        }\\n        this.setValue(newdata);\\n    }\\n}\\n$.exports = E2Hiker;\"},{\"col_type\":\"movie_3\",\"name\":\"get e2Rex\",\"path\":\"getE2Rex\",\"rule\":\"js:\\n//const E2Hiker = $.require(\\\"hiker://page/E2ToHiker?rule=E2ToHiker\\\");\\n//const E2Hiker = $.require(\\\"hiker://page/E2ToHiker2?rule=E2ToHiker\\\");\\nconst E2Error = $.require(\\\"hiker://page/E2Error?rule=E2ToHiker\\\");\\nfunction getE2Rex(E2Hiker,t,r) {\\n    let arr = [];\\n    let funcName = \\\"\\\",\\n        funcParam = \\\"\\\";\\n    let status = 0;\\n    let tran = false;\\n    for (let i = 0; i < r.length; i++) {\\n        let k = r[i],\\n            s = i > 0 ? r[i - 1] : \\\"\\\",\\n            x = i + 1 < r.length ? r[i + 1] : \\\"\\\";\\n        if (k === \\\".\\\" && status === 0) {\\n            status = 1;\\n            continue;\\n        } else if (status === 1 && k !== \\\"(\\\") {\\n            funcName += k;\\n            continue;\\n        } else if (status === 1 && k === \\\"(\\\") {\\n            if (k + r[i + 1] + r[i + 2] === \\\"(@@\\\") {\\n                i++, i++;\\n                status = 3;\\n            } else {\\n                status = 2;\\n            }\\n            continue;\\n        } else if (status === 3 && k + r[i + 1] + r[i + 2] !== \\\"@@)\\\") {\\n            funcParam += k;\\n            continue;\\n        } else if (status === 3 && k + r[i + 1] + r[i + 2] === \\\"@@)\\\") {\\n            i++, i++;\\n            arr.push([funcName, funcParam]);\\n            status = 0, funcName = \\\"\\\", funcParam = \\\"\\\";\\n            continue;\\n        } else if (status === 2 && tran) {\\n            tran = false;\\n            funcParam += k;\\n            continue;\\n        } else if (status === 2 && k === \\\"\\\\\\\\\\\") {\\n            tran = true;\\n            funcParam += k;\\n            continue;\\n        } else if (status === 2 && k !== \\\")\\\" && k !== \\\"\\\\\\\\\\\") {\\n            funcParam += k;\\n            continue;\\n        } else if (status === 2 && k === \\\")\\\") {\\n            if ([\\\"z\\\", \\\"z2\\\", \\\"th\\\", \\\"fg\\\"].includes(funcName)) {\\n                funcParam = funcParam.replace(/\\\\\\\\\\\\)/g, \\\")\\\").replace(/\\\\\\\\\\\\(/g, \\\"(\\\");\\n            }\\n            arr.push([funcName, funcParam]);\\n            status = 0, funcName = \\\"\\\", funcParam = \\\"\\\";\\n            continue;\\n        } else {\\n            throw new E2Error(\\\"未发现函数起始符[.]:)\\\",r,t);\\n        }\\n    }\\n    if (status !== 0) {\\n        throw new E2Error(\\\"找不到结束符[)]\\\",r,t);\\n    }\\n    let e2Hiker = new E2Hiker(t);\\n    var target;\\n    try {\\n        for (target of arr) {\\n            let y = e2Hiker[target[0]](target[1]);\\n            if (target[0] === \\\"or\\\" && y === true) {\\n                break;\\n            }\\n        }\\n    } catch (e) {\\n        if(e.type===\\\"dataType\\\"){\\n            e.rule=target[0];\\n            throw e;\\n        }else if(/Cannot find function (.*?) /.test(e.message)){\\n            throw new E2Error(\\\"未知的函数\\\"+RegExp.$1,r,t);\\n        }else{\\n            throw e;\\n        }\\n    }\\n    return e2Hiker.valueOf();\\n}\\n\\n$.exports = getE2Rex;\"},{\"col_type\":\"movie_3\",\"name\":\"E2Rex2\",\"path\":\"E2Rex2\",\"rule\":\"js:\\nconst getE2Rex = $.require(\\\"hiker://page/getE2Rex?rule=E2ToHiker\\\");\\nconst E2Hiker = $.require(\\\"hiker://page/E2ToHiker2?rule=E2ToHiker\\\")\\nfunction e2Rex(t,r){\\n    return getE2Rex(E2Hiker,t,r);\\n}\\n$.exports = e2Rex;\"},{\"col_type\":\"movie_3\",\"name\":\"完整查看\",\"path\":\"ViewText\",\"rule\":\"js:\\nvar {title,text}=MY_PARAMS;\\nsetPageTitle(\\\"查看完整:\\\" + title);\\nlet mark = getVar(\\\"e2.Mark\\\");\\n\\nvar d = [];\\nd.push({\\n    title: \\\"转为源文本\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule(text => {\\n        putVar(\\\"e2.Source\\\", text);\\n        back();\\n        return \\\"hiker://empty\\\";\\n    }, text),\\n    col_type: \\\"text_2\\\"\\n}, {\\n    title: \\\"复制内容\\\",\\n    url: \\\"copy://\\\" + text,\\n    col_type: \\\"text_2\\\"\\n});\\n/*\\nif ((typeof getAppVersion === \\\"function\\\") && (getAppVersion() >= 1863)) {\\n    addListener('onClose', 'putVar(\\\"e2.Mark\\\",\\\"\\\")');\\n}\\nd.push({\\n    title: \\\"标记\\\",\\n    url: \\\"putVar('e2.Mark',input);refreshPage(false)\\\",\\n    col_type: \\\"input\\\",\\n    desc: \\\"输入需要标红的字符\\\",\\n    extra: {\\n        defaultValue: mark\\n    }\\n});\\n\\n// 字符过滤器\\nconst matchList  = {\\n  \\\"<\\\":\\\"&lt;\\\",\\n  \\\">\\\": \\\"&gt;\\\",\\n  \\\"&\\\": \\\"&amp;\\\",\\n  '\\\"': \\\"&quot;\\\",\\n  \\\"'\\\": \\\"acute;\\\",\\n  \\\" \\\": \\\"&nbsp;\\\",\\n  \\\"\\\\n\\\":\\\"<br>\\\"\\n}\\n// 字符过滤器\\nfunction htmlEscape(text){\\n  let regStr = '(' + Object.keys(matchList).toString() + ')'\\n  regStr = regStr.replace(/,/g, ')|(')  \\n  const regExp = new RegExp(regStr, 'g')\\n  return text.replace(regExp, match => matchList[match])\\n}\\n\\ntext=htmlEscape(text);\\nif(mark!==\\\"\\\"){\\n    mark=htmlEscape(mark);\\n    let markz=new RegExp(mark,\\\"g\\\");\\n    text=text.replace(markz,t=>\\\"<font color='red'>\\\"+t+\\\"</font>\\\");\\n}\\n*/\\nd.push({\\n    col_type: \\\"line_blank\\\"\\n}, {\\n    title: text,\\n    col_type: \\\"long_text\\\"\\n}, {\\n    col_type: \\\"line_blank\\\"\\n});\\nsetResult(d);\"}]"},{"last_chapter_rule":"","pageList":[],"title":"阿里盘搜","author":"小棉袄🌞","version":4,"url":"hiker://empty","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nd.push({\n    title: \"搜索\",\n    url: \"'hiker://search?s='+input+'&rule=阿里盘搜'\",\n    col_type: \"input\",\n    desc: \"搜你想要的\",\n    pic_url: \"\"\n});\nd.push({\n    title: '““””<small><font color=#871f78>以上数据来源于网络，如您喜欢，请支持官方</font></small>',\n    desc: '““””<small><font color=#f20c00>此规则仅限学习交流使用，请于导入后24小时内删除，任何组织或个人不得以任何方式方法传播此规则的整体或部分！</font></small>',\n    url: MY_URL,\n    col_type: 'text_center_1'\n});\nsetResult(d);","searchFind":"#res_list&&.resource-item;h1&&Text;a&&href;.resource-meta,1&&span&&.em,-1&&Text;.resource-meta&&Text+'\\n'+.resource-meta,1&&Text;*","search_url":"https://www.alipanso.com/search.html?page=fypage&keyword=**","titleColor":"","group":"⑥不常用🔧","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","icon":"https://www.alipanso.com/static/img/mlogo.png"},{"last_chapter_rule":"","pageList":[],"title":"免嗅解析测试","author":"道长","version":8,"url":"hiker://empty","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nlet d=[];\r\nd.push({\ncol_type:\"x5_webview_single\",\ndesc:\"255&&float\"\n});\nd.push({\n    title:\"如果第一个按钮播放不了，请安装x5线上内核\",\ndesc:\"请确保道长仓库Pro为最新版\\n浏览器功能设置-腾讯x5调试-安装线上内核\",\n    col_type:\"text_1\",\n    url:\"hiker://empty\"\n});\nd.push(\n{\n    title:\"解析播放\",\n    url:$().lazyRule(()=>{\n        let realurl = 'https://v.qq.com/x/cover/mzc00200mc0iw1e/c0040tq98cd.html';\r\nlet playUrl ='https://jx.parwix.com:4433/player/?url=' +realurl;\nconst {lazyParse} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\nplayUrl=\"https://test.rongxingvr.com/test/?url=\"+realurl;\n//playUrl=\"http://cache.languang.icu:88/didi.php?url=\"+realurl;\nplayUrl=\"https://player.maqq.cn/?xurl=\"+realurl;\n//playUrl=\"http://okjx.cc/?url=https://v.qq.com/x/cover/mzc002003vpbryd.html?ptag=sogou.movie.pay&fromvsogou=1\";\n//playUrl=\"https://cdn.zoubuting.com/20210630/xhXpCVst/index.m3u8\";\nplayUrl=\"https://fantuan.tv/vodplay/132655-2-1.html\";\nreturn lazyParse(playUrl,5000)\n    }),\n    col_type:\"text_1\",\n    extra: {\n        ua: MOBILE_UA\n    },\n}\n);\n\nd.push(\n{\n    title:\"套皮播放\",\n    url:$().lazyRule(()=>{\n        let realurl = 'https://v.qq.com/x/cover/mzc00200mc0iw1e/c0040tq98cd.html';\r\nlet x5Url ='https://jx.parwix.com:4433/player/?url=' +realurl;\nreturn x5Url\n        \n    }),\n    col_type:\"text_1\"\n}\n);\nd.push(\n{\n    title:\"x5播放\",\n    url:$().lazyRule(()=>{\n        let realurl = 'https://v.qq.com/x/cover/mzc00200mc0iw1e/c0040tq98cd.html';\r\nlet x5Url ='https://jx.parwix.com:4433/player/?url=' +realurl;\nrefreshX5WebView(\"\");\nreturn \"x5WebView://\"+x5Url\n        \n    }),\n    col_type:\"text_1\"\n}\n);\nsetResult(d);","searchFind":"","search_url":"","titleColor":"#ff13b66a","group":"⑥不常用🔧","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"主页","path":"homeIndex","rule":"js:\n    const {genRule}=$.require(\"hiker://page/genApi?rule=道长仓库Pro\");\nconst {color, small} = $.require(\"hiker://page/utiliy?rule=道长仓库Pro\");\naddListener('onClose', $.toString(()=>{\n    clearVar(\"house.qhj\");\n}));\nlet d=[];\nd.push(\n    {\n        title:\"轻合集生成小程序1.1.0\",\n        col_type:\"text_1\",\n        url:$(\"按照对应格式输入就行了,要来个示例吗？\\n支持本地文件与在线文件\").confirm(()=>{\n            putVar(\"house.qhj\",\"轻合集.逐风者@http://hiker.nokia.press/hikerule/dev/json_list?name=510381049\");\n            refreshPage(true);\n        })\n    });\nlet sel_title = ['共享','自用'].map((it) => {\n    let qhj_mode = getItem('house.qhj_mode','共享');\n    if(it===qhj_mode){\n        return '👉'+it;\n    }else{\n        return it;\n    }\n});\nd.push(\n    {\n        title:\"当前模式:\"+color(getItem('house.qhj_mode','共享'),'#ff7000'),\n        col_type:\"text_1\",\n        url:$(sel_title,2).select(() => {\n            setItem('house.qhj_mode',input.replace('👉',''));\n            refreshPage(true);\n            return 'toast://已设置生成模式为:'+input\n        })\n});\n\nd.push({\n    title: '生成',\n    desc: \"轻合集.dz@http://hiker.nokia.press/hikerule/dev/json_list?name=510381049\",\n    extra: {\n        onChange: \"putVar('house.qhj',input)\",\n        titleVisible: true,\n        defaultValue:getVar('house.qhj')\n    },\n    url:$.toString((genRule) => {\n        // 定义字符串替换全部函数\n        if(getVar('house.qhj')&&getVar('house.qhj').includes('@')) {\n            let new_name = getVar('house.qhj').split('@')[0];\n            let new_url = getVar('house.qhj').split('@')[1];\n            if(!new_url.startsWith('http')){\n                if(new_url.startsWith('/storage/')||new_url.startsWith('/sdcard/')){\n                    new_url = 'file://'+new_url;\n                }else if(new_url.startsWith('hiker://')){\n\n                }else {\n                    return 'toast://文件地址有误'\n                }\n            }\n            if(getItem('house.qhj_mode','共享')==='共享'){\n                if(!new_url.startsWith('http')){\n                    let text = fetch(new_url);\n                    if(text&&text.length>2){//本地有内容且两个字符以上\n                        try {\n                            JSON.parse(text);\n                            const {taskCall, taskRun,taskReq} = $.require(\"hiker://page/taskCall?rule=道长仓库Pro\");\n                            log('开始执行任务仓库获取文件外链');\n                            let result = taskCall(15,'uploadText',[new_name+'.json',text]);\n                            let short_url = new_url;\n                            log('返回状态码:'+result.status);\n                            if (result.status == 0) {\n                                short_url = result.result[0];\n                                log(short_url);\n                            }\n                            let import_rule=genRule(new_name,short_url);\n                            copy(import_rule);\n                            putVar(\"import_rule\",import_rule);\n                            refreshPage(true);\n                            return 'toast://成功生成轻合集:' + new_name+'并复制到剪切板';\n                        }catch (e) {\n\n                        }\n                    }\n                }\n            }\n            let import_rule=genRule(new_name,new_url);\n            copy(import_rule);\n            putVar(\"import_rule\",import_rule);\n            refreshPage(true);\n            return 'toast://成功生成轻合集:' + new_name+'并复制到剪切板';\n        }else{\n            return 'toast://你个憨批，本道不陪你玩了';\n        }\n    },genRule),\n    col_type: \"input\"\n});\nd.push({\n    title:\"复制剪切板口令\",\n    desc:\"生成后会自动复制,这里留个复制历史记录\",\n    col_type:\"text_1\",\n    url:$().lazyRule(()=>{\n        copy(getVar(\"import_rule\"));\n        return \"hiker://empty\"\n    })\n});\nd.push({\n    title: '““””<span style=\"color: #ff7000\">导入轻合集</span>',\n    url: $().lazyRule((import_rule)=>{\n        if(!import_rule){\n            return 'toast://没有历史口令，无法导入';\n        }\n        let ruleCode=parsePaste(import_rule.split(\"\\n\")[0]);\n        importUrl = 'rule://' + base64Encode(ruleCode);\n        return importUrl\n    },getVar(\"import_rule\")),\n    col_type: 'text_1'\n});\nd.push({\n    title:getVar(\"import_rule\"),\n    col_type:\"long_text\"\n});\n\nsetResult(d)"}],"title":"轻合集生成器","author":"道长","version":10,"url":"hiker://empty","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\neval(JSON.parse(fetch('hiker://page/homeIndex')).rule);","searchFind":"","search_url":"","titleColor":"#ff13b66a","group":"⑥不常用🔧","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"主页\",\"path\":\"homeIndex\",\"rule\":\"js:\\n    const {genRule}=$.require(\\\"hiker://page/genApi?rule=道长仓库Pro\\\");\\nconst {color, small} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\naddListener('onClose', $.toString(()=>{\\n    clearVar(\\\"house.qhj\\\");\\n}));\\nlet d=[];\\nd.push(\\n    {\\n        title:\\\"轻合集生成小程序1.1.0\\\",\\n        col_type:\\\"text_1\\\",\\n        url:$(\\\"按照对应格式输入就行了,要来个示例吗？\\\\n支持本地文件与在线文件\\\").confirm(()=>{\\n            putVar(\\\"house.qhj\\\",\\\"轻合集.逐风者@http://hiker.nokia.press/hikerule/dev/json_list?name=510381049\\\");\\n            refreshPage(true);\\n        })\\n    });\\nlet sel_title = ['共享','自用'].map((it) => {\\n    let qhj_mode = getItem('house.qhj_mode','共享');\\n    if(it===qhj_mode){\\n        return '👉'+it;\\n    }else{\\n        return it;\\n    }\\n});\\nd.push(\\n    {\\n        title:\\\"当前模式:\\\"+color(getItem('house.qhj_mode','共享'),'#ff7000'),\\n        col_type:\\\"text_1\\\",\\n        url:$(sel_title,2).select(() => {\\n            setItem('house.qhj_mode',input.replace('👉',''));\\n            refreshPage(true);\\n            return 'toast://已设置生成模式为:'+input\\n        })\\n});\\n\\nd.push({\\n    title: '生成',\\n    desc: \\\"轻合集.dz@http://hiker.nokia.press/hikerule/dev/json_list?name=510381049\\\",\\n    extra: {\\n        onChange: \\\"putVar('house.qhj',input)\\\",\\n        titleVisible: true,\\n        defaultValue:getVar('house.qhj')\\n    },\\n    url:$.toString((genRule) => {\\n        // 定义字符串替换全部函数\\n        if(getVar('house.qhj')&&getVar('house.qhj').includes('@')) {\\n            let new_name = getVar('house.qhj').split('@')[0];\\n            let new_url = getVar('house.qhj').split('@')[1];\\n            if(!new_url.startsWith('http')){\\n                if(new_url.startsWith('/storage/')||new_url.startsWith('/sdcard/')){\\n                    new_url = 'file://'+new_url;\\n                }else if(new_url.startsWith('hiker://')){\\n\\n                }else {\\n                    return 'toast://文件地址有误'\\n                }\\n            }\\n            if(getItem('house.qhj_mode','共享')==='共享'){\\n                if(!new_url.startsWith('http')){\\n                    let text = fetch(new_url);\\n                    if(text&&text.length>2){//本地有内容且两个字符以上\\n                        try {\\n                            JSON.parse(text);\\n                            const {taskCall, taskRun,taskReq} = $.require(\\\"hiker://page/taskCall?rule=道长仓库Pro\\\");\\n                            log('开始执行任务仓库获取文件外链');\\n                            let result = taskCall(15,'uploadText',[new_name+'.json',text]);\\n                            let short_url = new_url;\\n                            log('返回状态码:'+result.status);\\n                            if (result.status == 0) {\\n                                short_url = result.result[0];\\n                                log(short_url);\\n                            }\\n                            let import_rule=genRule(new_name,short_url);\\n                            copy(import_rule);\\n                            putVar(\\\"import_rule\\\",import_rule);\\n                            refreshPage(true);\\n                            return 'toast://成功生成轻合集:' + new_name+'并复制到剪切板';\\n                        }catch (e) {\\n\\n                        }\\n                    }\\n                }\\n            }\\n            let import_rule=genRule(new_name,new_url);\\n            copy(import_rule);\\n            putVar(\\\"import_rule\\\",import_rule);\\n            refreshPage(true);\\n            return 'toast://成功生成轻合集:' + new_name+'并复制到剪切板';\\n        }else{\\n            return 'toast://你个憨批，本道不陪你玩了';\\n        }\\n    },genRule),\\n    col_type: \\\"input\\\"\\n});\\nd.push({\\n    title:\\\"复制剪切板口令\\\",\\n    desc:\\\"生成后会自动复制,这里留个复制历史记录\\\",\\n    col_type:\\\"text_1\\\",\\n    url:$().lazyRule(()=>{\\n        copy(getVar(\\\"import_rule\\\"));\\n        return \\\"hiker://empty\\\"\\n    })\\n});\\nd.push({\\n    title: '““””<span style=\\\"color: #ff7000\\\">导入轻合集</span>',\\n    url: $().lazyRule((import_rule)=>{\\n        if(!import_rule){\\n            return 'toast://没有历史口令，无法导入';\\n        }\\n        let ruleCode=parsePaste(import_rule.split(\\\"\\\\n\\\")[0]);\\n        importUrl = 'rule://' + base64Encode(ruleCode);\\n        return importUrl\\n    },getVar(\\\"import_rule\\\")),\\n    col_type: 'text_1'\\n});\\nd.push({\\n    title:getVar(\\\"import_rule\\\"),\\n    col_type:\\\"long_text\\\"\\n});\\n\\nsetResult(d)\"}]","icon":""}]
